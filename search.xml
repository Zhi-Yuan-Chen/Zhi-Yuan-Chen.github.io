<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HGCN论文模型代码follow</title>
      <link href="1288.html"/>
      <url>1288.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="1、摘要"><a href="#1、摘要" class="headerlink" title="1、摘要"></a>1、摘要</h2><ul><li>论文解决的问题是什么？</li></ul><blockquote><p>In this paper, we study the problem<br>of heterogeneous graph-enhanced relational learning for recom-<br>mendation. </p></blockquote><p>在推荐系统里面解决异构图增强学习</p><ul><li>框架的理解：</li></ul><p>Heterogeneous Graph Contrastive Learning (HGCL)：异构图对比学习</p><p>①这个框架可以能够将异构关系语义合并到结合到用户-项目交互建模中</p><p>②鉴于异构边信息<code>heterogeneous side information</code>在用户和物品不同，使用元网络<code>meta networks</code>增强异构图对比学习，以允许具有自适应对比增强的个性化知识转换器</p><ul><li>实验效果：</li></ul><blockquote><p>The experimental results on three real-world datasets<br>demonstrate the superiority of HGCL over state-of-the-art recom-<br>mendation methods. Through ablation study, key components in<br>HGCL method are validated to benefit the recommendation perfor-<br>mance improvement. The source code of the model implementation<br>is available at the link <a href="https://github.com/HKUDS/HGCL">https://github.com/HKUDS/HGCL</a>.</p></blockquote><p>在三个数据集上进行了研究，比最先进的<code>state-of-the-art</code>推荐系统的方法好。</p><p>并且进行了消融实验。消融实验的理解：</p><p>:::primary<br>消融研究对于深度学习研究至关重要。理解系统中的因果关系是产生可靠知识的最直接方式（任何研究的目标）。消融是一种非常省力的方式来研究因果关系。<br>如果您采用任何复杂的深度学习实验设置，您可能会删除一些模块（或用随机的模块替换一些训练有素的功能）而不会降低性能。消除研究过程中的噪音：进行消融研究。<br>如果您无法完全理解您的系统？很多活动部件，想确定它的工作原因是否与您的假设密切相关？尝试删除东西。花费至少约10％的实验时间来诚实地反驳你的论文。<br>:::</p><h2 id="2、介绍-INTRODUCTION"><a href="#2、介绍-INTRODUCTION" class="headerlink" title="2、介绍(INTRODUCTION)"></a>2、介绍(INTRODUCTION)</h2><p>①GNN在推荐系统里面编码用户和商品的关系中大放异彩，关键思想是通过聚合图传播层上的邻居的特征信息来学习节点表示(节点包括<code>user</code>和<code>item</code>)。但是现在很多基于<code>GNN</code>的协同过滤模型<code> collaborative filtering (CF) models</code>仅关注同质信息。HGCL解决了这个问题。</p><p>②当前大部分的异构图神经网络受到了稀疏训练标签的限制，即目前的异构图神经网络对标签很敏感，可能会因此没法产生高质量的<code> user/item embeddings</code>,用于模型优化。所以引入了图对比自监督学习<code>Contrastive self-supervised learning</code>,GCL可以有效解决缺乏足够观察标签的问题。GCL的核心思想：正对比样本的表示之间的一致性将被最大化，而负对的嵌入之间的距离将被推开(<del>应该是最小化的意思？</del>)。</p><p>③边信息之间的依赖关系和用户-物品交互建模往往不是单一的，而是具有多样性的。本文学习了一个对比增强器<code>contrastive augmentor</code></p><p>本文实质上要解决的问题：</p><ul><li>如何有效地跨不同视图迁移辅助知识</li><li>如何通过个性化增强进行异构关系对比学习</li></ul><p>进入框架：</p><ol><li>利用<code>异质图神经网络</code>作为编码器，在编码嵌入中保留了异质关系的丰富语义。</li><li>为了应对个性化增强，我们提出了一个定制的对比学习框架，该框架设计了一个<code>元网络</code>来编码用户和项目的个性化特征。它允许我们执行特定于用户和项目的增强，以跨不同的关系视图传递信息信号。</li></ol><p><del>怎么感觉这篇论文像把别人的工作缝合起来就变成了自己的工作捏</del></p><h2 id="3、相关的工作"><a href="#3、相关的工作" class="headerlink" title="3、相关的工作"></a>3、相关的工作</h2><h3 id="3-1-基于gnn的推荐系统"><a href="#3-1-基于gnn的推荐系统" class="headerlink" title="3.1 基于gnn的推荐系统"></a>3.1 基于gnn的推荐系统</h3><h3 id="3-2-推荐系统中的对比学习"><a href="#3-2-推荐系统中的对比学习" class="headerlink" title="3.2 推荐系统中的对比学习"></a>3.2 推荐系统中的对比学习</h3><p>对比自监督学习生成的自监督信号可以用来丰富用户表示学习。在推荐系统中，对比学习可以成为一个强大的工具，将自监督信号与对比表示视图之间的对齐结合起来进行数据增强。</p><h3 id="3-3-异构图学习"><a href="#3-3-异构图学习" class="headerlink" title="3.3 异构图学习"></a>3.3 异构图学习</h3><h2 id="4、方法"><a href="#4、方法" class="headerlink" title="4、方法"></a>4、方法</h2><p>ok，进入框架的具体部分咯</p><p><img src="https://s2.loli.net/2023/07/25/yrbAMeiN3cOn7pC.png" alt="毕设图片1.png"></p><h4 id="4-1-符号表示"><a href="#4-1-符号表示" class="headerlink" title="4.1 符号表示"></a>4.1 符号表示</h4><ul><li>用户-商品图：$\mathcal{G} _{ui}={\mathcal{V} _u,\mathcal{V} _i,\mathcal{E} _{ui}}$</li></ul><p>$\mathcal{V} _u$:用户集合</p><p>$\mathcal{V} _i$:物品集合</p><p>$\mathcal{E}_{\mathcal{U}\boldsymbol{i}}$:边的集合，里面的边说明用户u和物品i有过互动</p><ul><li>用户-用户图：$G_{uu}={\mathcal{V}<em>{u},\mathcal{E}</em>{uu}}$</li></ul><p>$\mathcal{E}_{\mathcal{u}\boldsymbol{u}}$:里面的边说明两个用户有过互动</p><ul><li>物品-物品图：$G_{ii}={\mathcal{V}<em>{i},\mathcal{E}</em>{ii}}$</li></ul><p>$\mathcal{E}_{\mathcal{i}\boldsymbol{i}}$:里面的边说明两个物品在外部知识里面有联系(比如属于同一类物品)</p><p>三个邻接矩阵:$\mathbf{A}<em>{ui}\in\mathbb{R}^{m\times n},\mathbf{A}</em>{uu}\in\mathbb{R}^{m\times m},\mathbf{A}_{ii}\in\mathbb{R}^{n\times n}$。</p><p>这个图就要用来预测用户和物品之间未观察到的交互</p><h4 id="4-2-异构图关系学习"><a href="#4-2-异构图关系学习" class="headerlink" title="4.2 异构图关系学习"></a>4.2 异构图关系学习</h4><h5 id="4-2-1-关系感知embedding初始化"><a href="#4-2-1-关系感知embedding初始化" class="headerlink" title="4.2.1 关系感知embedding初始化"></a>4.2.1 关系感知embedding初始化</h5><ol><li><p>使用<code> xavier initializer</code>对id-corresponding embeddings $\mathbf{e}_u,\mathbf{e}_i\in\mathbb{R}^d$进行初始化，d代表隐藏的维度,代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 初始化权重,hide_dim是隐藏层深度，为d</span><br><span class="line">def init_weight(self, userNum, itemNum, hide_dim):</span><br><span class="line">    initializer &#x3D; nn.init.xavier_uniform_</span><br><span class="line">    embedding_dict &#x3D; nn.ParameterDict(&#123;</span><br><span class="line">        &#39;user_emb&#39;: nn.Parameter(initializer(t.empty(userNum, hide_dim))),</span><br><span class="line">        &#39;item_emb&#39;: nn.Parameter(initializer(t.empty(itemNum, hide_dim))),</span><br><span class="line">    &#125;)</span><br><span class="line">    return embedding_dict</span><br></pre></td></tr></table></figure><p>代码解读：</p><ul><li>这段代码是一个类的方法，用于初始化权重。它接受三个参数：<code>userNum</code>表示用户数量，<code>itemNum</code>表示物品数量，<code>hide_dim</code>表示隐藏层的维度（或深度）。</li><li>在方法内部，首先创建了一个<code>nn.ParameterDict</code>对象来存储权重参数。<code>nn.ParameterDict</code>是PyTorch中的一种数据结构，用于保存一组参数。参数被定义为<code>nn.Parameter</code>对象，并使用指定的初始化器进行初始化。</li><li>在这里，使用了Xavier均匀分布初始化器<code>nn.init.xavier_uniform_</code>，它会根据指定的形状生成均匀分布的随机数，并将其作为参数的初始值。</li><li>最后，方法返回了这个<code>embedding_dict</code>对象，它将在模型的其他部分使用到初始化权重。</li></ul><p>在主要模型里面，代码体现在：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Initialize Embeddings</span></span><br><span class="line">userembed0 = self.embedding_dict[<span class="string">&#x27;user_emb&#x27;</span>].weight</span><br><span class="line">itemembed0 = self.embedding_dict[<span class="string">&#x27;item_emb&#x27;</span>].weight</span><br></pre></td></tr></table></figure></li><li><p>特定于节点的embedding(<code>node-specific embeddings</code>)形成了初始的<code>embedding</code>矩阵$\mathbf{E}_{\boldsymbol{u}}^0\in\mathbb{R}^{\boldsymbol{m}\times d}$和$\mathbf{E}_i^0\in\mathbb{R}^{\boldsymbol{n}\times\boldsymbol{d}}$,这两个初始的矩阵分别被送入了不同的图编码器， user-item域， user-user域，item-item域。</p></li><li><p>为了突出这三种关系类型之间交互模式的差异，训练了一个自门控模块去派生出用户社会联系和物品语义联系的关系感知嵌入(<code>relation-aware embeddings</code>),公式如下：$$\mathbf{E}<em>{uu}^0=\mathbf{E}_u^0\odot\sigma(\mathbf{E}_u^0\mathbf{W}_g+\mathbf{b}_g);\quad\mathbf{E}</em>{ii}^0=\mathbf{E}_i^0\odot\sigma(\mathbf{E}_i^0\mathbf{W}_g+\mathbf{b}_g)$$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用户的relation-aware embeddings</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self_gatingu</span>(<span class="params">self,em</span>):</span></span><br><span class="line">    <span class="keyword">return</span> torch.multiply(em, torch.sigmoid(torch.matmul(em,self.gating_weightu) + self.gating_weightub))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 物品语义联系的relation-aware embeddings</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self_gatingi</span>(<span class="params">self,em</span>):</span></span><br><span class="line">    <span class="keyword">return</span> torch.multiply(em, torch.sigmoid(torch.matmul(em,self.gating_weighti) + self.gating_weightib))</span><br></pre></td></tr></table></figure><p>其中$\mathbf{E}_\text{uu }^0\in\mathbb{R}^{m\times d}$代表同构图${\mathcal{G}}<em>\text{uu}$的embedding，$\mathbf{E}</em>{ii}^0\in\mathbb{R}^{\boldsymbol{n}\times d}$代表同构图${\mathcal{G}}_\text{ii}$的embedding。σ(i)代表<code>sigmoid</code>激活函数，⊙ 表示逐元素乘法运算。通过这个乘法跳跃连接的自门机制，$\mathbf{E}_\text{uu }^0$,$\mathbf{E}_\text{ii}^0$不仅与初始的embedding共享共同语义，同时在表现user-user和item-item关系方面也更加灵活</p></li></ol><p>在主要模型里面，代码内容体现在：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过self_gatingu和self_gatingi对它们进行自门控处理，得到uu_embed0和ii_embed0</span></span><br><span class="line">uu_embed0  = self.self_gatingu(userembed0)</span><br><span class="line">ii_embed0  = self.self_gatingi(itemembed0)</span><br><span class="line"><span class="comment"># 将userembed0和itemembed0连接起来，得到ui_embeddings</span></span><br><span class="line">self.ui_embeddings       = t.cat([ userembed0, itemembed0], <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h5 id="4-2-2-异质消息传播"><a href="#4-2-2-异质消息传播" class="headerlink" title="4.2.2 异质消息传播"></a>4.2.2 异质消息传播</h5><ol><li>首先应用图卷积神经网络作为图结构三视图的编码器。以用户-物品关系图为例详细阐述建模过程：<ul><li>对于图$\mathcal{G} <em>{ui}$, HGCL迭代细化用户和物品嵌入，如下:$\mathbf{e}<em>u^{l+1}=\sum</em>{i\in\mathcal{N}<em>u}\frac1{\sqrt{|\mathcal{N}_u|}\sqrt{|\mathcal{N}_i|}}\mathbf{e}_i^l;\quad\mathbf{e}_i^{l+1}=\sum</em>{u\in\mathcal{N}_i}\frac1{\sqrt{|\mathcal{N}_i|}\sqrt{|\mathcal{N}_u|}}\mathbf{e}_u^l$,其中$\mathcal{N}</em>{\mathcal{u}}$和$\mathcal{N}_{\mathcal{i}}$代表目标节点u和i的邻居集合。$\mathbf{e}_u^l,\mathbf{e}_i^l\in\mathbb{R}^d$表示在第$l$轮循环中user u和item i的 embedding向量。</li><li>$\mathbf{e}_u^0,\mathbf{e}_i^0$是embedding矩阵$\mathbf{E}_u^0,\mathbf{E}_i^0$的行向量。</li><li>关系感知消息传递范式没有进行转换和非线性激活。</li></ul></li></ol><p>对于<code>GCN</code>图神经网络的定义，如下面代码所示：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GCN_layer</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(GCN_layer, self).__init__()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sparse_mx_to_torch_sparse_tensor</span>(<span class="params">self, sparse_mx</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert a scipy sparse matrix to a torch sparse tensor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 将一个scipy稀疏矩阵转换为torch稀疏张量的形式</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(sparse_mx) != sp.coo_matrix:</span><br><span class="line">            sparse_mx = sparse_mx.tocoo().astype(np.float32)</span><br><span class="line">        indices = torch.from_numpy(</span><br><span class="line">            np.vstack((sparse_mx.row, sparse_mx.col)).astype(np.int64))</span><br><span class="line">        values = torch.from_numpy(sparse_mx.data).<span class="built_in">float</span>()</span><br><span class="line">        shape = torch.Size(sparse_mx.shape)</span><br><span class="line">        <span class="keyword">return</span> torch.sparse.FloatTensor(indices, values, shape)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">normalize_adj</span>(<span class="params">self, adj</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Symmetrically normalize adjacency matrix.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 对邻接矩阵进行对称归一化操作</span></span><br><span class="line">        adj = sp.coo_matrix(adj)</span><br><span class="line">        rowsum = np.array(adj.<span class="built_in">sum</span>(<span class="number">1</span>))</span><br><span class="line">        d_inv_sqrt = np.power(rowsum, -<span class="number">0.5</span>).flatten()</span><br><span class="line">        d_inv_sqrt[np.isinf(d_inv_sqrt)] = <span class="number">0.</span></span><br><span class="line">        d_mat_inv_sqrt = sp.diags(d_inv_sqrt)</span><br><span class="line">        <span class="keyword">return</span> (d_mat_inv_sqrt).dot(adj).dot(d_mat_inv_sqrt).tocoo()    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, features, Mat, index</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;features是节点的特征矩阵</span></span><br><span class="line"><span class="string">        Mat是图的邻接矩阵</span></span><br><span class="line"><span class="string">        index是需要更新的节点索引&quot;&quot;&quot;</span></span><br><span class="line">        subset_Mat = Mat</span><br><span class="line">        subset_features = features</span><br><span class="line">        subset_Mat = self.normalize_adj(subset_Mat)</span><br><span class="line">        subset_sparse_tensor = self.sparse_mx_to_torch_sparse_tensor(subset_Mat).cuda()</span><br><span class="line">        out_features = torch.spmm(subset_sparse_tensor, subset_features)</span><br><span class="line">        new_features = torch.empty(features.shape).cuda()</span><br><span class="line">        new_features[index] = out_features</span><br><span class="line">        dif_index = np.setdiff1d(torch.arange(features.shape[<span class="number">0</span>]), index)</span><br><span class="line">        new_features[dif_index] = features[dif_index]</span><br><span class="line">        <span class="keyword">return</span> new_features</span><br></pre></td></tr></table></figure><p>一、首先先来看这个<code>sparse_mx_to_torch_sparse_tensor</code>函数。</p><p>1、<code>if type(sparse_mx) != sp.coo_matrix: sparse_mx = sparse_mx.tocoo().astype(np.float32)</code>.</p><p>这段代码首先判断判断输入的稀疏矩阵 <code>sparse_mx</code> 的类型是否为 <code>scipy.sparse.coo_matrix</code>，如果不是，则将其转换为 <code>coo_matrix</code> 类</p><p>2、<code>indices = torch.from_numpy(np.vstack((sparse_mx.row, sparse_mx.col)).astype(np.int64))</code></p><p>这段代码的目的是创建一个稀疏矩阵中非零元素的索引张量 <code>indices</code>。</p><p>首先，<code>sparse_mx.row</code> 是稀疏矩阵 <code>sparse_mx</code> 中非零元素所在的行索引数组。<code>sparse_mx.col</code> 是稀疏矩阵 <code>sparse_mx</code> 中非零元素所在的列索引数组。</p><p>接下来，<code>np.vstack((sparse_mx.row, sparse_mx.col))</code> 将行索引和列索引数组按垂直方向进行堆叠，形成一个形状为 <code>(2, nnz)</code> 的数组，其中 <code>nnz</code> 是稀疏矩阵中非零元素的数量。在堆叠后的数组中，第一行是非零元素的行索引，第二行是非零元素的列索引。</p><p>最后，<code>torch.from_numpy</code> 将上述数组转换为 PyTorch 张量 <code>indices</code>。这个张量存储了稀疏矩阵中非零元素的行索引和列索引，每一列对应一个非零元素的位置 <code>(row_index, col_index)</code>。</p><p>二、看看<code>def normalize_adj(self, adj)</code>这段代码</p><p>首先，代码使用 <code>sp.coo_matrix(adj)</code> 将输入的邻接矩阵 <code>adj</code> 转换为 <code>scipy.sparse.coo_matrix</code> 类型的稀疏矩阵。这是为了确保邻接矩阵的表示形式符合 COO 格式的要求。</p><p>接下来，代码计算每个节点的度数（degree）之和 <code>rowsum</code>，即邻接矩阵每一行的元素之和。这里使用 <code>adj.sum(1)</code> 对邻接矩阵的每一行进行求和操作，得到一个形状为 <code>(n, 1)</code> 的数组，其中 <code>n</code> 是节点的数量。</p><p>然后，代码计算每个节点度数的倒数的平方根 <code>d_inv_sqrt</code>，通过对 <code>rowsum</code> 进行 <code>-0.5</code> 次幂运算得到。注意，为避免除以 0 的情况，代码使用 <code>np.isinf</code> 函数将无穷大的元素置为 0。</p><p>然后，代码计算每个节点度数的倒数的平方根 <code>d_inv_sqrt</code>，通过对 <code>rowsum</code> 进行 <code>-0.5</code> 次幂运算得到。注意，为避免除以 0 的情况，代码使用 <code>np.isinf</code> 函数将无穷大的元素置为 0。</p><p>接着，代码构建对角矩阵 <code>d_mat_inv_sqrt</code>，其中对角线元素为 <code>d_inv_sqrt</code>，其余元素为 0。这里使用 <code>sp.diags</code> 函数创建对角矩阵。</p><p>最后，代码执行对称归一化操作，根据公式 <code>D^(-0.5) * A * D^(-0.5)</code>，其中 <code>D</code> 是 <code>d_mat_inv_sqrt</code> 对角矩阵，<code>A</code> 是输入的邻接矩阵。这里使用矩阵乘法 <code>dot</code> 进行计算，并将结果转换为 COO 稀疏矩阵表示形式。</p><p>最终，函数返回对称归一化后的邻接矩阵，以 COO 稀疏矩阵的形式返回。</p><p>三、前向传递<code>forward</code>函数</p><p>这段代码是一个图神经网络的前向传播函数。它接受节点的特征矩阵 <code>features</code>，图的邻接矩阵 <code>Mat</code>，以及需要更新的节点索引 <code>index</code>。</p><ol><li><code>subset_Mat = Mat</code>：将输入的邻接矩阵 <code>Mat</code> 赋值给变量 <code>subset_Mat</code>。</li><li><code>subset_features = features</code>：将输入的节点特征矩阵 <code>features</code> 赋值给变量 <code>subset_features</code>。</li><li><code>subset_Mat = self.normalize_adj(subset_Mat)</code>：调用 <code>self.normalize_adj</code> 函数对 <code>subset_Mat</code> 进行对称归一化操作，得到归一化后的邻接矩阵。</li><li><code>subset_sparse_tensor = self.sparse_mx_to_torch_sparse_tensor(subset_Mat).cuda()</code>：将归一化后的邻接矩阵转换为稀疏张量，并将其移动到 GPU 上。<code>self.sparse_mx_to_torch_sparse_tensor</code> 是一个辅助函数，将稀疏矩阵转换为 PyTorch 中的稀疏张量表示。</li><li><code>out_features = torch.spmm(subset_sparse_tensor, subset_features)</code>：利用稀疏矩阵-稠密矩阵乘法（Sparse Matrix-Dense Matrix Multiplication，<code>spmm</code>）操作，将归一化后的邻接矩阵 <code>subset_sparse_tensor</code> 与节点特征矩阵 <code>subset_features</code> 相乘，得到输出特征 <code>out_features</code>。</li><li><code>new_features = torch.empty(features.shape).cuda()</code>：创建一个与输入特征矩阵 <code>features</code> 相同形状的空张量 <code>new_features</code>，并将其移动到 GPU 上。</li><li><code>new_features[index] = out_features</code>：将输出特征 <code>out_features</code> 赋值给 <code>new_features</code> 的指定索引 <code>index</code>，更新对应节点的特征。</li><li><code>dif_index = np.setdiff1d(torch.arange(features.shape[0]), index)</code>：使用 <code>np.setdiff1d</code> 函数计算出不在索引 <code>index</code> 中的节点索引集合 <code>dif_index</code>。</li><li><code>new_features[dif_index] = features[dif_index]</code>：将输入特征矩阵 <code>features</code> 中不在索引 <code>index</code> 中的节点特征复制到 <code>new_features</code> 中，保持这些节点的特征不变。</li><li><code>return new_features</code>：返回更新后的节点特征矩阵 <code>new_features</code>。</li></ol><p>在主要模型里面，代码体现在：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入编码器的循环，对每个编码器层进行处理。</span></span><br><span class="line"><span class="comment"># 在第一次迭代时，使用初始的uu_embed0、ii_embed0和ui_embeddings作为输入；</span></span><br><span class="line"><span class="comment"># 之后的迭代中，使用前一层的输出作为输入。</span></span><br><span class="line">self.all_user_embeddings = [uu_embed0]</span><br><span class="line">self.all_item_embeddings = [ii_embed0]</span><br><span class="line">self.all_ui_embeddings   = [self.ui_embeddings]</span><br><span class="line"><span class="comment"># Encoder</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.encoder)):</span><br><span class="line">    layer = self.encoder[i]</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:  </span><br><span class="line">        userEmbeddings0 = layer(uu_embed0, self.uuMat, user_index)</span><br><span class="line">        itemEmbeddings0 = layer(ii_embed0, self.iiMat, item_index)</span><br><span class="line">        uiEmbeddings0   = layer(self.ui_embeddings, self.uiMat, ui_index)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        userEmbeddings0 = layer(userEmbeddings, self.uuMat, user_index)</span><br><span class="line">        itemEmbeddings0 = layer(itemEmbeddings, self.iiMat, item_index)</span><br><span class="line">        uiEmbeddings0   = layer(uiEmbeddings,   self.uiMat, ui_index)</span><br></pre></td></tr></table></figure><h5 id="4-2-3-异构信息聚合"><a href="#4-2-3-异构信息聚合" class="headerlink" title="4.2.3 异构信息聚合"></a>4.2.3 异构信息聚合</h5><p>每次迭代中的信息都是从异质关系中聚合而来。</p><ul><li>通过异构消息传播的多次迭代，高阶嵌入通过多跳连接保留异构语义。特别地，user和item的embdding以下定义的异构融合过程进行更新：</li></ul><p>$$\widehat{\mathbf{E}}<em>u^{l+1}=f(\mathbf{E}<em>u^{l+1},\mathbf{E}</em>{uu}^{l+1});\quad\widehat{\mathbf{E}}_i^{l+1}=f(\mathbf{E}_i^{l+1},\mathbf{E}</em>{ii}^{l+1})$$</p><p>第$l$+1轮迭代中的embedding $\widehat{\mathbf{E}}_u^{l+1}\in\mathbb{R}^{m\times d},\widehat{\mathbf{E}_i}^{\boldsymbol{l}+1}\in\mathbb{R}^{\boldsymbol{n}\times d}$整合了异构语义，成为下一层的输入，$f$代表异构信息融合函数，出于降低模型复杂度的考虑，用逐元素均值池化作为融合函数$f(·)$</p><p>代码体现在：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Aggregation of message features across the two related views in the middle layer then fed into the next layer</span></span><br><span class="line"><span class="comment"># 中间层两个相关视图的消息特征聚合，然后输入下一层</span></span><br><span class="line">self.ui_userEmbedding0, self.ui_itemEmbedding0 = t.split(uiEmbeddings0, [self.userNum, self.itemNum])</span><br><span class="line">userEd=( userEmbeddings0 + self.ui_userEmbedding0 )/<span class="number">2.0</span></span><br><span class="line">itemEd=( itemEmbeddings0 + self.ui_itemEmbedding0 )/<span class="number">2.0</span></span><br><span class="line">userEmbeddings=userEd </span><br><span class="line">itemEmbeddings=itemEd</span><br><span class="line">uiEmbeddings=torch.cat([ userEd,itemEd],<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> norm == <span class="number">1</span>: <span class="comment">#对嵌入向量进行L2范数归一化操作</span></span><br><span class="line">    norm_embeddings = F.normalize(userEmbeddings0, p=<span class="number">2</span>, dim=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 将归一化后的嵌入向量分别添加到列表这</span></span><br><span class="line">    self.all_user_embeddings += [norm_embeddings]</span><br><span class="line">    norm_embeddings = F.normalize(itemEmbeddings0, p=<span class="number">2</span>, dim=<span class="number">1</span>)</span><br><span class="line">    self.all_item_embeddings += [norm_embeddings]</span><br><span class="line">    norm_embeddings = F.normalize(uiEmbeddings0, p=<span class="number">2</span>, dim=<span class="number">1</span>)</span><br><span class="line">    self.all_ui_embeddings   += [norm_embeddings]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self.all_user_embeddings += [userEmbeddings]</span><br><span class="line">    self.all_item_embeddings += [norm_embeddings]</span><br><span class="line">    self.all_ui_embeddings   += [norm_embeddings]</span><br></pre></td></tr></table></figure><ul><li><p>为了用编码的特定层表示进一步聚合异质信息，生成user和item的整体embedding：$$\mathbf{E}<em>u=\mathbf{E}<em>u^0+\sum</em>{l=1}^L\frac{\mathbf{E}_u^l}{||\mathbf{E}_u^l||};\quad\mathbf{E}_i=\mathbf{E}_i^0+\sum</em>{l=1}^L\frac{\mathbf{E}_i^l}{||\mathbf{E}_i^l||}$$,其中$l$代表<code>GCN</code>的最大迭代次数,每个GCN层的输出归一化。使用跳跃连接添加初始嵌入$\mathbf{E}_u^0,\mathbf{E}_i^0$,上述公式表明了用户-项目交互视图的特定层表示聚合。</p><p>代码具体体现在：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.userEmbedding = t.stack(self.all_user_embeddings, dim=<span class="number">1</span>)</span><br><span class="line">self.userEmbedding = t.mean(self.userEmbedding, dim = <span class="number">1</span>)</span><br><span class="line">self.itemEmbedding = t.stack(self.all_item_embeddings, dim=<span class="number">1</span>)  </span><br><span class="line">self.itemEmbedding = t.mean(self.itemEmbedding, dim = <span class="number">1</span>)</span><br><span class="line">self.uiEmbedding   = t.stack(self.all_ui_embeddings, dim=<span class="number">1</span>)</span><br><span class="line">self.uiEmbedding   = t.mean(self.uiEmbedding, dim=<span class="number">1</span>)</span><br><span class="line">self.ui_userEmbedding, self.ui_itemEmbedding = t.split(self.uiEmbedding, [self.userNum, self.itemNum])</span><br></pre></td></tr></table></figure><p>pytorch代码解释：</p><ol><li><code>self.userEmbedding = t.stack(self.all_user_embeddings, dim=1)</code>：将 <code>self.all_user_embeddings</code> 中的嵌入向量按照维度1进行堆叠，得到一个新的张量 <code>self.userEmbedding</code>。这里假设 <code>self.all_user_embeddings</code> 是一个包含多个嵌入向量的列表或张量，维度为 <code>(embedding_dim, num_user_embeddings)</code>。</li><li><code>self.userEmbedding = t.mean(self.userEmbedding, dim=1)</code>：对 <code>self.userEmbedding</code> 进行维度1上的平均池化操作，得到一个平均后的用户嵌入向量。这里假设 <code>self.userEmbedding</code> 是一个维度为 <code>(embedding_dim, num_user_embeddings)</code> 的张量，通过对维度1上的元素求平均，得到一个维度为 <code>(embedding_dim,)</code> 的用户嵌入向量。</li><li><code>self.itemEmbedding = t.stack(self.all_item_embeddings, dim=1)</code>：类似于第一行的操作，将 <code>self.all_item_embeddings</code> 中的嵌入向量按照维度1进行堆叠，得到一个新的张量 <code>self.itemEmbedding</code>。</li><li><code>self.itemEmbedding = t.mean(self.itemEmbedding, dim=1)</code>：类似于第二行的操作，对 <code>self.itemEmbedding</code> 进行维度1上的平均池化操作，得到一个平均后的物品嵌入向量。</li><li><code>self.uiEmbedding = t.stack(self.all_ui_embeddings, dim=1)</code>：类似于第一行的操作，将 <code>self.all_ui_embeddings</code> 中的嵌入向量按照维度1进行堆叠，得到一个新的张量 <code>self.uiEmbedding</code>。</li><li><code>self.uiEmbedding = t.mean(self.uiEmbedding, dim=1)</code>：类似于第二行的操作，对 <code>self.uiEmbedding</code> 进行维度1上的平均池化操作，得到一个平均后的用户-物品组合嵌入向量。</li><li><code>self.ui_userEmbedding, self.ui_itemEmbedding = t.split(self.uiEmbedding, [self.userNum, self.itemNum])</code>：将 <code>self.uiEmbedding</code> 按照给定的索引进行拆分，得到用户嵌入向量和物品嵌入向量。具体来说，<code>self.uiEmbedding</code> 的形状应该为 <code>(embedding_dim, num_ui_embeddings)</code>，其中 <code>num_ui_embeddings</code> 是用户-物品组合的数量。然后，通过 <code>t.split</code> 函数将 <code>self.uiEmbedding</code> 按照索引 <code>[self.userNum, self.itemNum]</code> 进行拆分，得到两个张量 <code>self.ui_userEmbedding</code> 和 <code>self.ui_itemEmbedding</code>，分别表示用户和物品的嵌入向量。</li></ol></li><li><p>user-user和item-item的嵌入是以类似的方式通过多阶信息聚合得到的。</p></li></ul><p>代码也在上面了。</p><h3 id="4-3-跨视图元网络"><a href="#4-3-跨视图元网络" class="headerlink" title="4.3 跨视图元网络"></a>4.3 跨视图元网络</h3><h4 id="4-3-1-元知识提取"><a href="#4-3-1-元知识提取" class="headerlink" title="4.3.1 元知识提取"></a>4.3.1 元知识提取</h4><p>提炼出的用户-用户关系视图和物品-物品关系视图的元知识如下：</p><p>$\mathbf{M}<em>{\boldsymbol{u}\boldsymbol{u}}=\mathbf{E}</em>{\boldsymbol{u}}||\mathbf{E}<em>{\boldsymbol{u}\boldsymbol{u}}||\sum</em>{\boldsymbol{i}\in\mathcal{N}<em>{\boldsymbol{u}}}\mathbf{e}</em>{i};\quad\mathbf{M}<em>{\boldsymbol{i}\boldsymbol{i}}=\mathbf{E}</em>{i}||\mathbf{E}<em>{\boldsymbol{i}\boldsymbol{i}}||\sum</em>{\boldsymbol{u}\in\mathcal{N}<em>{\boldsymbol{i}}}\mathbf{e}</em>{\boldsymbol{u}}$,其中$\mathbf{M}<em>{uu}\in\mathbb{R}^{m\times3d},\mathbf{M}</em>{ii}\in\mathbb{R}^{n\times3d}$表示编码上下文信息的元知识，分别为用户和项目侧知识生成个性化的知识迁移函数。</p><p>除此之外，将邻域信息纳入元知识中。</p><p>辅助域的embedding表征了用户的社会影响力和项目的语义相关性</p><p>具体代码展示如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Meta-knowlege extraction</span></span><br><span class="line"><span class="comment"># 进行元知识提取的过程</span></span><br><span class="line">tembedu=(self.meta_netu(t.cat((auxiembedu,targetembedu,uneighbor),dim=<span class="number">1</span>).detach()))</span><br><span class="line">tembedi=(self.meta_neti(t.cat((auxiembedi,targetembedi,ineighbor),dim=<span class="number">1</span>).detach()))</span><br></pre></td></tr></table></figure><p>代码解读：</p><ol><li><code>tembedu = (self.meta_netu(t.cat((auxiembedu, targetembedu, uneighbor), dim=1).detach()))</code>：该行代码将辅助用户嵌入向量 (<code>auxiembedu</code>)、目标用户嵌入向量 (<code>targetembedu</code>) 和目标用户的邻居信息 (<code>uneighbor</code>) 连接起来，并将连接后的向量作为输入传递给名为 <code>self.meta_netu</code> 的元网络。<code>self.meta_netu</code> 对输入进行处理，得到用户的元嵌入向量 <code>tembedu</code>。<code>detach()</code> 的作用是将输入的梯度信息断开，以避免在元网络的计算过程中对原始输入进行梯度传播。</li></ol><h4 id="4-3-2个性化跨视角知识迁移"><a href="#4-3-2个性化跨视角知识迁移" class="headerlink" title="4.3.2个性化跨视角知识迁移"></a>4.3.2个性化跨视角知识迁移</h4><ul><li>在HGCL中，提取的元知识用于生成具有定制变换矩阵的参数化知识传输网络.所提出的元神经网络是:</li></ul><p>$$\left{\begin{aligned}f_{mlp}^1(\mathbf{M}<em>{uu})&amp;\to\mathbf{W}</em>{uu}^{M1}\f_{mlp}^2(\mathbf{M}<em>{uu})&amp;\to\mathbf{W}</em>{uu}^{M2}\end{aligned}\right.$$</p><p>$f_{mlp}^1,f_{mlp}^1$是元知识学习器，由两个具有 <code>PReLU</code> 激活函数的全连接层组成。这些函数将元知识$M_{uu}$作为输入，输出自定义的transformation矩阵$\mathbf{W}<em>{\boldsymbol{u}\boldsymbol{u}}^{\boldsymbol{M}1}\in\mathbb{R}^{\boldsymbol{m}\times d\times\boldsymbol{k}},\mathbf{W}</em>{\boldsymbol{u}\boldsymbol{u}}^{\boldsymbol{M}2}\in\mathbb{R}^{\boldsymbol{m}\times\boldsymbol{k}\times\boldsymbol{d}}$。两个参数张量都包含 n 个矩阵，每个矩阵为 n 个用户。这两组矩阵将变换的秩限制为$k&lt;d$.</p><p>一、先来看看<code>MLP</code>部分的代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MLP</span>(<span class="params">torch.nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, input_dim, feature_dim, hidden_dim, output_dim,</span></span></span><br><span class="line"><span class="function"><span class="params">                 feature_pre=<span class="literal">True</span>, layer_num=<span class="number">2</span>, dropout=<span class="literal">True</span>, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MLP, self).__init__()</span><br><span class="line">        self.feature_pre = feature_pre</span><br><span class="line">        self.layer_num = layer_num</span><br><span class="line">        self.dropout = dropout</span><br><span class="line">        <span class="keyword">if</span> feature_pre:</span><br><span class="line">            self.linear_pre =   nn.Linear(input_dim, feature_dim,bias=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.linear_first = nn.Linear(input_dim, hidden_dim)</span><br><span class="line">        self.linear_hidden = nn.ModuleList([nn.Linear(hidden_dim, hidden_dim) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(layer_num - <span class="number">2</span>)])</span><br><span class="line">        self.linear_out =    nn.Linear(feature_dim, output_dim,bias=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        x = data</span><br><span class="line">        <span class="keyword">if</span> self.feature_pre:</span><br><span class="line">            x = self.linear_pre(x)</span><br><span class="line">        prelu=nn.PReLU().cuda()</span><br><span class="line">        x = prelu(x) </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.layer_num - <span class="number">2</span>):</span><br><span class="line">            x = self.linear_hidden[i](x)</span><br><span class="line">            x = F.tanh(x)</span><br><span class="line">            <span class="keyword">if</span> self.dropout:</span><br><span class="line">                x = F.dropout(x, training=self.training)</span><br><span class="line">        x = self.linear_out(x)</span><br><span class="line">        x = F.normalize(x, p=<span class="number">2</span>, dim=-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><p>先看<code>forward</code>函数。如果 feature_pre 为 True，则将输入数据 data 通过线性层 linear_pre 进行特征预处理。使用 PReLU（带参数的修正线性单元）激活函数对输入进行非线性变换。通过多个隐藏层进行数据的转换，每个隐藏层包含一个线性层和一个 tanh 激活函数。如果 dropout 为 True，在每个隐藏层后应用 dropout 操作，用于随机丢弃一部分神经元，以防止过拟合。通过线性层 linear_out 进行最终的输出，并对输出进行 L2 归一化操作。返回处理后的结果。</p><p>二、再来看一下具体提取出来的元神经网络部分的代码(以<code>user</code>部分的为例)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Low rank matrix decomposition 低秩矩阵分解</span></span><br><span class="line">  metau1=self.mlp( tembedu). reshape(-<span class="number">1</span>,self.hide_dim,self.k)<span class="comment"># d*k</span></span><br><span class="line">  metau2=self.mlp1(tembedu). reshape(-<span class="number">1</span>,self.k,self.hide_dim)<span class="comment"># k*d</span></span><br><span class="line">  meta_biasu =(torch.mean( metau1,dim=<span class="number">0</span>))</span><br><span class="line">  meta_biasu1=(torch.mean( metau2,dim=<span class="number">0</span>))</span><br><span class="line">  low_weightu1=F.softmax( metau1 + meta_biasu, dim=<span class="number">1</span>)</span><br><span class="line">  low_weightu2=F.softmax( metau2 + meta_biasu1,dim=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><p>利用生成的参数矩阵和非线性映射函数来构建我们的定制传输网络:</p><p>$\mathbf{E}<em>{uu}^M=\sigma(\mathbf{W}</em>{uu}^{M1}\mathbf{W}<em>{uu}^{M2}\mathbf{E}</em>{uu})$</p><p>其中，$\sigma(·)$代表<code> PReLU</code>激活函数,$\mathbf{E}_\text{uu }^M\in\mathbb{R}^{m\times d}$包含通过自定义映射转换的嵌入用户-用户社交视图的函数</p><p>ok,多说无益，再看一下具体的代码模块：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The learned matrix as the weights of the transformed network</span></span><br><span class="line">    tembedus = (t.<span class="built_in">sum</span>(t.multiply( (auxiembedu).unsqueeze(-<span class="number">1</span>), low_weightu1), dim=<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># Equal to a two-layer linear network;</span></span><br><span class="line">    <span class="comment"># Ciao and Yelp data sets are plus gelu activation function</span></span><br><span class="line">    tembedus =  t.<span class="built_in">sum</span>(t.multiply((tembedus)  .unsqueeze(-<span class="number">1</span>), low_weightu2), dim=<span class="number">1</span>)</span><br><span class="line">    tembedis = (t.<span class="built_in">sum</span>(t.multiply((auxiembedi).unsqueeze(-<span class="number">1</span>), low_weighti1), dim=<span class="number">1</span>))</span><br><span class="line">    tembedis =  t.<span class="built_in">sum</span>(t.multiply((tembedis)  .unsqueeze(-<span class="number">1</span>), low_weighti2), dim=<span class="number">1</span>)</span><br><span class="line">    transfuEmbed = tembedus</span><br><span class="line">    transfiEmbed = tembedis</span><br></pre></td></tr></table></figure></li><li><p>然后利用定制的嵌入来增强从用户-项目交互中编码的用户嵌入。用户的融合过程通过以下加权求和进行:</p><p>$\mathbf{E}<em>u^F=\alpha_u<em>\mathbf{E}_u+(1-\alpha_u)</em>(\mathbf{E}_{uu}+\mathbf{E}</em>{uu}^M)$</p><p>其中$\alpha_{u}\in\mathbb{R}$表示控制用户-物品交互视图嵌入和用户-用户社交视图嵌入之间权重的超参数。在这里，用户-用户关系视图的原始嵌入也被用于更好的优化。$\mathbf{E}_{\boldsymbol{u}}^{F}\in\mathbb{R}^{\boldsymbol{m}\times d}$代表最终的embedding</p></li></ul><h3 id="4-4-用于增强的异质关系对比学习"><a href="#4-4-用于增强的异质关系对比学习" class="headerlink" title="4.4 用于增强的异质关系对比学习"></a>4.4 用于增强的异质关系对比学习</h3><h4 id="4-4-1-跨视图对比学习"><a href="#4-4-1-跨视图对比学习" class="headerlink" title="4.4.1 跨视图对比学习"></a>4.4.1 跨视图对比学习</h4><ul><li>设计了跨视图对比学习范式来增强具有自增强的异构关系学习的鲁棒性。具体来说，两个辅助视图($\mathbf{E}<em>{\boldsymbol{uu}}^{\boldsymbol{M}}$,$\mathbf{E}</em>{ii}^{\boldsymbol{M}}$)的嵌入与用户-项目交互视图($E_u$和$E_i$)。在这种设计下，辅助视图的嵌入作为有效的正则化来影响具有自监督信号的用户-物品交互建模。</li><li>为了通过考虑个性化的跨视图知识迁移来捕捉多样化的用户偏好，我们将个性化的跨视图知识迁移与对比学习集成在我们的推荐系统中。特别的，跨视图嵌入对齐在不同的表示视图之间以自适应的方式进行。</li><li>辅助视图特定的嵌入$E_{uu},E_{ii}$通过元网络生成的个性化映射函数进行处理，以生成个性化的辅助嵌入$\mathbf{E}<em>^M,\mathbf{E}</em>{ii}^M$</li></ul><h4 id="4-4-2-基于InfoNCE的对比度损失"><a href="#4-4-2-基于InfoNCE的对比度损失" class="headerlink" title="4.4.2 基于InfoNCE的对比度损失"></a>4.4.2 基于InfoNCE的对比度损失</h4><p>在异构图关系学习和跨视图元网络的帮助下，获得了用户和项目的两组embedding(用户：$\mathbf{E}<em>{\boldsymbol{uu}}^{\boldsymbol{M}},\mathbf{E}</em>{\boldsymbol{u}}$,物品：$\mathbf{E}_{ii}^M,\mathbf{E}_i$)</p><ul><li>使用基于infonce的两种表示视图之间的对比学习损失来增强我们的HGCL方法的用户/项目表示学习，如下所示:</li></ul><p>$\mathcal{L}<em>{cl}^u=\sum</em>{u\in\mathcal{V}<em>u}-\log\frac{\exp\left(s(\mathbf{e}</em>{uu}^M+\mathbf{e}<em>{uu},\mathbf{e}</em>{u})/\tau\right)}{\sum_{u^{\prime}\in\mathcal{V}<em>u}\exp\left(s(\mathbf{e}</em>{uu}^M+\mathbf{e}<em>{uu},\mathbf{e}</em>{u}^{\prime})/\tau\right)}$</p><p>其中$\mathbf{e}<em>{\boldsymbol{uu}}^M\in\mathbb{R}^d,\mathbf{e}</em>{\boldsymbol{u}}\in\mathbb{R}^d$分别是来自矩阵的嵌入向量$\mathbf{E}<em>{uu}^M,\mathbf{E}</em>{u}$. S(·) 表示相似度函数，可以是内积或余弦相似度，这里使用余弦相似度。τ代表温度系数，能够自动识别困难的负样本。</p><p>先来看一下相似度的代码函数展示：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">score</span>(<span class="params">x1,x2</span>):</span></span><br><span class="line">    x1=F.normalize(x1,p=<span class="number">2</span>,dim=-<span class="number">1</span>)</span><br><span class="line">    x2=F.normalize(x2,p=<span class="number">2</span>,dim=-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> torch.<span class="built_in">sum</span>(torch.multiply(x1,x2),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>用于对输入的嵌入矩阵进行行和列的随机置换的代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">row_column_shuffle</span>(<span class="params">embedding</span>):</span></span><br><span class="line">    corrupted_embedding = embedding[:,torch.randperm(embedding.shape[<span class="number">1</span>])]</span><br><span class="line">    corrupted_embedding = corrupted_embedding[torch.randperm(embedding.shape[<span class="number">0</span>])]</span><br><span class="line">    <span class="keyword">return</span> corrupted_embedding</span><br></pre></td></tr></table></figure><p>完整的代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">metaregular</span>(<span class="params">self,em0,em,adj</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">row_column_shuffle</span>(<span class="params">embedding</span>):</span></span><br><span class="line">        corrupted_embedding = embedding[:,torch.randperm(embedding.shape[<span class="number">1</span>])]</span><br><span class="line">        corrupted_embedding = corrupted_embedding[torch.randperm(embedding.shape[<span class="number">0</span>])]</span><br><span class="line">        <span class="keyword">return</span> corrupted_embedding</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span>(<span class="params">x1,x2</span>):</span></span><br><span class="line">        x1=F.normalize(x1,p=<span class="number">2</span>,dim=-<span class="number">1</span>)</span><br><span class="line">        x2=F.normalize(x2,p=<span class="number">2</span>,dim=-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> torch.<span class="built_in">sum</span>(torch.multiply(x1,x2),<span class="number">1</span>)</span><br><span class="line">    user_embeddings = em</span><br><span class="line">    Adj_Norm =t.from_numpy(np.<span class="built_in">sum</span>(adj,axis=<span class="number">1</span>)).<span class="built_in">float</span>().cuda()</span><br><span class="line">    adj=self.sparse_mx_to_torch_sparse_tensor(adj)</span><br><span class="line">    edge_embeddings = torch.spmm(adj.cuda(),user_embeddings)/Adj_Norm</span><br><span class="line">    user_embeddings=em0</span><br><span class="line">    graph = torch.mean(edge_embeddings,<span class="number">0</span>)</span><br><span class="line">    pos   = score(user_embeddings,graph)</span><br><span class="line">    neg1  = score(row_column_shuffle(user_embeddings),graph)</span><br><span class="line">    global_loss = torch.mean(-torch.log(torch.sigmoid(pos-neg1)))</span><br><span class="line">    <span class="keyword">return</span> global_loss</span><br></pre></td></tr></table></figure><ol><li><code>Adj_Norm = t.from_numpy(np.sum(adj, axis=1)).float().cuda()</code>计算邻接矩阵<code>adj</code>每行的和，并转换为PyTorch张量，并将其转移到GPU上。</li><li><code>adj = self.sparse_mx_to_torch_sparse_tensor(adj)</code>将邻接矩阵<code>adj</code>转换为稀疏张量的表示形式。</li><li><code>edge_embeddings = torch.spmm(adj.cuda(), user_embeddings) / Adj_Norm</code>使用稀疏矩阵-向量乘法计算边的嵌入向量。首先，将邻接矩阵<code>adj</code>与用户嵌入矩阵<code>user_embeddings</code>相乘，然后除以<code>Adj_Norm</code>进行归一化。</li><li></li></ol><ul><li><p>相似的，可以获得物品方面的InfoNCE损失$\mathcal{L}_{\boldsymbol{c}\boldsymbol{l}}^i$</p></li><li><p>最后，总的对比损失$\mathcal{L}_{cl}=\alpha_1<em>\mathcal{L}_{cl}^u+\alpha_2</em>\mathcal{L}_{cl}^i$，$\alpha_1$和$\alpha_2$是权重调整的两个超参数</p></li></ul><h4 id="4-4-3-HGCL优化目标"><a href="#4-4-3-HGCL优化目标" class="headerlink" title="4.4.3 HGCL优化目标"></a>4.4.3 HGCL优化目标</h4><p>使用融合嵌入$\mathbf{E}<em>{\mathcal{U}}^F,\mathbf{E}</em>{\mathcal{i}}^F$,HGCL通过点积$\hat{y}<em>{u,i}=\mathbf{e}</em>{u}^{F\top}\mathbf{e}<em>{i}^{F}$预测用户$u$和项目$i$交互的可能性，$\hat{y}</em>{\boldsymbol{u},\boldsymbol{i}}$越大，意味着交互的可能性越大。</p><p>每个训练样本都配置了一个用户$u$,以及他接触过的正样本$i^+$,和一个未接触过的负样本$i^-$,对于每个训练样本，我们将预测得分最大化，如下:</p><p>$\mathcal{L}<em>{bpr}=\sum</em>{(u,i^+,i^-)\in O}-\ln(\operatorname{sigmoid}(\hat{y}<em>{u,i^+}-\hat{y}</em>{u,i^-}))+\lambda|\Theta|^2$</p><p>其中ln(·)和sigmoid(·)分别表示对数函数和sigmoid函数。λ代表确定正则化项权重的超参数。</p><p>将BPR损失函数与增强的横视对比学习损失相结合，整体训练损失为:</p><p>$\mathcal{L}=\mathcal{L}<em>{bpr}+\beta*\mathcal{L}</em>{cl}$</p><p>这部分的代码展示如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predictModel</span>(<span class="params">self,user, pos_i, neg_j, isTest=<span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> isTest:</span><br><span class="line">        pred_pos = t.<span class="built_in">sum</span>(user * pos_i, dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> pred_pos</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        pred_pos = t.<span class="built_in">sum</span>(user * pos_i, dim=<span class="number">1</span>)</span><br><span class="line">        pred_neg = t.<span class="built_in">sum</span>(user * neg_j, dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> pred_pos, pred_neg</span><br></pre></td></tr></table></figure><p>在主模型里面的代码部分：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># prediction</span></span><br><span class="line">            pred_pos, pred_neg = self.predictModel(self.ui_userEmbedall[user],  self.ui_itemEmbedall[item_i],  self.ui_itemEmbedall[item_j])</span><br><span class="line">            bpr_loss = - nn.LogSigmoid()(pred_pos - pred_neg).<span class="built_in">sum</span>()  </span><br><span class="line">            epoch_loss += bpr_loss.item()</span><br><span class="line">            regLoss = (t.norm(self.ui_userEmbedall[user])**<span class="number">2</span> + t.norm( self.ui_itemEmbedall[item_i])**<span class="number">2</span> + t.norm( self.ui_itemEmbedall[item_j])**<span class="number">2</span>) </span><br><span class="line">            loss = ((bpr_loss + regLoss * self.args.reg ) / self.args.batch) + ssl_loss*self.args.ssl_beta + metaregloss*self.args.metareg</span><br></pre></td></tr></table></figure><h3 id="4-5-模型复杂度分析"><a href="#4-5-模型复杂度分析" class="headerlink" title="4.5 模型复杂度分析"></a>4.5 模型复杂度分析</h3><p>不想关心这个</p><h2 id="5、模型评价"><a href="#5、模型评价" class="headerlink" title="5、模型评价"></a>5、模型评价</h2><h3 id="5-1-模型要解决的问题"><a href="#5-1-模型要解决的问题" class="headerlink" title="5.1 模型要解决的问题"></a>5.1 模型要解决的问题</h3><ol><li>与现有方法相比，HGCL的性能如何?</li><li>在我们的HGCL中加入关键组件以提高推荐性能是否有益?</li><li> HGCL在不同用户交互数据稀疏度的不同环境下的性</li><li>关键超参数如何影响模型性能?</li></ol><h3 id="5-2-实验设置"><a href="#5-2-实验设置" class="headerlink" title="5.2 实验设置"></a>5.2 实验设置</h3><p>数据集：Ciao，Epinions，Yelp</p><p>baseline：</p><p>超参数设置：</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HGCN论文阅读</title>
      <link href="33238.html"/>
      <url>33238.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Heterogeneous-Graph-Contrastive-Learning-for-Recommendation"><a href="#Heterogeneous-Graph-Contrastive-Learning-for-Recommendation" class="headerlink" title="Heterogeneous Graph Contrastive Learning for Recommendation"></a>Heterogeneous Graph Contrastive Learning for Recommendation</h1><h2 id="1、预学习知识"><a href="#1、预学习知识" class="headerlink" title="1、预学习知识"></a>1、预学习知识</h2><p><del>每次看一篇论文的共同体会：别人觉得非常简单的东西在我眼里都是新大陆。我是傻逼</del></p><h3 id="1-1-自监督学习"><a href="#1-1-自监督学习" class="headerlink" title="1.1 自监督学习"></a>1.1 自监督学习</h3><p>自监督学习主要是利用辅助任务（pretext）从大规模的无监督数据中挖掘自身的监督信息，通过这种构造的监督信息对网络进行训练，从而可以学习到对下游任务有价值的表征。(也就是说自监督学习的监督信息不是人工标注的，而是<strong>算法在大规模无监督数据中自动构造监督信息</strong>，来进行监督学习或训练。因此，大多数时候，我们称之为无监督预训练方法或无监督学习方法，严格上讲，他应该叫自监督学习)</p><h4 id="1-11自监督学习的挑战"><a href="#1-11自监督学习的挑战" class="headerlink" title="1.11自监督学习的挑战"></a>1.11自监督学习的挑战</h4><p>自监督学习的三个挑战：</p><ul><li>对于大量的无标签数据，如何进行表征/表示学习？</li><li>从数据的本身出发，如何设计有效的辅助任务 pretext？</li><li>对于自监督学习到的表征，如何来评测它的有效性？</li></ul><h4 id="1-12-评估自监督学习的能力"><a href="#1-12-评估自监督学习的能力" class="headerlink" title="1.12 评估自监督学习的能力"></a>1.12 评估自监督学习的能力</h4><p>评测自监督学习的能力，主要是通过 Pretrain-Fintune 的模式。我们首先回顾下监督学习中的 Pretrain - Finetune 流程：我们首先从大量的<strong>有标签数据</strong>上进行训练，得到预训练的模型，然后对于新的下游任务（Downstream task），我们将学习到的参数（比如输出层之前的层的参数）进行迁移，在新的有标签任务上进行「微调」，从而得到一个能适应新任务的网络。</p><blockquote><p>Fintune:说人话其实就是说把大模型上的参数直接偷过来用到其他模型上</p></blockquote><blockquote><p>pretext:在自监督学习中，pretext（预文本）是指从原始数据中构造的任务，用于生成自动标签。这个任务通常是一个简单的、与最终任务相关但不完全一致的任务，例如预测图像的旋转方向或者对图像进行颜色化。这个任务的目的是通过强制模型从数据中学习有用的特征，从而提高模型的泛化能力。</p></blockquote><p><img src="https://s2.loli.net/2023/07/23/RbLQjOt7aApW5Kd.png" alt="自监督学习1.png"></p><p>==(感觉这里还是不太熟。我怎么从无标签数据训练出了label？先做个标记)==</p><h4 id="1-13-自监督学习的主要方法"><a href="#1-13-自监督学习的主要方法" class="headerlink" title="1.13 自监督学习的主要方法"></a>1.13 自监督学习的主要方法</h4><p>自监督学习的方法主要可以分为 3 类：1. 基于上下文（Context based） 2. 基于时序（Temporal Based）3. 基于对比（Contrastive Based）</p><p><del>这里的研究领域太宽泛了，看完一天就没了，不看了</del></p><h3 id="1-2-对比自监督学习"><a href="#1-2-对比自监督学习" class="headerlink" title="1.2  对比自监督学习"></a>1.2  对比自监督学习</h3><p>对比自监督学习（Contrastive Self-Supervised Learning）是一种新兴的自监督学习方法，它通过将同一样本的不同视角进行对比来学习特征表示。与传统的自监督学习方法不同，对比自监督学习不需要额外的标注信息，而是利用数据本身的内在结构来生成自监督信号。</p><h3 id="1-3-元知识"><a href="#1-3-元知识" class="headerlink" title="1.3 元知识"></a>1.3 元知识</h3><p>元知识是知识的知识，知识背后的本质、运行规则，其能推演出一般场景，而推演逻辑形成了知识体系。避免我们在同类的不同表象的事情中浪费时间。元知识是相对有限的，而推导出的普通知识则是无穷无尽的。</p><p>现有的知识深度不同，我们所需要、所能理解的元知识是不一样的。<strong>随着我们所学知识的深入，元知识也会越来越深、越来越细、越来越接近事物的本质</strong>。</p><p>以新冠病毒为例，普通人只需要知道这是一种病毒、自己需要戴口罩、勤洗手即可。对他们而言干净卫生是防御一般传染病的元知识；医生可能要知道这种病毒的传播方式，对他们而言预防传染病的方法就是元知识；对于生物学家而言他们可能更多的是在考虑病毒表面的刺突是由哪些基因控制，怎么去制作疫苗。对他们而言基因就是元知识。</p><h2 id="2、研究背景"><a href="#2、研究背景" class="headerlink" title="2、研究背景"></a>2、研究背景</h2><p>很多基于 GNN 的协同过滤模型仅编码同构的交互关系，且只在单一的用户-商品关系图上进行。而在现实推荐场景中，包含多种重要语义关系的复杂图结构（也称为异构图信息网络）是无处不在的，例如可能存在社交关系和基于商品知识的商品之间的连接关系。</p><p>因此许多研究者尝试基于功能强大的图神经网络去设计异构图学习模型，可以将其丰富的语义关系信息图编码成潜在的表征。但是<strong>异构图神经网络模型表征学习的潜在能力受限于稀疏的标签信息</strong>，可能导致产生质量不高的用户和商品的特征表示。</p><p>作为可以解决数据稀疏问题的技术，<strong>对比自监督学习</strong>能从无标签的数据中学习潜在的数据结构关系利用数据增强方法。其与图神经网络的结合称之为图对比学习也已经成为提升表示学习鲁棒性的有效方法。<strong>图对比学习的通用做法是研究两个图对比视角的特征表示的一致性</strong>。使正样本之间的特征相似性最大化而其余的负样本特征的距离推远。受之启发，我们利用图对比学习的潜在能力增强协同过滤的特征学习。</p><p>但是直接使用它来实现异构图关系学习是具有挑战性，因为辅助信息域视角和用户-商品交互信息域视角之间的依赖关系不是固定的而是多样性的。例如，由于样本个性化特质和各式的特定于用户的行为模式导致不同的用户受朋友影响是不同的。从而盲目的增强用户的偏好特征学习没有考虑每个个体行为的特性会带来模型的次优化效果。总之，此模型需要解决以下两个问题：<strong>1）如何实现有效地跨关系视角的知识转换；2）如何实现个性化增强的异构图对比学习。</strong></p><h2 id="3、相关工作"><a href="#3、相关工作" class="headerlink" title="3、相关工作"></a>3、相关工作</h2><h3 id="3-1-推荐系统中的自监督学习"><a href="#3-1-推荐系统中的自监督学习" class="headerlink" title="3.1 推荐系统中的自监督学习"></a>3.1 推荐系统中的自监督学习</h3><ul><li>许多研究旨在通过提出各种用于嵌入的图扩充方案来解决推荐系统中的数据稀疏性问题(e.g., SGL [ 29 ], HCCF [ 32 ] and NCL [ 14 ])</li><li>采用随机节点/边缘丢失操作来生成图形对比学习视图(SGL [29] )</li><li>局部-全局对比学习是为基于参数化超图结构的自我监督增强而设计的。</li><li>在那些对比图 CF 模型中，可以基于基于 InfoNCE 的对比来提高嵌入均匀性。</li><li>在推荐系统的知识图表示中利用对比学习</li></ul><p>对比学习现在已经在各种推荐场景中使用，包括<code>顺序推荐</code>,<code>多行为推荐</code>，<code>多兴趣推荐</code></p><p>本工作的内容：通过对比学习捕获推荐中的异构关系来填补推荐系统中的空白</p><h3 id="3-2-异构图学习"><a href="#3-2-异构图学习" class="headerlink" title="3.2 异构图学习"></a>3.2 异构图学习</h3><ul><li>增强了图形注意力网络，具有处理基于元路径构建的异构类型节点和关系的能力。(HAN[24])</li><li>受转换器框架的启发，HGT [11] 设计了一个图形转换器网络，以使用自注意力计算节点之间的传播权重来实现异构消息传递。</li><li>MAGNN [7] 考虑了元路径内和元路径间聚合，以融合来自异构图上不同元路径的信息。</li><li>HGIB [36] 信息瓶颈扩展到在同构图中进行自我监督的异构图学习。</li></ul><p>本工作：解决了异质图对比学习推荐的一项重要但尚未探索的任务。<del>(有话不直说，是要自己猜吗🤮)</del></p><h3 id="3-3-GNN-based-Recommender-Systems"><a href="#3-3-GNN-based-Recommender-Systems" class="headerlink" title="3.3 GNN-based Recommender Systems"></a>3.3 GNN-based Recommender Systems</h3><ul><li>NGCF [23]、LR-GCCF [4] 和 SHT [33] 中，采用 GNN 对用户-项目交互图进行建模，以通过跨层信息传播生成潜在表示。</li><li>GraphRec [6]、KCGN [12] 和 MHCN [39]中，为了增强用户之间具有社会影响力的协作关系学习，一些现有研究中的社会关系编码器也建立在图神经网络之上。</li><li> SURGE [ 1 ] and MA-GNN [ 16 ]中，图神经网络已成为对项目序列的顺序模式进行编码以进行时间感知推荐的有效解决方案。</li><li>MBGCN [ 13 ] and MGNN [ 41 ]中，使用 GNN对多个图连接进行建模在处理具有不同用户行为的更复杂的推荐场景方面引起了广泛关注。</li></ul><h2 id="4、进入模型"><a href="#4、进入模型" class="headerlink" title="4、进入模型"></a>4、进入模型</h2><h3 id="4-1-模型准备工作"><a href="#4-1-模型准备工作" class="headerlink" title="4.1 模型准备工作"></a>4.1 模型准备工作</h3><ul><li>G 𝑣𝑗 ：{V 𝑣 ,V 𝑗 ,E 𝑣𝑗 } ，其中V 𝑣和V 𝑗都为用户-物品交互数据，然后E 𝑣𝑗就代表用户$v$选择了商品$j$.</li></ul><p><del>(英文的<code>adopt</code>感觉难以用中文解释)</del></p><ul><li>G 𝑣𝑣 = {V 𝑣 ,E 𝑣𝑣 }，E 𝑣𝑣就代表两个用户之间有社交关系。</li><li> G 𝑗𝑗 ={V 𝑗 ,E 𝑗𝑗 }，,E 𝑗𝑗代表两个物品之间有联系</li></ul><p>定义邻接矩阵$\mathbf{A}<em>{u i} \in \mathbb{R}^{m \times n}, \mathbf{A}</em>{u u} \in \mathbb{R}^{m \times m} \text { and } \mathbf{A}_{i i} \in \mathbb{R}^{n \times n} \text {, }$,分别对应G 𝑣𝑗，G 𝑣𝑣，G 𝑗𝑗，$m$和$n$分别代表用户数量和物品数量。</p><p>这项工作目的是在给定具有关系异质性的图中，预测用户和物品之间的未观察到的相互作用。</p><h3 id="4-2-异构图关系学习"><a href="#4-2-异构图关系学习" class="headerlink" title="4.2 异构图关系学习"></a>4.2 异构图关系学习</h3><ol><li><p>关系感知嵌入初始化</p><p><strong>第一步</strong>：将用户、物品和其他相关信息分别表示为三个不同的图$G_{ui}( user-item),G_{uu}(user-<br>user),G_{ii}(item-item)$,并将它们合并成一个大图G。</p><p><strong>第二步</strong>：然后，对每个节点进行初始化，并生成初始嵌入矩阵$\mathbf{E}<em>{u}^{0} \in \mathbb{R}^{m \times d} \text { and } \mathbf{E}</em>{i}^{0} \in \mathbb{R}^{n \times d}$。这里采用 <code>xavier initializer</code>初始化器对节点嵌入进行初始化。</p><p><strong>第三步</strong>：初始的<code>embedding</code>被送到不同的encoder里面去。($user-item,user-user,item-item$三个)</p><p>为了突出三种关系类型之间交互模式的差异，训练了一个<code>self-gating</code>的模块，去导出用户和商品：</p><p>$\mathbf{E}<em>{uu}^{0}=\mathbf{E}</em>{u}^{0}\odot\sigma(\mathbf{E}^{0}<em>{u}\mathbf{W}</em>{g}+\mathbf{b}<em>{g});\quad\mathbf{E}</em>{ii}^0=\mathbf{E}^0_i\odot\sigma({\mathbf{E}^{0}}_i\mathbf{W}_g+\mathbf{b}_g)\quad$</p><p><del>说实话，我没看懂这个公式原理在哪。怎么就分离开了？</del></p><p>$\mathbf{E}<em>{uu}^0\in\mathbb{R}^{m\times d}$和$\mathbf{E}</em>{ii}^0\in\mathbb{R}^{n\times d}$分别是图$G_{uu}$和$G_{ii}$关系的嵌入，𝜎(·)是<code>sigmoid</code>激活函数，W𝑔 ∈ R𝑑×𝑑 and b𝑔 ∈ R𝑑×1是变换(<code>transform</code>)和偏置(<code>bias</code>)</p><p>通过这个做法，$\mathbf{E}<em>{uu}^{0},\mathbf{E}</em>{ii}^{0}$与$\mathbf{E}_u^0,\mathbf{E}_i^0$具有共同的语义，同时在刻画用户与用户、项目与项目关系上更为灵活。<del>(没懂怎么个灵活法)</del></p></li><li><p>Heterogeneous Message Propagation</p><p>①$\mathbf{E}<em>{uu}^0$和$\mathbf{E}</em>{ii}^0$分别是user-user和item-item的输入；$\mathbf{E}_u^0,\mathbf{E}_i^0$是user-item的输入</p><p>②下面以$user-item$为例，讲解一下$HGCL$的消息传播、迭代过程：</p><p>$$\mathbf{e}<em>{u}^{l+1}=\sum</em>{i\in\mathcal{N}<em>{u}}\dfrac{1}{\sqrt{|\mathcal{N}_u|}\sqrt{|\mathcal N_i|}}\mathbf{e}</em>{i}^{l};\quad\mathbf{e}^{l+1}<em>{i}=\sum</em>{u\in\mathcal N_{i}}\frac{1}{\sqrt{||\mathcal{N}_i|}\sqrt{||\mathcal N_u|}}\mathbf e_{u}^{l}$$</p><p>公式讲解：</p><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">$N_u,N_i$</td><td align="center">$user \quad u,item\quad i$的邻居集合</td></tr><tr><td align="center">${e}<em>{u}^{l},{e}</em>{i}^{l}\in{R}^{d}$</td><td align="center">第$l$轮迭代中$u,i$的<code>embedding</code>向量</td></tr><tr><td align="center">$\mathbf{e}_u^0,\mathbf{e}_i^0$</td><td align="center">$\mathbf{E}<em>{u}^{0},\mathbf{E}</em>{i}^{0}$的行向量</td></tr></tbody></table><p>本论文中的关系感知消息传递范式没有用<code>transform</code>和<code>non-linear</code>激活。其他的按照<code>GCN</code>进行迭代。</p></li><li><p>Heterogeneous Information Aggregation(异构信息整合)</p><p>每轮迭代中的信息都是从异构信息中整合的</p></li></ol><h2 id="5、模型介绍"><a href="#5、模型介绍" class="headerlink" title="5、模型介绍"></a>5、模型介绍</h2><p><img src="https://s2.loli.net/2023/07/23/f4pQyBUMT1PZ6w2.png" alt="论文复现2.png"></p><h3 id="5-1-基于异质图关系的特征学习"><a href="#5-1-基于异质图关系的特征学习" class="headerlink" title="5.1 基于异质图关系的特征学习"></a>5.1 基于异质图关系的特征学习</h3><p>本文采用基于图神经网络的异构图对比学习框架，与其他异构图特征学习方法不同的是，它不依赖于人工设计的元路径或随机游走等方式来学习节点特征的相似性，而是<strong>分别对不同的语义关系编码形成图邻接矩阵</strong>。在每层网络的输出中，通过跨关系视图的特征融合获取潜在的高阶语义信息，并输出用户和商品在两个协同关系下的特征表示。</p><h3 id="5-2-跨视图的元学习神经网络"><a href="#5-2-跨视图的元学习神经网络" class="headerlink" title="5.2 跨视图的元学习神经网络"></a>5.2 跨视图的元学习神经网络</h3><p>模型旨在通过引入用户社交关系和商品之间的连接关系来<strong>增强协同过滤</strong>。然而，这些额外的关系对于不同的用户具有不同的影响，因此我们采用<strong>个性化的知识转换网络</strong>来从辅助信息域视角获取特定知识，以指导特定用户偏好的学习。我们提出了一个跨视图的元神经网络，可以实现定制化的关系协同知识学习机制。整个实现过程主要分为元<strong>知识提取和跨视图的个性化知识转换</strong>两个部分。</p><ul><li>元知识提取是为了构建个性化的特征映射机制函数，从辅助域视角（user-user，item-item）到目标交互行为域视角（user-item）。简单来说，元知识提取就是针对每个参与个体，基于其个体特质信息和特定的行为模式，通过映射函数对辅助域信息与目标域特征之间的依赖关系或者影响进行隐含的量化。在用户和商品方面，元知识提取方法如下：<ul><li>本文中设定的元知识包含了两个待转换关系视角的信号依赖相关的上下文知识表示，例如对于用户方面，其元知识包含了用户特征表示、用户所交互过的商品特征表示以及目标交互信息的表示。商品侧同理。联合这三个维度的特定语义信息，产生的元知识可以很好地折射出极其重要且相关的上下文信息，有助于实现跨视图的特征个性化转换。</li><li>经过元知识学习器（两层全连接层网络）学习后，提取到的元知识会<strong>为每个个体产生一套特定的参数矩阵，可作为知识转换网络的特定参数，实现个性化的特征转换</strong>。为了减少参数量，本文采用矩阵因式分解方法生成两个维度小于原始特征维度的矩阵。</li><li>接下来，我们利用输出的参数矩阵和非线性映射函数来构建模型的特定化转换网络，针对每个样本，实现对辅助域特征表示的个性化转换，从而对齐目标域特征空间。</li></ul></li></ul><h3 id="5-3-异质图对比学习的增强"><a href="#5-3-异质图对比学习的增强" class="headerlink" title="5.3 异质图对比学习的增强"></a>5.3 异质图对比学习的增强</h3><p>采用异质关系图中多视图关系（用户侧：社交关系图的用户特征和交互关系图的用户特征；商品侧：商品属性关系图的商品特征和交互关系图的商品特征）。跨视图的特征对比学习也增强了模型特征和关系的学习和鲁棒性，归因于其产生的更多的监督信号来解决数据稀疏性问题。</p><p>对辅助域特征进行个性化转换后对齐于用户-商品交互视角的特征空间，辅助域视角的特征充当了有效的正则化项来促进用户-商品交互行为的建模利用自监督信号。而且对齐方式是自适应的通过元神经网络的个性化映射函数。</p><p>将对齐后的辅助域特征，而不是原始异质关系学习模块输出的辅助域特征，与交互关系视角的特征进行对比学习，用户侧的 InfoNCE 损失函数表达式：</p><h2 id="6、实验结果"><a href="#6、实验结果" class="headerlink" title="6、实验结果"></a>6、实验结果</h2><p><del>这一节就没啥意思了，反正是个人发paper都吹自己模型好</del></p><p>在三个常用的数据集（Yelp、Epinions 和 Ciao）上，进行了实验，并与多种类型的推荐算法模型进行了比较。</p><p>从对比结果来看，引入自监督学习方法（如 Heco, MHCN, SMIN）可以使模型的效果得到提升，而本文所提出的 HGCL 相比较于使用传统的对比学习方法，推荐性能进一步提升，也表明了本文所描述方法的有效性。我们做了消融实验来进一步验证引入特定化的异构图对比学习方法是必要的且有利于模型效果的提升。</p><p><img src="https://s2.loli.net/2023/07/23/N5rA2Epiq4emSFd.png" alt="论文复现3.png"></p><ul><li>HR:在推荐列表中，用户实际交互的物品数量占总推荐物品数量的比例。具体来说，HR指标可以用来衡量推荐算法的召回率，即推荐列表中有多少物品是用户真正感兴趣的。</li><li>NDCG（Normalized Discounted Cumulative Gain）:是一种衡量排序质量的指标，它考虑了推荐列表中物品的相关性和排名位置，并将它们加权平均。具体来说，NDCG指标首先计算出每个物品的相关性得分（如用户评分、点击率等），然后根据这些得分对推荐列表中的物品进行排序。接着，NDCG指标计算出每个物品在排序后的位置上所获得的折扣收益值（Discounted Cumulative Gain，DCG），并将它们加权平均。最后，为了消除不同数据集和不同推荐列表长度之间的影响，NDCG指标还会对结果进行归一化处理。</li></ul><h2 id="8、读论文体会"><a href="#8、读论文体会" class="headerlink" title="8、读论文体会"></a>8、读论文体会</h2><p>感谢提供论文的<code>马老师</code>，也感谢<code>香港大学和华南理工大学</code>的开源精神，开放源码的顶会作者都是活菩萨:aerial_tramway:</p><p>阅读英文文献真没法脱离<code>xtranslator</code>和<code>chatpdf</code>。感谢开发这两个软件的大神，也感谢<code>chatgpt</code>让我彻底脱离所有搜索引擎:baby_bottle:</p><p>读完文章感觉就知道了一个大体流程，但是里面涉及的很多知识点我压根不会。真的难崩，这就是科研吗 :baby_chick:.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图神经网络入门学习</title>
      <link href="34536.html"/>
      <url>34536.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="小白的图神经网络入门笔记"><a href="#小白的图神经网络入门笔记" class="headerlink" title="小白的图神经网络入门笔记"></a>小白的图神经网络入门笔记</h1><h2 id="图卷神经网络-GCN"><a href="#图卷神经网络-GCN" class="headerlink" title="图卷神经网络(GCN)"></a>图卷神经网络(GCN)</h2><p>:::default<br> 提出背景：GCN，图卷积神经网络，实际上跟CNN的作用一样，就是一个特征提取器，只不过它的对象是图数据。该模型实现了从图数据中提取特征，可以用这些特征去对图数据进行<strong>节点分类</strong>，<strong>图分类，边预测</strong>，还可以得到<strong>图的嵌入表示</strong>(也就是所谓的embedding)<br>:::</p><h3 id="GCN的核心部分"><a href="#GCN的核心部分" class="headerlink" title="GCN的核心部分"></a>GCN的核心部分</h3><blockquote><p>初看2016年的ICLR论文，一堆傅里叶变换、拉普拉斯，让我这种cs出身数学不好的学术垃圾直接吓破了胆，加上英文水平烂的一批，差点想直接跟马老师申请放弃科研。但是经一个硕士学长指点，发现知乎有一篇论文直接介绍了核心公式，没有我想象中的那么可怕。ヽ(*。&gt;Д&lt;)o゜</p></blockquote><p>假设我们手头有一批图数据，其中有<strong>N</strong>个节点（node），每个节点都有自己的特征(假设为<strong>D</strong>维)，我们设这些节点的特征组成一个<strong>N×D</strong>维的矩阵X，然后各个节点之间的关系也会形成一个<strong>N×N</strong>维的矩阵<strong>A</strong>，也称为邻接矩阵（adjacency matrix）。X和A便是我们模型的<strong>输入</strong>。</p><p>那么可以引出GCN了，实际上它也是一个神经网络层：<br>$$<br>H^{\left( l+1 \right)}=\sigma \left( \widetilde{D}^{-\frac{1}{2}}\widetilde{A}\widetilde{D}^{\frac{1}{2}}H^{\left( l \right)}W^{\left( l \right)} \right)<br>$$<br>这个公式的各个参数解释如下：</p><ul><li>$\widetilde{A}=A+I$,其中$I$是单位矩阵。(常见做法了，应该是防止全零啥的)</li><li>$\widetilde{D}$是$\widetilde{A}$的度数矩阵，其实就是一个对角矩阵，每个矩阵的对角元素是$A$对应行的和。</li><li>$H$是每一层的特征，对于输入层的话，$H$就是$X$</li><li>$\sigma$就是常见的非线性激活函数了，如常用的<code>tanh</code>,<code>sigmoid</code>啥的</li></ul><p>可以看到的是，$\widetilde{D}^{-\frac{1}{2}}\widetilde{A}\widetilde{D}^{\frac{1}{2}}$一开始就可以算好了(根据B站唐宇迪博士的说法，这个是用来对A进行行平均和列平均的作用)，下面统一用$ \widehat{A} $来代表。</p><p>展示一下原论文本来的图：</p><p><img src="https://pic3.zhimg.com/80/v2-6aebc0dd82beeb43291291b01e63003a_1440w.webp" alt="img"></p><p>上图中的GCN输入一个图，通过若干层GCN每个node的特征从X变成了Z，但是，无论中间有多少层，<strong>node之间的连接关系，即A，都是共享的</strong>。</p><p>假设构建一个两层的GCN，激活函数分别用<code>Relu</code>和<code>Softmax</code>来进行，那么可以得到整体的传播公式如下：<br>$$<br>Z=f\left( X,A \right) =softmax\left( \widehat{A},,Relu,,\left( \widehat{A}XW^{\left( 0 \right)} \right) W^{\left( 1 \right)} \right)<br>$$<br>然后就可以用多分类模型常见的<code>Cross Entropy</code>函数来计算损失了：(针对<strong>所有带标签</strong>的节点)<br>$$<br>L=-\sum_{l\epsilon y_L}^{}{\sum_{f=1}^F{Y_{lf}\ln Z_{lf}}}<br>$$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">举个例子：物体实际为B类型，共有ABC三种类型。</span><br><span class="line">模型预测为A的概率为<span class="number">0.228</span>,预测为B的概率为<span class="number">0.619</span>,预测为C的概率为<span class="number">0.153</span>；</span><br><span class="line">那么Cross Entropy损失为：</span><br><span class="line">H=-(<span class="number">0</span>*ln(<span class="number">0.228</span>)+<span class="number">1</span>*ln(<span class="number">0.619</span>)+<span class="number">0</span>*ln(<span class="number">0.153</span>))=<span class="number">0.479</span></span><br></pre></td></tr></table></figure><p>就可以训练一个node classification的模型了。由于即使只有很少的node有标签也能训练，作者称他们的方法为<strong>半监督分类</strong>。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">无标签的数据易于获取，而有标签的数据收集起来通常很困难，标注也耗时和耗力。在这种情况下，半监督学习（Semi-Supervised Learning）更适用于现实世界中的应用，近来也已成为深度学习领域热门的新方向.</span><br><span class="line">三个假设：</span><br><span class="line">1、如果两个输入相同类，并且属于同一簇，则它们相应的输出需要相近，反之亦成立</span><br><span class="line">2、输入数据点形成簇，每个簇对应于一个输出类，那么如果点在同一个簇中，则它们可以认为属于同一类。</span><br><span class="line">3、（a）输入空间由多个低维流形组成，所有数据点均位于其上；（b）位于同一流形上的数据点具有相同标签(没看懂这个啥意思，我太菜了。)</span><br></pre></td></tr></table></figure><h3 id="GCN效果有多🐂逼？"><a href="#GCN效果有多🐂逼？" class="headerlink" title="GCN效果有多🐂逼？"></a>GCN效果有多🐂逼？</h3><p><strong>即使不训练，完全使用随机初始化的参数W，GCN提取出来的特征就以及十分优秀了！</strong>这跟CNN不训练是完全不一样的，后者不训练是根本得不到什么有效特征的。</p><p><img src="https://pic3.zhimg.com/80/v2-809cc6f4a68d0da2cd8f061d1aa3659e_1440w.webp" alt="img"></p><p>可以发现，在原数据中同类别的node，经过GCN的提取出的embedding，已经在空间上自动聚类了。</p><h2 id="GraphSAGE"><a href="#GraphSAGE" class="headerlink" title="GraphSAGE"></a>GraphSAGE</h2><blockquote><p><strong>提出背景</strong>：<br>GCN本身的巨大局限——Transductive Learning——没法快速表示新节点，这限制了它在生产环境中应用。所谓Transductive Learning，就是说在预训练时必须已经清楚知道所有训练集和测试集，如果后续有新节点加入又需要全部重新训练。<br><br>既然新增的节点，一定会改变原有节点的表示，那么我们干嘛一定要得到每个节点的一个固定的表示呢？我们何不直接学习一种节点的表示方法，这样不管graph怎么改变，都可以很容易地得到新的表示？于是2017年NIPS提出了GraphSAGE。(其实看不懂英文论文，去知网扒了一篇综述下来看，省下在语言上下功夫的时间)。</p></blockquote><h3 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h3><p>去学习一个节点的信息是怎么通过其邻居节点的特征聚合而来的。 学习到了这样的“聚合函数”，而我们本身就已知各个节点的特征和邻居关系，我们就可以很方便地得到一个新节点的表示了。</p><p>原论文流程图如下：</p><p><img src="https://pic2.zhimg.com/80/v2-f8301d7397b1c703454e5adedbc9d621_1440w.webp" alt="img"></p><p>如上图所示，具体分为三个步骤：</p><ul><li>对图中每个顶点邻居顶点进行采样</li><li>根据聚合函数聚合邻居顶点蕴含的信息</li><li>得到图中各顶点的向量表示供下游任务使用</li></ul><h4 id="采样"><a href="#采样" class="headerlink" title="采样"></a>采样</h4><p>出于对计算效率的考虑，对每个顶点采样一定数量的邻居顶点作为待聚合信息的顶点。设采样数量为k，若顶点邻居数少于k,则采用有放回的抽样方法，直到采样出k个顶点。若顶点邻居数大于k，则采用无放回的抽样。</p><p>作者说的是<code>随着迭代，可以聚合越来越远距离的信息</code>。后来我想了想，发现确实是这样的。虽然在聚合时仅仅聚合了一个节点邻居的信息，但该节点的邻居，也聚合了其邻居的信息，这样，在下一次聚合时，该节点就会接收到其邻居的邻居的信息，也就是聚合到了二阶邻居的信息了。</p><p>当然，若不考虑计算效率，我们完全可以对每个顶点利用其所有的邻居顶点进行信息聚合，这样是信息无损的。</p><h4 id="生成向量"><a href="#生成向量" class="headerlink" title="生成向量"></a>生成向量</h4><p><img src="https://pic2.zhimg.com/80/v2-5ac927cd1fca0c700e18e3fc5ef55b45_1440w.webp" alt="img"></p><p><del>说真的一看到这种一堆公式符号堆叠的东西都想直接跳过</del></p><p>这里K是网络的层数，也代表着每个顶点能够聚合的邻接点的跳数，如K=2的时候每个顶点可以最多根据其2跳邻接点的信息学习其自身的embedding表示。(其实就是聚合K次)</p><p>在每一层循环中，对于每一个顶点$v$,将$v$的所有邻居点$u$在$k-1$层的embedding$ h_{u}^{k-1} $进行聚合(AGGREGATE),产生顶点$v$的邻居节点的第k层聚合$ h_{N(v)}^{k} $,将其与顶点$v$的第$k-1$层表示$ h_{v}^{k-1} $进行拼接(CONCAT)，再经过一个非线性变换产生顶点$v$的第$k$层embedding表示$ h_{v}^{k} $。(有点绕，但大概就是这个意思)</p><h4 id="聚合函数的选取"><a href="#聚合函数的选取" class="headerlink" title="聚合函数的选取"></a>聚合函数的选取</h4><ul><li>MEAN aggregator</li><li>Pooling aggregator</li><li>LSTM aggregator</li></ul><h4 id="参数学习"><a href="#参数学习" class="headerlink" title="参数学习"></a>参数学习</h4><p>对于无监督学习，设计的损失函数应该让临近的节点的拥有相似的表示，反之应该表示大不相同。<br>$$<br>J_{G\left( z_u \right)}=-\log \left( \sigma \left( z_{u}^{T}z_v \right) \right) -Q·E_{v_n~P_n\left( v \right)}\log \left( \sigma \left( -z_{u}^{T}z_v \right) \right)<br>$$<br><del>真是头痛，完全看不懂这个公式咋来的，莫名其妙的期望，网上好像默认这个公式很简单。回头找相关方向的学长学姐问一下</del></p><p>对于有监督学习，可以直接使用cross-entropy</p><h4 id="大佬作者的看法"><a href="#大佬作者的看法" class="headerlink" title="大佬作者的看法"></a>大佬作者的看法</h4><p>在GraphSAGE的实践中，作者发现，<strong>K不必取很大的值，当K=2时，效果就灰常好了</strong>，也就是只用扩展到2阶邻居即可。至于邻居的个数，文中提到S1×S2&lt;=500，即两次扩展的邻居数之际小于500，大约<strong>每次只需要扩展20来个邻居即可</strong>。这也是合情合理，例如在现实生活中，对你影响最大就是亲朋好友，这些属于一阶邻居，然后可能你偶尔从他们口中听说一些他们的同事、朋友的一些故事，这些会对你产生一定的影响，这些人就属于二阶邻居。但是到了三阶，可能基本对你不会产生什么影响了，例如你听你同学说他同学听说她同学的什么事迹，是不是很绕口，绕口就对了，因为你基本不会听到这样的故事，<strong>你所接触到的、听到的、看到的，基本都在“二阶”的范围之内</strong>。</p><h2 id="GAT-图注意力网络"><a href="#GAT-图注意力网络" class="headerlink" title="GAT(图注意力网络)"></a>GAT(图注意力网络)</h2><p>!&gt; 背景知识(注意力机制):关于什么是注意力机制，粗略的描述就是“你正在做什么，你就将注意力集中在那一点上”。<br><br>从本质上理解，Attention是从大量信息中有筛选出少量重要信息，并聚焦到这些重要信息上，忽略大多不重要的信息。权重越大越聚焦于其对应的Value值上，即权重代表了信息的重要性，而Value是其对应的信息。</p><h3 id="GAT的两种运算方式"><a href="#GAT的两种运算方式" class="headerlink" title="GAT的两种运算方式"></a>GAT的两种运算方式</h3><ul><li><p>Global graph attention</p><p>顾名思义了，就是每一个顶点$i$都对于图上任意顶点都进行attention运算。</p><p>优点：完全不依赖于图的结构，对于inductive任务无压力</p><p>缺点：（1）丢掉了图结构的这个特征，无异于自废武功，效果可能会很差（2）运算面临着高昂的成本</p></li><li><p>Mask graph attention</p><p>注意力机制的运算只在邻居顶点上进行。显然这个是更加合理的，所以其实后面原文作者都是基于此进行的。</p></li></ul><h3 id="GAT的实现步骤"><a href="#GAT的实现步骤" class="headerlink" title="GAT的实现步骤"></a>GAT的实现步骤</h3><h4 id="计算注意力系数"><a href="#计算注意力系数" class="headerlink" title="计算注意力系数"></a>计算注意力系数</h4><p>对于顶点$i$,逐个计算它的邻居们$ \left( j\epsilon N_i \right)  $和它自己之间的相关系数</p><p>$$  e_{ij}=a\left( \left[ Wh_i||Wh_j \right] \right) ,j\epsilon N_i  $$</p><p>解读公式：</p><ol><li>首先设置一个共享参数$W$的线性映射对于顶点的特征进行了增维，其实就是一种常见的<strong>特征增强</strong>方法了</li><li>$\left[ ·||· \right] $对于顶点$i,j$的变换后的特征进行了拼接</li><li>最后$ a\left( · \right)  $把拼接后的高维特征映射到一个实数上。作者是通过 single-layer feedforward neural network实现的。</li></ol><p>显然学习顶点$i,j$之间的相关性，只需要通过学习参数$W$和映射$a\left( · \right)$完成的</p><p>有了相关系数，接下来只需要使用<code>softmax</code>进行归一化即可<br>$$<br>\alpha <em>{ij}=\frac{\exp \left( Leaky\mathrm{Re}LU\left( e</em>{ij} \right) \right)}{\sum\nolimits_{k\in N_i}^{}{\exp \left( Leaky\mathrm{Re}LU\left( e_{ik} \right) \right)}}<br>$$</p><p>没理解这个<code>LeakyRelu</code>怎么莫名其妙出来的，据知乎大佬的说法是一种常见的论文手段了，就嗯试出来的。</p><p>大体就是下图这个流程了：</p><p><img src="https://pic3.zhimg.com/80/v2-830db5974c225640b041031dc1cdfd3e_1440w.webp" alt="img"></p><h4 id="加权求和"><a href="#加权求和" class="headerlink" title="加权求和"></a>加权求和</h4><p>完成第一步，已经成功一大半了。第二步很简单，根据计算好的注意力系数，把特征<strong>加权求和</strong>（aggregate）一下。公式如下所示：<br>$$<br>h_{i}^{‘}=\sigma \left( \sum{_{j\in N_i}\alpha _{ij}Wh_j} \right)<br>$$<br>公式解读：</p><ul><li>$h_{i}^{‘}$是GAT输出的对于每个顶点$i$的新特征（融合了邻域信息）</li><li>$\sigma \left( · \right)$是一个激活函数</li></ul><p>然后就是使用<strong>multi-head attention</strong>进一步强化这个attention了(<del>说实话注意力机制我还是一头雾水，这个先挖个坑等以后补吧</del>)。其实也就是上面这个式子稍微变了一下：<br>$$<br>h_{i}^{‘}\left( K \right) =\underset{k=1}{\overset{K}{||}}\sigma \left( \sum{_{j\in N_i}\alpha _{ij}^{k}W^kh_j} \right)<br>$$<br>大概就是下图这个样式：</p><p><img src="https://pic3.zhimg.com/80/v2-226a97f07f1352e741eaeefdec6044ce_1440w.webp" alt="img"></p><h3 id="GAT的算法复杂度"><a href="#GAT的算法复杂度" class="headerlink" title="GAT的算法复杂度"></a>GAT的算法复杂度</h3><p>先推导单头GAT的难度吧，也就是没有使用multi-head attention之前的。符号解释如下：</p><table><thead><tr><th align="center">符号</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">|V|</td><td align="center">图中的顶点数</td></tr><tr><td align="center">|E|</td><td align="center">图中的边数</td></tr><tr><td align="center">F</td><td align="center">原始的特征维度</td></tr><tr><td align="center">F’</td><td align="center">输出的特征维度</td></tr></tbody></table><p>GAT的算法复杂度大概也就是集中在下面两个乘法环节：</p><ol><li><p>顶点的特征映射，即$Wh_i$将$F$维的向量$h_i$映射到$F^{‘}$维的空间，$W$就是一个$F×F’$维的参数矩阵。因此，$Wh_i$的计算复杂度是$O(F×F’)$，当然所有的顶点都需要映射，所以计算复杂度是</p><p>$O\left( |V|\times F\times F^{‘} \right)$</p></li><li><p>计算注意力系数过程中的$a(·)$映射，需要将$2×F’$的向量映射到一个实数上，计算复杂度其实就是$O(F’)$。在计算注意力系数的过程中，图有多少条边，就需要计算多少次（因为每个顶点计算与其邻居顶点的相似系数），则其计算复杂度为$O\left( |E|\times F’ \right) $。</p></li></ol><p>多头的其实就是单头的复杂度✖K了。(假设是K头。)</p><h2 id="异构图神经网络R-GCN"><a href="#异构图神经网络R-GCN" class="headerlink" title="异构图神经网络R-GCN"></a>异构图神经网络R-GCN</h2><p>:::primary<br>异质图定义：在一个图上节点与边的种类都不止一类。二者类别数之和大于2即可被称为异质图。一个经典的例子是引文数据：论文，作者，发表会议这三者均被作为图中节点。<br>:::</p><p>R-GCN其实就是一种简单粗暴的算法，不就是关系多吗？行，全部梭哈，一个类别用一个矩阵进行embedding。一个关系对一整张图共用一个矩阵。于是在GCN的基础上变成了下面这个公式：<br>$$<br>h_{i}^{\left( l+1 \right)}=\sigma \left( \sum_{r\in R}{\sum_{j\in N_{i}^{r}}{\frac{1}{c_{i,r}}W_{r}^{\left( l \right)}}h_{j}^{\left( l \right)}}+W_{0}^{\left( l \right)}h_{i}^{\left( l \right)} \right)<br>$$<br>解读公式：上式是$<br>h_i<br>$在这个向量上做的信息聚合，为第$l$层，以$<br>h_{i}^{l}<br>$表示。这样一个向量先用一个矩阵$<br>W_{0}^{l}<br>$来将自身做embedding后，加上本层网络所有邻居节点所表示的向量$<br>h_{j}^{l}<br>$乘上其相应参数矩阵$$W_{r}^{\left( l \right)}$$之和(这里的$r$由$j$结点与$i$结点连接的关系决定)，最后通过一个激活函数$ \sigma \left( · \right) $来获得下一层的embedding，$c$是一个正则化参数。</p><h2 id="HetGNN"><a href="#HetGNN" class="headerlink" title="HetGNN"></a>HetGNN</h2><blockquote><p>要解决的问题：给出一个模型 $F$ ，如何让其学到每个节点上embedding（每个节点的特征表示），这个embedding可以充分反映出异质图的结构信息和节点上的非结构信息。</p></blockquote><p>问题定义：</p><ol><li><p>内容相关的异构图</p><p>内容相关的异构图是指具有多种顶点类型和边类型的图，$ G=\left( V,E,O_V,R_E \right) $,其中，$O_V$和$R_V$</p><p>分别表示顶点和边的类型集合，另外，每个顶点还关联了异构内容（例如属性、文本、图像等）</p></li><li><p>异构图表示学习</p><p>给定一个内容相关的异构图$G=\left( V,E,O_V,R_E \right)$，顶点内容集合为C，目标是设计一个模型 </p><p>$F:V\rightarrow R^d$来学习一个d维嵌入，该嵌入能够同时对异构结构信息（顶点和边）和异构非结构信息（内容）进行编码。学习到的顶点嵌入可用于多种图挖掘任务，例如连接预测、推荐、顶点分类等。</p></li></ol><h3 id="模型的组成部分"><a href="#模型的组成部分" class="headerlink" title="模型的组成部分"></a>模型的组成部分</h3><ul><li>采样异构邻居</li><li>对异构内容进行编码</li><li>聚合异构邻居信息(同类型邻居聚合+类型聚合)</li><li>目标函数和模型训练</li></ul><p>下面是作者的流程图，<del>说实话看不太懂</del></p><p><img src="https://pic1.zhimg.com/v2-cc9fe389b7e19f89dfc498d0d1e19c84_r.jpg" alt="img"></p><p>下面进入具体流程：</p><h4 id="对异构邻居进行采样-如何对异质图上的每个节点采样到强相关的邻居节点呢？"><a href="#对异构邻居进行采样-如何对异质图上的每个节点采样到强相关的邻居节点呢？" class="headerlink" title="对异构邻居进行采样(如何对异质图上的每个节点采样到强相关的邻居节点呢？)"></a>对异构邻居进行采样(如何对异质图上的每个节点采样到强相关的邻居节点呢？)</h4><p>本文采用一种random walk with restart(RWR)方法进行采样，主要有两步:</p><ul><li>从节点v随机游走采样，采样固定长度，每次以概率p访问邻居节点或返回初始节点，每种类型节点采样数固定，确保每类节点都会被采样到。</li><li>对不同类型的邻居分组，不同类型的邻居，根据采样频率返回前k个</li></ul><p>好处：</p><ul><li>RWR为每个节点收集所有类型的邻居，每种类型都收集到了</li><li>每种类型节点数量相同，并且高频邻居被选择</li><li>同种类型的邻居被放在了一起，邻居信息可以聚合</li></ul><h3 id="对异构内容进行编码"><a href="#对异构内容进行编码" class="headerlink" title="对异构内容进行编码"></a>对异构内容进行编码</h3><p>同一个节点，也往往有多种类型的特征，如图像，文字等，文章提出先对这一类特征进行预训练，如类别特征直接利用<code>one-hot</code>，文本特征利用<code>par2vec</code>,图像特征利用<code>CNN</code>，与之前直接连接不同内容特征或将它们线性转换为统一向量的模不同，作者设计了一种基于双向<code>LSTM</code>的新架构得到每类特征的向量表示后，利用Bi-LSTM进行编码后聚合。 以捕捉“深层”特征交互并获得更大的表达能力。</p><p><del>(恶补LSTM的博客还在撰写)</del></p><p>好处：</p><ul><li>这样的结构模型简单，参数少,实现和调整相对容易</li><li>能够融合异构的内容信息，表达能力强</li><li>可灵活添加额外的内容特征，方便模型扩展</li></ul><h3 id="聚合异构邻居"><a href="#聚合异构邻居" class="headerlink" title="聚合异构邻居"></a>聚合异构邻居</h3><ol><li>同类型邻居聚合</li><li>对不同类型节点聚合</li></ol><h3 id="目标和模型训练"><a href="#目标和模型训练" class="headerlink" title="目标和模型训练"></a>目标和模型训练</h3><blockquote><p>感谢<strong>马老师</strong>提供给我的入门论文还有<strong>博士学姐lq</strong>建议的知乎专栏。这也是我第一次接触科研，感觉轻微有点折磨，主要是数学公式推导、英文不大行(其实是很烂)，还有深度学习很多别人觉得很基础的东西在我看来像新世界一样。这篇博客还没写完，因为本菜鸡补lstm还有赶一下计算机网络的课程进度去了，明天接着更新。不管咋说，先迈出了第一步，有点期待。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RCNN系列阅读笔记</title>
      <link href="17186.html"/>
      <url>17186.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="RCNN"><a href="#RCNN" class="headerlink" title="RCNN"></a>RCNN</h2><p>全称为<strong>Region with CNN feature</strong>，可以说是利用深度学习进行目标检测的开山之作</p><p>其中RCNN可以分为四个步骤：</p><ul><li>一张图像生成1K~2K个 候选区域(使用Selective Search方法)</li><li>对每个候选区域，使用深度网络 提取特征</li><li>特征送入每一类的 SVM  分类器，判别是否属于该类</li><li>使用回归器 精细修正候选框位置</li></ul><h4 id="Selective-Search方法"><a href="#Selective-Search方法" class="headerlink" title="Selective Search方法"></a>Selective Search方法</h4><p>一张图像中可能存在多个物体需要分别定位和分类。显然，在训练分类器之前，需要使用一些方法将图像划分为小的区域，这些方法统称为Region Proposal，而Selective Search就是其中一种方法，而该算法主要分为两个内容：Hierarchical Grouping Algorithm、Diversification Strategies</p><p>ⅠHierarchical Grouping Algorithm</p><p>图像中区域特征比像素更具代表性，首先使用<strong>Felzenszwalb and Huttenlocher</strong>的方法产生图像初始区域，使用贪心算法对区域进行迭代分组。</p><p>算法的步骤如下：</p><ol><li>计算所有邻近区域之间的相似性；</li><li>两个最相似的区域被组合在一起；</li><li>计算合并区域和相邻区域的相似度；</li><li>重复2、3过程，直到整个图像变为一个地区。</li></ol><p>Ⅱ Diversification Strategies</p><p>这个方法就是计算相似度的，主要从四个方面进行展开考虑，包括颜色相似度、纹理相似度、尺度相似度、填充相似度，然后用一个复杂的公式计算。没啥意义，不罗列了</p><h4 id="深度网络提取特征"><a href="#深度网络提取特征" class="headerlink" title="深度网络提取特征"></a>深度网络提取特征</h4><p>首先将2k个候选区域缩放成<code>227*227</code>的pixel，然后将候选区域输入事先训练好的<code>AlexNet CNN</code>网络获取4096维的特征得到<code>2000×4096</code>维矩阵(每行一个候选区域)</p><h4 id="特征送入每一类的-SVM-分类器"><a href="#特征送入每一类的-SVM-分类器" class="headerlink" title="特征送入每一类的 SVM  分类器"></a>特征送入每一类的 SVM  分类器</h4><p>将<code>2000×4096</code>维特征与20个SVM组成的权值矩阵<code>4096×20</code>相乘，获得2000×20维矩阵表示每个建议框是某个目标类别的得分。分别对上述2000×20维矩阵中每一列即每一类进行 <strong>非极大值抑制</strong>剔除重叠建议框，得到该列即该类中得分最高的一些建议框。</p><blockquote><p>非极大值抑制：</p><p>非极大值抑制，简称为NMS算法，英文为Non-Maximum Suppression。其思想是搜素局部最大值，抑制非极大值。目标检测的过程中在同一目标的位置上会产生大量的候选框，这些候选框相互之间可能会有重叠，此时我们需要利用非极大值抑制找到最佳的目标边界框，消除冗余的边界框。</p><p><strong>前提：</strong>目标边界框列表及其对应的置信度得分列表，设定阈值，阈值用来删除重叠较大的边界框。</p><p><strong>IoU</strong>：intersection-over-union，即两个边界框的交集部分除以它们的并集。</p><p>流程如下：</p><ul><li>根据置信度得分进行排序</li><li>选择置信度最高的比边界框添加到最终输出列表中，将其从边界框列表中删除</li><li>计算所有边界框的面积</li><li>计算置信度最高的边界框与其它候选框的IoU</li><li>删除IoU大于阈值的边界框</li><li>重复上述过程，直至边界框列表为空</li></ul></blockquote><h4 id="使用回归器-精细修正候选框位置"><a href="#使用回归器-精细修正候选框位置" class="headerlink" title="使用回归器 精细修正候选框位置"></a>使用回归器 精细修正候选框位置</h4><p>对NMS处理后剩余的建议框进一步筛选。接着分别用20个回归器对上述20个类别中剩余的建议框进行回归操作，最终得到每个类别的修正后的得分最高的bounding box。</p><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>测试速度慢</li><li>训练所需空间大</li></ul><h2 id="fast-RCNN"><a href="#fast-RCNN" class="headerlink" title="fast-RCNN"></a>fast-RCNN</h2><h4 id="网络结构"><a href="#网络结构" class="headerlink" title="网络结构"></a>网络结构</h4><p>可以分为三个步骤：</p><ul><li>一张图像生成1K~2K个 候选区域(使用Selective Search方法)</li><li>将图像输入网络得到相应的 特征图，将SS算法生成的候选框投影到特征图上获得相应的 特征矩阵</li><li>将每个特征矩阵通过ROI pooling层缩放到 7x7 大小的特征图，接着将特征图展平通过一系列全连接层得到预测结果</li></ul><p>结构如下：</p><p><img src="https://s2.loli.net/2023/10/26/RsfuCQqZbVmWknO.png" alt="fastRCNN.png"></p><p>相比于<code>RCNN</code>，Fast-RCNN将整张图像送入网络，紧接着从特征图像上提取相应的候选区域，这些候选区域的特征 不需要再重复计算</p><p>在微调过程中，采用小批量采样，每个SGD小批量由N = 2个图像构成，这些图像是均匀随机选择的。使用大小为R = 128的小批量，从每个图像中采样64个RoIs。</p><p><code>RoI pooling</code>是一个广泛应用在目标检测任务的卷积神经网络中的操作。它的目的是对不规范的输入进行max pooling，以获得固定尺寸的feature maps（例如7×7）。</p><h4 id="分类器和边界框回归器"><a href="#分类器和边界框回归器" class="headerlink" title="分类器和边界框回归器"></a>分类器和边界框回归器</h4><p>分类器(也就是上图的softmax对应的分类器)输出N+1个类别的概率（N为检测目标的种类, 1为背景）共N+1个节点</p><p>边界框回归器输出对应N+1个类别的候选边界框回归参数($d_x,d_y,d_w,d_h$),共$(N+1)\times4$个节点</p><p>然后可以计算：</p><p>$\begin{aligned}<br>&amp;\hat{G}<em>x=P_wd_x(P)+P_x \<br>&amp;\hat{G}_y=P_hd_y(P)+P_y \<br>&amp;\hat{G}_{w}=P</em>{w}\exp(d_{w}(P)) \<br>&amp;\begin{aligned}\hat{G}_h=P_h\exp(d_h(P))\end{aligned}<br>\end{aligned}$</p><p>其中，$P_x,P_y,P_w,P_h$分别为候选框的中心x，y坐标，以及宽高</p><p>$\hat{G}_x,\hat{G}_y,\hat{G}_w,\hat{G}_h$分别为最终预测的边界框中心x，y坐标，以及宽高</p><h4 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h4><p>Multi-task loss：</p><p>$L(p,u,t^u,v)=L_{cls}(p,u)+\lambda[u\geq1]L_{loc}(t^u,v)$</p><p>$p$是分类器预测的softmax概率分布$p=(p_0,p_1,···,p_k)$,$u$对应目标真实类别标签</p><p>①分类损失$L_{cls}\left(p,u\right)=-\log p_{u}$</p><p>②边界框回归损失$\lambda[u\geq1]L_{loc}(t^u,v)$中的$[u\geq1]$是艾弗森括号</p><p>$t^u$对应边界框回归器预测的对应类别$u$的回归参数$\left(t_x^u,t_y^u,t_w^u,t_h^u\right)$</p><p>$v$对应真实目标的边界框回归参数$\left(\nu_{x},\nu_{y},\nu_{w},\nu_{h}\right)$</p><p>$L_{loc}(t^u,\nu)=\sum_{i\in{x,y,w,h}}smooth_{L_1}(t_i^u-\nu_i)$</p><p>其中$$smooth_{L_1}(x)=\begin{cases}0.5x^2&amp;\quad\text{if}|x|&lt;1\|x|-0.5&amp;\quad\text{otherwise}\end{cases}$$</p><h2 id="Faster-RCNN"><a href="#Faster-RCNN" class="headerlink" title="Faster-RCNN"></a>Faster-RCNN</h2><h4 id="网络结构-1"><a href="#网络结构-1" class="headerlink" title="网络结构"></a>网络结构</h4><p>Faster-RCNN可以理解为$RPN+Fast R-CNN$</p><p>可以分为三个步骤：</p><ul><li>将图像输入网络得到相应的特征图</li><li>使用RPN结构生成候选框，将RPN生成的候选框投影到特征图上获得相应的特征矩阵</li><li>将每个特征矩阵通过ROI pooling层缩放到7x7大小的特征图，接着将特征图展平通过一系列全连接层得到预测结果</li></ul><p>网络结构图如下所示：</p><p><img src="https://s2.loli.net/2023/10/26/xzQnFKHPXtyi3No.png" alt="faster-RCNN.png"></p><h4 id="RPN"><a href="#RPN" class="headerlink" title="RPN"></a>RPN</h4><p>对于特征图上的每个3x3的滑动窗口，计算出滑动窗口中心点对应原始图像上的中心点，并计算出k个anchor boxes</p><p>如果使用的是<code>VGG16 net</code>，则滑动窗口维度(<code>channel</code>)为512，如果使用的是<code>ZF Net</code>,则滑动窗口维度为256</p><p>这$k$个anchor，对于<code>cls layer</code>需要输出<code>2k</code>个score；对于<code>reg layer</code>，需要输出<code>4k</code>个score</p><p>1、这$k$个anchor box如何产生？</p><p>使用$128\times128$,$256\times256$,$512\times512$三个规模的box area，并且有3个长宽比，分别为1:1、1:2和2:1，每个位置在原图上都对应有$3\times3$个anchor</p><p>2、训练数据如何采样？</p><p>采用了“以图像为中心”的采样策略来训练这个网络，每个小批量数据都来自于包含许多正负样本锚框的单个图像。虽然可以优化所有锚框的损失函数，但这会对负样本产生偏向，因为它们数量占主导地位。相反，我们在一个图像中随机采样256个锚框来计算一个小批量的损失函数，其中采样的正负样本锚框的比例最多为1:1。如果一个图像中的正样本少于128个，我们会用负样本填充小批量数据。</p><h4 id="RPN-Multi-task-loss"><a href="#RPN-Multi-task-loss" class="headerlink" title="RPN-Multi-task loss"></a>RPN-Multi-task loss</h4><p>$L\left( \left{ p_i \right} ,\left{ t_i \right} \right) =\frac{1}{N_{cls}}\sum_i^{}{L_{cls}\left( p_i,p_{i}^{<em>} \right)}+\lambda \frac{1}{N_{reg}}\sum_i^{}{p_{i}^{</em>}L_{reg}\left( t_i,t_{i}^{*} \right)}$</p><p>其中，前半部分为<code>分类损失</code>，后半部分为<code>边界框回归损失</code>。</p><p>①参数解释：</p><p>$p_i$表示第$i$个anchor预测为真实标签的概率</p><p>$p_{i}^{*}$当为正样本时为1，为负样本时为0。</p><p>$t_i$表示预测第$i$个anchor的边界框回归参数</p><p>$t_{i}^{*}$表示第$i$个anchor对应的GTBOX的边界框回归参数</p><p>$N_{cls}$表示一个<code>mini-batch</code>里面的所有样本数量为256</p><p>$N_{reg}$表示anchor位置的个数(不是anchor个数)约2400</p><p>②公式解释：</p><p>$L_{cls}=-log(p_i)$，其实就是cross entropy</p><p>$L_{reg}\left( t_i,t_{i}^{<em>} \right) =\sum_i^{}{smooth_{L_1}\left( t_i-t_{i}^{</em>} \right)}$</p><p>其中$t_i=\left[ t_x,t_y,t_w,t_h \right] ,t_{i}^{<em>}=\left[ t_{x}^{</em>},t_{y}^{<em>},t_{w}^{</em>},t_{h}^{*} \right]$</p><h4 id="Faster-R-CNN"><a href="#Faster-R-CNN" class="headerlink" title="Faster R-CNN"></a>Faster R-CNN</h4><p>直接采用RPN Loss+ Fast R-CNN Loss的联合训练方法，这个好像tensorflow已经实现了，所以这里就不再赘述</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的异世界主题开发生活-hexo事件管理与扩展使用</title>
      <link href="55440.html"/>
      <url>55440.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想起一年半以前，想要对我的初版博客进行整体的魔改，然后设计了我的首版卡片（并不会写但是设计粗来了）。然而一年半过去了，我的博客经历了大大小小的魔改调整，文章页改完了卡片反而觉得不搭了。改着改着又不太喜欢文章卡片式设计等等。</p><p>种种原因到我想放弃 butterfly。用店长的话说就是，魔改到现在也不算在坚守 bf 了。</p><p>于是我开始寻思着要不要换主题，而 stellar 很合我心意，但又有我很中意但又太复杂且定位不符的 wiki 功能。于是思来想去，决定自己开发一个主题吧，也学一学自己拒绝了两年的前端。</p><p>废话完了，开始讲记录吧。hexo 主题的开发对于我这个前端半生不熟的人来讲还是很有难度的。本身也没有画过时间系统的学习前端。js 最多就是魔改 bf 的时候稍微模仿着写一点点的程度，css 也就只有常用的一些相对熟悉一点，动画、布局、定位这些毫无经验。因此记录是必要，本身写项目就是一种很好的学习方式。</p><p>另外记录的是 hexo 本身开发的经历，给一些不满足于魔改的想开发主题的朋友做做参考也行。</p><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>友情感谢 <a href="https://blog.mufanc.xyz/">@mufanc</a> 同学在开发 rust 博客框架途中被我拐来<del>（甚至弃坑）</del>做 <code>trefoil</code> 主题的开发，这里着重感谢！</p></div><hr><h2 id="hexo-开发常用-事件系统与扩展api使用"><a href="#hexo-开发常用-事件系统与扩展api使用" class="headerlink" title="hexo 开发常用-事件系统与扩展api使用"></a>hexo 开发常用-事件系统与扩展api使用</h2><h3 id="事件-hexo-on"><a href="#事件-hexo-on" class="headerlink" title="事件: hexo.on"></a>事件: hexo.on</h3><p>hexo 的文档可谓一塌糊涂，令人开发都不知道何处动笔，只能参考前人主题去做些尝试。当还没确定布局的时候，需要想好自己要哪些脚本进行辅助构建。<code>hexo.on</code> 提供的事件钩子可以让我在一些阶段进行一些数据的构建（例如 stellar 的 wiki 数据结构），也可以在使用 hexo 的时候出现 banner 来体现使用了自己的主题。</p><p><a href="https://hexo.io/zh-cn/api/events">hexo 事件文档</a></p><p>比如在 hexo 运行开始，提示一条主题使用语句：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.on(<span class="string">&#x27;ready&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; version &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../../package.json&#x27;</span>)</span><br><span class="line">  hexo.log.info(<span class="string">` Welcome to trefoil! <span class="subst">$&#123;version&#125;</span> `</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>运行出现如下字样：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS C:\MyPersonProject\blog\theme-trefoil-demotest&gt; hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO   Welcome to trefoil! 0.0.1</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>而在主题开发中，最常用的是 <code>generateBefore</code> 和 <code>generateAfter</code> 这两个事件。以 <code>generateBefore</code> 为例：</p><p>例如我想在 trefoil 主题中构建一个轻量化的类似 wiki 的合集功能，需要在文章渲染前对所有原始 maekdown 文件的 <code>front-matter</code> 进行统计并构建对象，就需要在这个阶段进行构建（其实可以在过滤器相似的阶段来构建，但这明显不是过滤器应该做的事），然后将其设为全局变量供文章渲染阶段使用。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.on(<span class="string">&#x27;generateBefore&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> series_dist = &#123;&#125;</span><br><span class="line">  <span class="keyword">const</span> posts = hexo.locals.get(<span class="string">&#x27;posts&#x27;</span>)</span><br><span class="line">  <span class="comment">// ...series_dist 构建</span></span><br><span class="line">  hexo.locals.set(<span class="string">&#x27;series_dist&#x27;</span>, <span class="function">() =&gt;</span> series_dist)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="过滤器-hexo-extend-filter"><a href="#过滤器-hexo-extend-filter" class="headerlink" title="过滤器 hexo.extend.filter"></a>过滤器 hexo.extend.filter</h3><p>过滤器是 hexo 中主观上觉得 api 相对完全的一个功能（因为可以说只有它有完整的调用事件列表，相比 hexo.on 能干的事感觉多了不少），甚至也只能在过滤器中去干一些感觉就不应该由它做的事。</p><p>前人在过滤器最常见使用的两个功能是修改渲染前/后文件和选择性生成css。后者我还没使用到，前者倒是已经实战了一下。</p><p>比如渲染前加入 abbrlink：（这部分代码是 mufanc 帮我写的，我为了合集功能做的主副标题特性与现有的 abbrlink 插件不兼容）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;before_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (data.abbrlink || data.layout !== <span class="string">&#x27;post&#x27;</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> config = <span class="built_in">this</span>.theme.config.abbrlink || <span class="built_in">this</span>.config.abbrlink || &#123;&#125;;</span><br><span class="line">  <span class="keyword">if</span> (!config.enable) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> mirror = front.parse(data.raw);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> abbrlink = hash(data.title, data.subtitle, data.series_name, data.series_index);</span><br><span class="line">  mirror.abbrlink = abbrlink;</span><br><span class="line">  data.abbrlink = abbrlink;</span><br><span class="line"></span><br><span class="line">  fs.writeFileSync(data.full_source, <span class="string">&#x27;---\n&#x27;</span> + front.stringify(mirror), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  hexo.log.info(<span class="string">`Generate link [<span class="subst">$&#123;abbrlink&#125;</span>] for post [<span class="subst">$&#123;data.source&#125;</span>][<span class="subst">$&#123;data.title+(data.subtitle?(<span class="string">&#x27;: &#x27;</span>+data.subtitle):<span class="string">&#x27;&#x27;</span>)&#125;</span>]`</span>);</span><br><span class="line">&#125;, <span class="number">15</span>);</span><br></pre></td></tr></table></figure><p>它向渲染前的原始文件开头的 front-matter 加入了 abbrlink 参数。而下面这个栗子则是向渲染后的 html DOM 进行代码插入，我需要向代码块中插入几行行代码来实现代码复制和代码展开功能：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> config = <span class="built_in">this</span>.theme.config</span><br><span class="line">  <span class="keyword">if</span> (config.code.height_limit_enable) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!data.permalink.match(<span class="regexp">/.*(?:\.html|\/)$/</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> $ = cheerio.load(data.content)</span><br><span class="line">    $(<span class="string">&#x27;&lt;figcaption&gt;&lt;/figcaption&gt;&#x27;</span>).insertBefore(<span class="string">&#x27;figure.highlight table:not(figcaption + *)&#x27;</span>)</span><br><span class="line">    $(<span class="string">&#x27;figure.highlight figcaption&#x27;</span>).append(<span class="string">&#x27;&lt;i class=&quot;ri-file-copy-line&quot;&gt;&lt;/i&gt;&#x27;</span>)</span><br><span class="line">    $(<span class="string">&#x27;figure.highlight table&#x27;</span>).before(<span class="string">&#x27;&lt;div class=&quot;code-expand-btn&quot;&gt;&lt;i class=&quot;ri-arrow-down-s-fill&quot;&gt;&lt;/i&gt;&lt;/div&gt;&#x27;</span>)</span><br><span class="line">    data.content = $.html();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>原先的 DOM 结构如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">class</span>=<span class="string">&#x27;highlight&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span> /*可能不存在的标题*/</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;gutter&#x27;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span> /*可能不存在的序号*/</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;code&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">pre</span>&gt;</span>...<span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> /*代码块*/</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><p>经过过滤器修改后的结构如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">class</span>=<span class="string">&#x27;highlight&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span> /*必定存在的figcaption*/</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">span</span>&gt;</span> /*可能不存在的标题*/</span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ri-file-copy-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> /*复制图标*/</span><br><span class="line">    <span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;code-expand-btn&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ri-arrow-down-s-fill&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> /*展开图标*/</span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;gutter&#x27;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span> /*可能不存在的序号*/</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;code&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">pre</span>&gt;</span>...<span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> /*代码块*/</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><p>足见过滤器功能之强大。</p><h3 id="生成器-hexo-extend-generator"><a href="#生成器-hexo-extend-generator" class="headerlink" title="生成器 hexo.extend.generator"></a>生成器 hexo.extend.generator</h3><p>生成器用于生成文章路由，比如我们无需创建 md 文件就可以利用模版生成 404 页面：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.generator.register(<span class="string">&#x27;404&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    path: <span class="string">&#x27;/404.html&#x27;</span>,</span><br><span class="line">    layout: [<span class="string">&#x27;404&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这部分功能也还没怎么用。</p><h3 id="辅助函数-hexo-extend-helper"><a href="#辅助函数-hexo-extend-helper" class="headerlink" title="辅助函数 hexo.extend.helper"></a>辅助函数 hexo.extend.helper</h3><p>辅助函数帮助您在模板中快速插入内容，有点类似与 pug 中的 <code>mixin</code>。但是显然用 js 功能会更加强大一点，同时也可以与前面我们生成的合集数据结构对接。</p><p>例如从合集数据结构中生成合集目录供模板调用：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.helper.register(<span class="string">&#x27;__series_toc&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">page</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> series_dist = hexo.locals.get(<span class="string">&#x27;series_dist&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> toc_str = []</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="keyword">return</span> toc_str.join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>之后我就可以在文章页模版使用辅助函数进行调用：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!=__series_toc(page)</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>文档不能不吐槽，api 提供的我感觉 hexo 的项目结构也不咋合理。但能用还是别自己造轮子了，起码能用。。。</p>]]></content>
      
      
      <categories>
          
          <category> trefoil 开发日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Course </tag>
            
            <tag> hexo </tag>
            
            <tag> theme-trefoil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猹的魔改日记-文章页抛弃卡片、丢弃小菜单以及布局重构</title>
      <link href="64594.html"/>
      <url>64594.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>温馨提示：本日记本只提供魔改参考，并不做通用处理，很多源码修改都需要根据自己博客做小小微调</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>另外在修改源码时注意做好备份处理。本帖只提供思路与方法，如果哪里炸了，请检查语法与缩进等，猹概不负责啦！</p></div><p>继白嫖<a href="https://akilar.top/">店长</a>、<a href="https://zfe.space/">冰老师</a>、<a href="https://www.antmoe.com/">小康</a>、<a href="https://www.nesxc.com/">小N</a>等大佬的魔改之后，猹终于不满于白嫖，开始想动手实操，把自己的博客调教成想要的样子，也以此来使猹学前端有实操的机会。</p><p><strong>注</strong>：这部分前言内容会在魔改日记本的每一篇都出现；另外这是一篇日记而非教程，文风可能不是那么友好（逃</p><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>本篇特别提示：这次的魔改修改了bf的主要结构，并对一些大的布局样式进行了flex弹性盒子的全面替换，不建议进行跟随魔改（我自己都不记得我改的一些细节）</p></div><hr><h2 id="魔改起因"><a href="#魔改起因" class="headerlink" title="魔改起因"></a>魔改起因</h2><p>事情要从小菜单的魔改说起。猹将文章页的目录模块藏在了小菜单里头，结果经过大量的反馈发现，“猹你博客没有目录吗”</p><p>az，好吧本来是为了保留作者卡片而设计的小菜单，既然目录没人看到，那小菜单显然也是没人点开看。本来的目的也就没有达到，想想还是把小菜单砍了，重构吧……</p><h2 id="主要结构重构-左右双栏与菜单按钮"><a href="#主要结构重构-左右双栏与菜单按钮" class="headerlink" title="主要结构重构-左右双栏与菜单按钮"></a>主要结构重构-左右双栏与菜单按钮</h2><details cyan><summary> 设计来源、灵感 </summary>              <div class='content'>              <p>重构的最主要目的还是原本容易被人忽略的目录模块。找到一个好的目录布局设计可不容易，bf原先的设计也的确不适合我。在<a href="https://blog.zhheo.com/">zhheo</a>的推荐下，选用了<a href="https://sspai.com/">少数派</a>的目录设计。</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/sspai1.jpg"><br><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/sspai2.jpg"></p><p>少数派的设计逻辑说实在很戳我的心，然后我脑子一抽决定给他加个当前标题居中显示。。。再然后折腾了几天就是现在这样了。</p>              </div>            </details><details yellow open><summary> 设计思路 </summary>              <div class='content'>              <p>但是折腾这个目录的关键在于，如何保证其自适应良好。采取与小菜单相同的浮动窗口肯定是不好用的，一不小心可能就会变成这个样子<del>（拿同学在做的博客系统举个栗子（反正目录是我的设计））</del></p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/badtoc.png"></p><p>如果要保证文章板块与目录间天然的自适应，最好的方式还是在左右侧各开辟一个 div 盒子，这样更可靠一点。原本 butterfly 主题的源码部分，是这样的：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mainbody&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">&quot;layout hide-aside&quot;</span> <span class="attr">id</span>=<span class="string">&quot;content-inner&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;post&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并且对<code>main</code>部分限定了最大宽度<code>1000px</code>，在双栏布局下双栏也被严格限制在这个大小里，属实是对魔改的发挥起到了一定的限制。故而更改其结构是十分必要的事。于是目标结构如下：</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  &lt;div id=&quot;mainbody&quot;&gt;</span><br><span class="line"><span class="addition">+   &lt;div id=&quot;content_leftside&quot;&gt;...&lt;/div&gt;</span></span><br><span class="line">    &lt;main class=&quot;layout hide-aside&quot; id=&quot;content-inner&quot;&gt;</span><br><span class="line">      &lt;div id=&quot;post&quot;&gt;...&lt;/div&gt;</span><br><span class="line">    &lt;/main&gt;</span><br><span class="line"><span class="addition">+   &lt;div id=&quot;content_rightside&quot;&gt;...&lt;/div&gt;</span></span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>此后，显然就可以直接在新开辟的<code>content_rightside</code>加点料。如果只是建立起类似样式的目录倒是小事，实现当前标题的恒定居中才是复杂的东西。</p><p>最后是一些功能按键。<strong>回到顶部</strong>这个功能显然还是放在类似小彩单的位置合适，样式直接参考<code>fluit</code>主题的按钮即可。而原本的作者卡片我决定提取社交按钮以及一些功能按键，在左侧也形成一个居中对称的设计来进行视觉上的平衡，魔改思路就此完成。</p>              </div>            </details><h3 id="布局调整-开辟左右双栏"><a href="#布局调整-开辟左右双栏" class="headerlink" title="布局调整-开辟左右双栏"></a>布局调整-开辟左右双栏</h3><p>将开辟双栏的思路翻译到 pug 源码文件<code>[BlogSource]/themes/butterfly/layout/includes/layout.pug</code></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">        #mainbody</span><br><span class="line"><span class="addition">+         block content_leftside</span></span><br><span class="line">          main#content-inner.layout(class=hideAside)</span><br><span class="line">            if body</span><br><span class="line">              div!= body</span><br><span class="line">            else</span><br><span class="line">              block content</span><br><span class="line">              if theme.aside.enable &amp;&amp; page.aside !== false</span><br><span class="line">                include widget/index.pug</span><br><span class="line"><span class="addition">+         block content_rightside</span></span><br></pre></td></tr></table></figure><p>有了左右双栏，目录等的添加就好做了。</p><h3 id="目录1-原生目录js再就业"><a href="#目录1-原生目录js再就业" class="headerlink" title="目录1-原生目录js再就业"></a>目录1-原生目录js再就业</h3><details cyan><summary> content_rightside pug源码 </summary>              <div class='content'>              <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">block content_rightside</span><br><span class="line">  - let tocNumber = page.toc_number !== undefined ? page.toc_number : theme.toc.number</span><br><span class="line">  <span class="comment">#content_rightside</span></span><br><span class="line">    <span class="comment">#rightside-toc</span></span><br><span class="line">      .toc-box</span><br><span class="line">        <span class="keyword">if</span> (page.encrypt == true)</span><br><span class="line">          .toc-content.toc-div-class(style=&quot;display:none&quot;)!=toc(page.origin, &#123;list_number: tocNumber&#125;)</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">          .toc-content!=toc(page.content, &#123;list_number: tocNumber&#125;)</span><br><span class="line">    <span class="comment">#rightside-button</span></span><br><span class="line">      button<span class="comment">#rightside-go-up(type=&quot;button&quot; title=_p(&quot;rightside.back_to_top&quot;))</span></span><br><span class="line">        i.fas.fa-arrow-up</span><br></pre></td></tr></table></figure><p>为了方便自适应，按键也一并写在<code>content_rightside</code></p>              </div>            </details><p>目录板块在小菜单的魔改中就已经写过了，问题在于<code>active</code>状态添加的js失效了。咱本来就不太懂js，自然不愿去再写一份js来对当前标题进行标记。最有可能的方式，自然是对原本的js进行改造再就业。</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    const tocFn = function () &#123;</span><br><span class="line"><span class="deletion">-     const $cardTocLayout = document.getElementById(&#x27;card-toc&#x27;)</span></span><br><span class="line"><span class="addition">+     const $cardTocLayout = document.getElementById(&#x27;rightside-toc&#x27;)</span></span><br><span class="line">      const $cardToc = $cardTocLayout.getElementsByClassName(&#x27;toc-content&#x27;)[0]</span><br><span class="line">      const $tocLink = $cardToc.querySelectorAll(&#x27;.toc-link&#x27;)</span><br><span class="line">      const $article = document.getElementById(&#x27;article-container&#x27;)</span><br></pre></td></tr></table></figure><p>但修改完对应类等发现，还是没办法令其生效。于是将目光转向了一些配置项中，最终发现是侧栏的关闭导致了js无法生效。修改文件<code>[BlogSource]/themes/butterfly/layout/includes/head/config_site.pug</code></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-   var showToc = is_post() &amp;&amp; theme.aside.enable &amp;&amp; pageToc &amp;&amp; (toc(page.content) !== &#x27;&#x27; || page.encrypt == true )</span></span><br><span class="line"><span class="addition">+   var showToc = is_post() &amp;&amp; pageToc &amp;&amp; (toc(page.content) !== &#x27;&#x27; || page.encrypt == true )</span></span><br></pre></td></tr></table></figure><p><code>active</code>能够正常标记到目录标题中，就可以编写对应的样式。少数派中的胶囊颗粒采用的是在标题前使用<code>div</code>，所有标题也使用<code>div</code>盒子。胶囊与盒子本身不是绝对关联的情况下才有可能做到所有不处于<code>active</code>状态的标题隐藏而胶囊不隐藏的效果。</p><p>butterfly的设计下目录则采用有序表格的方式呈现。这也意味着在不改目录生成源码的情况下，我如果想单纯实现胶囊就只能使用<code>before</code>伪类，也没有办法做到一模一样的显隐逻辑，于是只能自己设计效果了。</p><p>这里不得不吐槽下不同长度胶囊颗粒的css实现（这写的好淦啊）</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">.toc-item</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease-in-out</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span></span><br><span class="line">  <span class="comment">// 目录缩进结构</span></span><br><span class="line">  &amp;.toc-level-<span class="number">1</span></span><br><span class="line">    &amp;:before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">0.4rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1rem</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">  &amp;.toc-level-<span class="number">2</span></span><br><span class="line">    &amp;:before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">0.7rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1rem</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">  &amp;.toc-level-<span class="number">3</span></span><br><span class="line">    &amp;:before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">1.2rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0.8rem</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">  &amp;.toc-level-<span class="number">4</span></span><br><span class="line">  &amp;.toc-level-<span class="number">5</span></span><br><span class="line">  &amp;.toc-level-<span class="number">6</span></span><br><span class="line">    &amp;:before</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">1.7rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0.6rem</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#000</span></span><br></pre></td></tr></table></figure><h3 id="目录2-当前标题居中轮转"><a href="#目录2-当前标题居中轮转" class="headerlink" title="目录2-当前标题居中轮转"></a>目录2-当前标题居中轮转</h3><p>居中的轮盘设计就类似于一些卡牌决斗盘抽卡，一些动效就很养眼。本来想使用swiper来实现，但我不知道怎么去控制其随着文章进度转换，于是作罢。</p><p>最终选用了十分暴力的 translate 大法，复用目录的标记js部分进行相应的 translate 计算即可动态偏移：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> offset = -currentIndex * <span class="number">1.5</span> + <span class="number">4.25</span></span><br><span class="line">$cardToc.style.translate = <span class="string">&quot;0 &quot;</span> + offset + <span class="string">&quot;rem&quot;</span></span><br></pre></td></tr></table></figure><p>然后css对对应的标题高度进行限制（例如与上面对应的就是一行1.5rem），保证偏移后还是居中就行。</p><p>translate 大法也就有个反人类设计吧，没办法使用滚轮查看目录。</p><h3 id="子菜单-回到顶部"><a href="#子菜单-回到顶部" class="headerlink" title="子菜单-回到顶部"></a>子菜单-回到顶部</h3><p>回到顶部的按钮还是要做一点点调整的，现在的整体设计是向中间集中的，不适合在边角放小彩单。而放到偏靠中间的部分还是需要考虑位置自适应问题。</p><p>fluit主题的回到顶部按钮位置本身是靠js进行控制的。而我这里做了一点点的尝试，直接在<code>content_rightside</code>进行样式测试。</p><p>意外的是，<code>fixed</code>布局似乎不会被<code>flex</code>干扰，默认会靠在边上而不会串成串儿。于是直接采用绝对定位将其钉在了<code>content_rightside</code>的左下角。</p><p>相关的js逻辑直接复用小彩单，在此不提。</p><h3 id="左侧功能区-文章阅读进度与糖果屋二维码"><a href="#左侧功能区-文章阅读进度与糖果屋二维码" class="headerlink" title="左侧功能区-文章阅读进度与糖果屋二维码"></a>左侧功能区-文章阅读进度与糖果屋二维码</h3><details cyan><summary> content_leftside pug源码 </summary>              <div class='content'>              <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">block content_leftside</span><br><span class="line">  <span class="comment">#content_leftside</span></span><br><span class="line">    <span class="comment">#left_menu</span></span><br><span class="line">      //- 联系方式</span><br><span class="line">      <span class="keyword">if</span>(theme.social)</span><br><span class="line">        .leftside-social</span><br><span class="line">          !=fragment_cache(<span class="string">&#x27;social&#x27;</span>, function()&#123;<span class="keyword">return</span> partial(<span class="string">&#x27;includes/header/social&#x27;</span>)&#125;)</span><br><span class="line">      //- 阅读进度</span><br><span class="line">      .leftside-contents</span><br><span class="line">        span<span class="comment">#read-percent 0</span></span><br><span class="line">      //- 跳转评论</span><br><span class="line">      .leftside-comment</span><br><span class="line">        a(href=<span class="string">&quot;#post-comment&quot;</span> title=<span class="string">&quot;要去留言吗？&quot;</span>)</span><br><span class="line">          i.fa-lg.fas.fa-comment</span><br><span class="line">      .leftside-qq(title=<span class="string">&quot;来糖果屋聊天噻！&quot;</span>)</span><br><span class="line">        i.fa-lg.fas.fa-qrcode</span><br><span class="line">      .leftside-rmb</span><br><span class="line">        a(title=<span class="string">&quot;柿还在施工的捐赠页！不给看！&quot;</span>)</span><br><span class="line">          i.fa-lg.fas.fa-money-check-dollar</span><br><span class="line">    <span class="comment">#left_display</span></span><br><span class="line">      .candy_qrcode</span><br><span class="line">        img(src=<span class="string">&quot;./img/candy-qr.png&quot;</span>)</span><br></pre></td></tr></table></figure>              </div>            </details><p>在原先的bf的目录中，有一串数字表示阅读进度（它采用的不是全网页百分比，在我看来逻辑上更合理一点），恰好可以进行复用。在左侧的功能区一群图标中，插入一个数字恰好可以看起来对称些。</p><p>然后是一些功能，分享按钮与跳转评论本身只是链接，赞助二维码还没画好(<del>涩涩嘿嘿涩涩</del>)</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/balabalasesesese.png"></p><p>所以只有一个糖果屋群聊二维码需要加上。我去使用工具绘制了一下一个相对好看且对称的二维码：</p><p><img src="./img/candy-qr.png"></p><p>然后以类似的方法添加上去。但是这玩意肯定不能常态显示，不然我倒数第二个图标就是摆设了啊。想想我决定动手写一个js。</p><p>本身我是没有js编写经验的（以前反正或抄或改，反正就是没有自己写过），好在写了类似hover的逻辑还算简单：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> leftSideMenu = &#123;</span><br><span class="line">        qrcodeHover: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 按钮获取</span></span><br><span class="line">            <span class="keyword">const</span> left_menu = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;left_menu&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span>(left_menu)&#123;</span><br><span class="line">                <span class="keyword">const</span> leftside_qq = left_menu.getElementsByClassName(<span class="string">&#x27;leftside-qq&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">                <span class="comment">// 显示区域获取</span></span><br><span class="line">                <span class="keyword">const</span> left_display = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;left_display&#x27;</span>)</span><br><span class="line">                <span class="keyword">const</span> candy_qrcode = left_display.getElementsByClassName(<span class="string">&#x27;candy_qrcode&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                leftside_qq.addEventListener(<span class="string">&#x27;mouseover&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    candy_qrcode.style.opacity = <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;)</span><br><span class="line">                leftside_qq.addEventListener(<span class="string">&#x27;mouseout&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    candy_qrcode.style.opacity = <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    leftSideMenu.qrcodeHover();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="整体显隐逻辑"><a href="#整体显隐逻辑" class="headerlink" title="整体显隐逻辑"></a>整体显隐逻辑</h3><p>左右栏还是需要相应的显示逻辑的。文章处于最顶部时不应该显示左右栏和回到最顶按钮，阅读结束后不应显示左右栏。于是这里选择复用原小菜单显隐逻辑代码，做进一步修改：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.scrollCollect = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> btf.throttle(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> currentTop = <span class="built_in">window</span>.scrollY || <span class="built_in">document</span>.documentElement.scrollTop</span><br><span class="line">    <span class="keyword">const</span> isDown = scrollDirection(currentTop)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//滚动条高度+视窗高度 = 可见区域底部高度</span></span><br><span class="line">    <span class="keyword">const</span> currentBottom = currentTop + <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (currentTop &gt; <span class="number">56</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (isDown) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($header.classList.contains(<span class="string">&#x27;nav-visible&#x27;</span>)) $header.classList.remove(<span class="string">&#x27;nav-visible&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (isChatBtnShow &amp;&amp; isChatShow === <span class="literal">true</span>) &#123;</span><br><span class="line">          chatBtnHide()</span><br><span class="line">          isChatShow = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!$header.classList.contains(<span class="string">&#x27;nav-visible&#x27;</span>)) $header.classList.add(<span class="string">&#x27;nav-visible&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (isChatBtnHide &amp;&amp; isChatShow === <span class="literal">false</span>) &#123;</span><br><span class="line">          chatBtnShow()</span><br><span class="line">          isChatShow = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      $header.classList.add(<span class="string">&#x27;nav-fixed&#x27;</span>)</span><br><span class="line">      <span class="comment">// 获取位置监测容器，此处采用文章主体</span></span><br><span class="line">      <span class="keyword">var</span> eventlistner = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;post&#x27;</span>);</span><br><span class="line">      <span class="keyword">if</span>(eventlistner)&#123;</span><br><span class="line">        <span class="keyword">var</span> centerY = eventlistner.offsetTop+eventlistner.offsetHeight;</span><br><span class="line">        <span class="keyword">if</span>(centerY &gt; currentBottom &amp;&amp; currentTop &gt; eventlistner.offsetTop+<span class="built_in">document</span>.getElementById(<span class="string">&#x27;post-info&#x27;</span>).offsetHeight)&#123;</span><br><span class="line">          <span class="keyword">if</span>($rightside_toc) $rightside_toc.style.cssText = <span class="string">&#x27;opacity: 1; pointer-events: all&#x27;</span></span><br><span class="line">          <span class="keyword">if</span>($leftside_menu) $leftside_menu.style.cssText = <span class="string">&#x27;opacity: 1; pointer-events: all&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span>($rightside_toc) $rightside_toc.style.cssText = <span class="string">&#x27;opacity: 0; pointer-events: none&#x27;</span></span><br><span class="line">          <span class="keyword">if</span>($leftside_menu) $leftside_menu.style.cssText = <span class="string">&#x27;opacity: 0; pointer-events: none&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>($rightside_button) $rightside_button.style.cssText = <span class="string">&#x27;bottom: 1rem&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (currentTop === <span class="number">0</span>) &#123;</span><br><span class="line">        $header.classList.remove(<span class="string">&#x27;nav-fixed&#x27;</span>, <span class="string">&#x27;nav-visible&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>($rightside_toc) $rightside_toc.style.cssText = <span class="string">&#x27;opacity: 0; pointer-events: none&#x27;</span></span><br><span class="line">      <span class="keyword">if</span>($leftside_menu) $leftside_menu.style.cssText = <span class="string">&#x27;opacity: 0; pointer-events: none&#x27;</span></span><br><span class="line">      <span class="keyword">if</span>($rightside_button) $rightside_button.style.cssText = <span class="string">&#x27;bottom: -3rem&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.body.scrollHeight &lt;= innerHeight) &#123;</span><br><span class="line">      <span class="keyword">if</span>($rightside_toc) $rightside_toc.style.cssText = <span class="string">&#x27;opacity: 0; pointer-events: none&#x27;</span></span><br><span class="line">      <span class="keyword">if</span>($leftside_menu) $leftside_menu.style.cssText = <span class="string">&#x27;opacity: 0; pointer-events: none&#x27;</span></span><br><span class="line">      <span class="keyword">if</span>($rightside_button) $rightside_button.style.cssText = <span class="string">&#x27;bottom: -3rem&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">200</span>)()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显示范围这里选择直接检测文章主体。</p><h3 id="css完整代码和gh提交记录"><a href="#css完整代码和gh提交记录" class="headerlink" title="css完整代码和gh提交记录"></a>css完整代码和gh提交记录</h3><details cyan><summary> 样式代码 </summary>              <div class='content'>              <figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#mainbody</span><br><span class="line">  <span class="attribute">display</span>: flex</span><br><span class="line">  #post</span><br><span class="line">    <span class="attribute">background</span>: none</span><br><span class="line">    <span class="attribute">box-shadow</span>: none</span><br><span class="line">    &amp;:hover</span><br><span class="line">      <span class="attribute">box-shadow</span>: none</span><br><span class="line">  #content_leftside</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span></span><br><span class="line">    <span class="attribute">width</span>: fill-available</span><br><span class="line">    <span class="attribute">width</span>: -webkit-fill-available</span><br><span class="line">    <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="attribute">flex-direction</span>: row-reverse</span><br><span class="line">    #left_menu</span><br><span class="line">      <span class="attribute">top</span>: -<span class="number">1rem</span></span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">      <span class="attribute">pointer-events</span>: none</span><br><span class="line">      <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease-in-out</span><br><span class="line">      <span class="attribute">position</span>: fixed</span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1.5rem</span></span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto</span><br><span class="line">      <span class="attribute">flex-direction</span>: column</span><br><span class="line">      <span class="attribute">justify-content</span>: center</span><br><span class="line">      <span class="attribute">align-items</span>: center</span><br><span class="line">      translate: -<span class="number">0.7rem</span> <span class="number">0</span></span><br><span class="line">      i</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">      .leftside-social</span><br><span class="line">        <span class="attribute">text-align</span>: center</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0.7</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0.4rem</span></span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">0.5s</span></span><br><span class="line">        .fa-fw</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0.5rem</span> <span class="number">0</span></span><br><span class="line">          <span class="attribute">transition</span>: all <span class="number">0.3s</span></span><br><span class="line">          <span class="attribute">transform</span>: scale(<span class="number">1.3</span>)</span><br><span class="line">        &amp;:hover</span><br><span class="line">          <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">      .leftside-contents</span><br><span class="line">      .leftside-comment</span><br><span class="line">      .leftside-qq</span><br><span class="line">      .leftside-rmb</span><br><span class="line">        <span class="attribute">text-align</span>: center</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">0.25rem</span></span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0.7</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">height</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">0.5s</span></span><br><span class="line">        a</span><br><span class="line">          <span class="attribute">font-weight</span>: bolder</span><br><span class="line">        .fas</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0.5rem</span> <span class="number">0</span></span><br><span class="line">          <span class="attribute">width</span>: <span class="number">1.25em</span></span><br><span class="line">        <span class="selector-class">.fas</span>::hover</span><br><span class="line">          <span class="attribute">transform</span>: scale(<span class="number">1.3</span>)</span><br><span class="line">        &amp;:hover</span><br><span class="line">          <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">      .leftside-contents</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">1rem</span></span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">0.5rem</span></span><br><span class="line">    #left_display</span><br><span class="line">      <span class="comment">// box-shadow: 0 0 5px #000</span></span><br><span class="line">      <span class="attribute">width</span>: inherit</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">margin-right</span>: <span class="number">3rem</span></span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">      <span class="attribute">align-items</span>: center</span><br><span class="line">      <span class="attribute">position</span>: fixed</span><br><span class="line">      <span class="attribute">top</span>: -<span class="number">0.62rem</span></span><br><span class="line">      <span class="attribute">flex-direction</span>: row-reverse</span><br><span class="line">      .candy_qrcode</span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease-in-out</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">pointer-events</span>: none</span><br><span class="line">        <span class="attribute">max-width</span>: <span class="number">9rem</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  #content_rightside</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span></span><br><span class="line">    <span class="attribute">width</span>: fill-available</span><br><span class="line">    <span class="attribute">width</span>: -webkit-fill-available</span><br><span class="line">    <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="attribute">flex-direction</span>: row</span><br><span class="line">    #rightside-toc</span><br><span class="line">      <span class="attribute">top</span>: -<span class="number">1rem</span></span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">      <span class="attribute">pointer-events</span>: none</span><br><span class="line">      <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease-in-out</span><br><span class="line">      <span class="attribute">position</span>: fixed</span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">width</span>: inherit</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">flex-direction</span>: row</span><br><span class="line">      <span class="attribute">align-items</span>: center</span><br><span class="line"></span><br><span class="line">      .item-headline</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1rem</span></span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">flex-direction</span>: column</span><br><span class="line">        span</span><br><span class="line">          <span class="attribute">margin-left</span>: <span class="number">0.5rem</span></span><br><span class="line">      <span class="selector-tag">span</span>.toc-text</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">      .toc-box</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">10rem</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="comment">// box-shadow: 0 0 5px #000</span></span><br><span class="line">        <span class="attribute">overflow</span>: hidden</span><br><span class="line">      .toc-<span class="attribute">content</span></span><br><span class="line">        translate: <span class="number">0</span> <span class="number">4.25rem</span></span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">0.5s</span></span><br><span class="line">        <span class="comment">// height: 100%</span></span><br><span class="line">      ol</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>        </span><br><span class="line">        <span class="attribute">list-style-type</span>: none</span><br><span class="line">      <span class="selector-tag">li</span>::marker</span><br><span class="line">        <span class="attribute">content</span>: none</span><br><span class="line">      <span class="selector-tag">li</span>::before</span><br><span class="line">        <span class="attribute">float</span>: left</span><br><span class="line">        <span class="comment">// counter-increment: section</span></span><br><span class="line">        <span class="comment">// content: counters(section,&quot;.&quot;) &quot; &quot;</span></span><br><span class="line">      .toc</span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">height</span>: inherit</span><br><span class="line">        <span class="attribute">overflow-y</span>: scroll</span><br><span class="line">        <span class="attribute">overflow-x</span>: hidden</span><br><span class="line">        <span class="comment">// height: 10rem</span></span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">0.1rem</span></span><br><span class="line">        <span class="comment">// padding-left: 0</span></span><br><span class="line">        <span class="attribute">list-style-type</span>: none</span><br><span class="line">        .toc-child</span><br><span class="line">          <span class="comment">// padding: 0</span></span><br><span class="line">          <span class="attribute">list-style-type</span>: none</span><br><span class="line">      <span class="selector-class">.toc</span>::-webkit-scrollbar</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span> <span class="meta">!important</span></span><br><span class="line">      .toc-link</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">max-height</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">white-space</span>: nowrap</span><br><span class="line">        <span class="attribute">display</span>: block</span><br><span class="line">        <span class="comment">// border-left: 0.1rem solid transparent</span></span><br><span class="line">        <span class="attribute">color</span>: var(--btn-bg)</span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">0.5s</span></span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">0.5rem</span></span><br><span class="line">        <span class="selector-tag">span</span>.toc-text</span><br><span class="line">          <span class="attribute">text-overflow</span>: ellipsis</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span> <span class="selector-tag">span</span>.toc-text</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">        &amp;.active</span><br><span class="line">          <span class="attribute">transform</span>: scale(<span class="number">1.3</span>)</span><br><span class="line">          <span class="attribute">transform-origin</span>: <span class="number">2.5rem</span> <span class="number">0.75rem</span></span><br><span class="line">          <span class="attribute">font-weight</span>: bolder</span><br><span class="line">      .toc-item</span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease-in-out</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0.5</span></span><br><span class="line">        <span class="comment">// 目录缩进结构</span></span><br><span class="line">        &amp;.toc-level-<span class="number">1</span></span><br><span class="line">          &amp;:before</span><br><span class="line">            <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">0.4rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1rem</span></span><br><span class="line">            <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">            <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">        &amp;.toc-level-<span class="number">2</span></span><br><span class="line">          &amp;:before</span><br><span class="line">            <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">0.7rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1rem</span></span><br><span class="line">            <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">            <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">        &amp;.toc-level-<span class="number">3</span></span><br><span class="line">          &amp;:before</span><br><span class="line">            <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">1.2rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">0.8rem</span></span><br><span class="line">            <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">            <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">        &amp;.toc-level-<span class="number">4</span></span><br><span class="line">        &amp;.toc-level-<span class="number">5</span></span><br><span class="line">        &amp;.toc-level-<span class="number">6</span></span><br><span class="line">          &amp;:before</span><br><span class="line">            <span class="attribute">content</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0.65rem</span> <span class="number">1.7rem</span> <span class="number">0.65rem</span> <span class="number">0</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">0.6rem</span></span><br><span class="line">            <span class="attribute">height</span>: <span class="number">0.2rem</span></span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">0.1rem</span></span><br><span class="line">            <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &amp;.active</span><br><span class="line">          <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease-in-out</span><br><span class="line">          <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">          .toc-child</span><br><span class="line">            <span class="attribute">display</span>: block</span><br><span class="line">        &amp;:hover</span><br><span class="line">          <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">    #rightside-button</span><br><span class="line">      <span class="attribute">position</span>: fixed</span><br><span class="line">      <span class="attribute">z-index</span>: <span class="number">101</span></span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">      <span class="attribute">bottom</span>: -<span class="number">3rem</span></span><br><span class="line">      <span class="attribute">align-items</span>: center</span><br><span class="line">      <span class="attribute">justify-content</span>: center</span><br><span class="line">      <span class="attribute">flex-direction</span>: column</span><br><span class="line">      transition: all .5s</span><br><span class="line"></span><br><span class="line">      button</span><br><span class="line">        <span class="attribute">background</span>: var(--card-bg)</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">2rem</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">2rem</span></span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">1rem</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">0.8rem</span></span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0.25rem</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  #mainbody</span><br><span class="line">    #content_leftside</span><br><span class="line">      a</span><br><span class="line">        &amp;:hover</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#a153ff</span></span><br><span class="line">      #left_menu</span><br><span class="line">        .leftside-contents</span><br><span class="line">          <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#fff</span></span><br><span class="line">        i</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">        <span class="selector-class">.leftside-contents</span> span</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">      #left_display</span><br><span class="line">        .candy_qrcode</span><br><span class="line">          <span class="attribute">filter</span>: invert(<span class="number">1</span>)</span><br><span class="line">    #content_rightside</span><br><span class="line">      #rightside-toc</span><br><span class="line">        <span class="selector-tag">span</span>.toc-text</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">        .toc-link</span><br><span class="line">          <span class="attribute">color</span>: var(--btn-bg)</span><br><span class="line">          <span class="selector-tag">span</span>.toc-text</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span> <span class="selector-tag">span</span>.toc-text</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">        .toc-item</span><br><span class="line">          <span class="comment">// 目录缩进结构</span></span><br><span class="line">          &amp;.toc-level-<span class="number">1</span></span><br><span class="line">            &amp;:before</span><br><span class="line">              <span class="attribute">background</span>: <span class="number">#fff</span></span><br><span class="line">          &amp;.toc-level-<span class="number">2</span></span><br><span class="line">            &amp;:before</span><br><span class="line">              <span class="attribute">background</span>: <span class="number">#fff</span></span><br><span class="line">          &amp;.toc-level-<span class="number">3</span></span><br><span class="line">            &amp;:before</span><br><span class="line">              <span class="attribute">background</span>: <span class="number">#fff</span></span><br><span class="line">          &amp;.toc-level-<span class="number">4</span></span><br><span class="line">          &amp;.toc-level-<span class="number">5</span></span><br><span class="line">          &amp;.toc-level-<span class="number">6</span></span><br><span class="line">            &amp;:before</span><br><span class="line">              <span class="attribute">background</span>: <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line">      #rightside-button</span><br><span class="line">        button</span><br><span class="line">          <span class="attribute">background</span>: var(--card-bg)</span><br><span class="line">          <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#fff</span></span><br><span class="line">          i</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line">.start</span><br><span class="line"><span class="selector-class">.end</span> </span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Noto Serif SC&#x27;</span>, -apple-system, BlinkMacSystemFont, Roboto, Segoe UI, Helvetica, Arial, serif</span><br><span class="line">  <span class="attribute">font-size</span>: large</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1200px</span>)</span><br><span class="line">  #content_leftside</span><br><span class="line">    #left_menu</span><br><span class="line">      display: none !important</span><br><span class="line">  #content_rightside</span><br><span class="line">    #rightside-toc</span><br><span class="line">      display: none !important</span><br><span class="line"></span><br><span class="line">@media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1100px</span>)</span><br><span class="line">  #mainbody</span><br><span class="line">    display: block</span><br><span class="line">    #content_leftside</span><br><span class="line">      display: none !important</span><br><span class="line">    #content_rightside</span><br><span class="line">      display: none !important</span><br></pre></td></tr></table></figure>              </div>            </details><details yellow open><summary> github提交记录 </summary>              <div class='content'>              <ul><li><strong>[主要]</strong><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/03e1345c4e5778e7b6b42232ac0897a689568497">大剂量修改：重构目录结构、文章页，右下角子菜单（移动端未写）</a></li><li><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/5408f7cae40881670ae1b0e19262f5b9cf190609">主页bug修复</a></li><li><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/6a86ef13f59e6da36747cb747dda3020d51c8242">小屏幕适配</a></li><li><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/278d4bd74e80e32a7b40e2bf64c4f3a6bd462ba9">右侧动画微调</a></li><li><strong>[主要]</strong><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/f7051c18e41d46f0d4ff4da275fdd792618f49f9">样式去除卡片并微调</a></li><li><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/4422c329b699f2b9056842408d8c481a3ba3b418">二维码（未写显隐逻辑）</a></li><li><a href="https://github.com/2X-ercha/2X-ercha.github.io/commit/ff825f914f5aa7d73cf159a8c5bd3cd6728b7c59">二维码魔改完成</a></li></ul>              </div>            </details><h2 id="微调-抛弃卡片结构和若干功能区"><a href="#微调-抛弃卡片结构和若干功能区" class="headerlink" title="微调-抛弃卡片结构和若干功能区"></a>微调-抛弃卡片结构和若干功能区</h2><p>这部分包含了我很长时间的微调和想法，主要只针对整个文章块。</p><p>一是开头的标题部分：</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/lenovo20221224220458.png"></p><p>我添加了彩色标签，并把一些数据做了重新排版。<del>（西瓜做分割线真好用）</del></p><p>二是地下文章结束的部分：</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/lenovo20221224220827.png"></p><p>我去除了版权卡片（以后大概还会想个设计补上）、上下篇和推荐（我觉得这玩意属实没什么用处，尽管我做了美化但也觉得很违和）</p><p>三是去除了文章板块的框框，整个与背景项贴合。整体看起来相对简单整洁一点。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>整个文章页魔改应该会告一段落。还剩下的一点坑是移动端的目录和回到顶部，这部分想还是用最传统的浮动小菜单来实现，就不瞎整了。</p><p>这部分的魔改太难以像前面的捋思路方式给源码修改参考，涉及的调整部分过多也不利于做教程。所以有能力的还是建议自己翻我博客源码来做更改，没能力的就爱莫能助了。</p>]]></content>
      
      
      <categories>
          
          <category> 魔改日记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
            <tag> Course </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猹的魔改日记-小小的重写个页脚</title>
      <link href="46524.html"/>
      <url>46524.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>温馨提示：本日记本只提供魔改参考，并不做通用处理，很多源码修改都需要根据自己博客做小小微调</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>另外在修改源码时注意做好备份处理。本帖只提供思路与方法，如果哪里炸了，请检查语法与缩进等，猹概不负责啦！</p></div><p>继白嫖<a href="https://akilar.top/">店长</a>、<a href="https://zfe.space/">冰老师</a>、<a href="https://www.antmoe.com/">小康</a>、<a href="https://www.nesxc.com/">小N</a>等大佬的魔改之后，猹终于不满于白嫖，开始想动手实操，把自己的博客调教成想要的样子，也以此来使猹学前端有实操的机会。</p><p><strong>注</strong>：这部分前言内容会在魔改日记本的每一篇都出现；另外这是一篇日记而非教程，文风可能不是那么友好（逃</p><hr><h2 id="页脚魔改两部分"><a href="#页脚魔改两部分" class="headerlink" title="页脚魔改两部分"></a>页脚魔改两部分</h2><h3 id="已经写完了哪本书？"><a href="#已经写完了哪本书？" class="headerlink" title="已经写完了哪本书？"></a>已经写完了哪本书？</h3><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/20220817155942.png"></p><p>最早看到这个点子的时候，是看到木木的站点和他的Hugo教程<a href="https://immmmm.com/what-book-i-write/">《已写完了哪本书？》</a>，进而看到了最源头<a href="https://www.jdeal.cn/152.html">《博客全站总字数统计》</a>。无奈 Hexo 没有相关的教程，我又不会前端，于是就试着写了个写死书名的版本。</p><p>但这样终究是个问题，当我每次大更新之后（尤其对于我常常一篇教程写个几千字的，有时候一不小心就会破个万字关），书名就得相应的变更一次，很是麻烦。随着学校实验室的教学开发项目暂时可以休息一小会，猹也顺利考过了科二（短时间没空学科三），于是花了点时间重写了一下。</p><p>Hugo 和 Typecho 可以直接找两篇原教程，这里只做了 pug 类 Hexo 主题的实现方案。</p><div class="tag link"><a class="link-card" title="Hugo：林木木《已写完了哪本书？》" href="https://immmmm.com/what-book-i-write/"><div class="left"><img src="https://gravatar.loli.net/avatar/ba83fa02fc4b2ba621514941307e21be"/></div><div class="right"><p class="text">Hugo：林木木《已写完了哪本书？》</p><p class="url">https://immmmm.com/what-book-i-write/</p></div></a></div><div class="tag link"><a class="link-card" title="Typecho：Jdeal《博客全站总字数统计》" href="https://www.jdeal.cn/152.html"><div class="left"><img src="https://www.jdeal.cn/favicon.ico"/></div><div class="right"><p class="text">Typecho：Jdeal《博客全站总字数统计》</p><p class="url">https://www.jdeal.cn/152.html</p></div></a></div><details cyan open><summary> 前置插件 </summary>              <div class='content'>              <p>Hexo 和 Butterfly 主题本身是不带字数统计功能的，所以需要前置安装插件<a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>：</p><div class="tag link"><a class="link-card" title="hexo-wordcount" href="https://github.com/willin/hexo-wordcount"><div class="left"><img src="https://github.com/fluidicon.png"/></div><div class="right"><p class="text">hexo-wordcount</p><p class="url">https://github.com/willin/hexo-wordcount</p></div></a></div>              </div>            </details><details yellow open><summary> 设计思路 </summary>              <div class='content'>              <p>实际上对于这个功能，文字基本上是写死的，主要考虑的还是怎么获取字数。咱去查看了一下 wordcount 的函数调用源码，它是这样写的：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.helper.register(<span class="string">&#x27;wordcount&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = counter(content);</span><br><span class="line">  <span class="keyword">var</span> count = len[<span class="number">0</span>] + len[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">if</span> (count &lt; <span class="number">1000</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.round(count / <span class="number">100</span>) / <span class="number">10</span> + <span class="string">&#x27;k&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">hexo.extend.helper.register(<span class="string">&#x27;totalcount&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">site</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">  site.posts.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">post</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = counter(post.content);</span><br><span class="line">    count += len[<span class="number">0</span>] + len[<span class="number">1</span>];</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (count &lt; <span class="number">1000</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.round(count / <span class="number">100</span>) / <span class="number">10</span> + <span class="string">&#x27;k&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这里字数统计的返回明显有两个不同的类型返回。当调用获取到的字数不及千字时，返回的是如<code>456</code>这样的数字类型，而大于千字时则返回<code>12k</code>之类的字符串，因此要做返回类型的判断。</p><p>pug 语法中遵循的是许多变量类型可以使用 js 提供的方法来进行，虽然不懂 js，但是百度水平还是有一点的。</p><p>js 中的<code>isNaN()</code>函数可以帮我判断这个变量是不是一个数字类型，而根据木木教程中提供的源代码可以知道，5w字以下都是<em>“还在努力更新中.. 加油！加油啦！”</em>字样。于是全数字就可以直接一条解决。</p><p>而大于1k字数的就需要对字符串做点处理，最简单的做法无疑是直接替换掉<code>k</code>然后直接使用<code>Number()</code>函数转化成数字来进行比较。pug 语法中的判断大约像是 python 缩进语法下的 c，没有什么学习难度可言。</p><p>代码就直接看下一部分了。</p>              </div>            </details><details blue><summary> pug 源码和 styl 样式 </summary>              <div class='content'>              <p>修改<code>[root]\themes\butterfly\layout\includes\footer.pug</code>文件，在适合的位置插入如下代码：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">.wordcount</span><br><span class="line">  - let allword = totalcount(site)</span><br><span class="line">  span= <span class="string">&#x27;猹居然写了 &#x27;</span> + allword + <span class="string">&#x27; 字&#x27;</span></span><br><span class="line">  &lt;/br&gt;</span><br><span class="line">  <span class="keyword">if</span> isNaN(allword)</span><br><span class="line">    - allword= Number(allword.replace(<span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> allword&lt; <span class="number">50</span></span><br><span class="line">      span= <span class="string">&quot;还在努力更新中.. 加油！加油啦！&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">70</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 埃克苏佩里 的 《小王子》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">90</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 鲁迅 的 《呐喊》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">100</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 林海音 的 《城南旧事》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">110</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 马克·吐温 的 《王子与乞丐》了！ 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">120</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 鲁迅 的 《彷徨》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">130</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 余华 的 《活着》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">140</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 曹禺 的 《雷雨》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">150</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 史铁生 的 《宿命的写作》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">160</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 伯内特 的 《秘密花园》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">170</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 曹禺 的 《日出》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">180</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 马克·吐温 的 《汤姆·索亚历险记》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">190</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 沈从文 的 《边城》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">200</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 亚米契斯 的 《爱的教育》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">210</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 巴金 的 《寒夜》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">220</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 东野圭吾 的 《解忧杂货店》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">230</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 莫泊桑 的 《一生》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">250</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 简·奥斯汀 的 《傲慢与偏见》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">280</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 钱钟书 的 《围城》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">300</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 张炜 的 《古船》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">310</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 茅盾 的 《子夜》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">320</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 阿来 的 《尘埃落定》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">340</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 艾米莉·勃朗特 的 《呼啸山庄》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">350</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 雨果 的 《巴黎圣母院》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> allword&lt; <span class="number">360</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本 东野圭吾 的 《白夜行》 了啊&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      span= <span class="string">&quot;好像写完一本我国著名的 四大名著 了！！！&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    span= <span class="string">&quot;还在努力更新中.. 加油！加油啦！&quot;</span></span><br></pre></td></tr></table></figure><p>相关联的样式如下：</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#footer</span><br><span class="line">  .wordcount</span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Noto Serif SC&#x27;</span>, -apple-system,BlinkMacSystemFont,Roboto,Segoe UI,Helvetica,Arial,serif</span><br><span class="line">    <span class="attribute">font-size</span>: large</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>              </div>            </details><h3 id="fluid风格页脚"><a href="#fluid风格页脚" class="headerlink" title="fluid风格页脚"></a>fluid风格页脚</h3><p>实际上<a href="https://hexo.fluid-dev.com/">fluid</a>这个主题还是很戳我的感觉的，说简洁优雅我觉得并不为过，配置也简单（相比 butterfly 来讲就是没那么臃肿但也没那么通用化，但是由于 ejs 语法我也没空学，魔改它相对的就有一些难度）。它的页脚的简洁大方就可以作为我魔改移植的思路源头。</p><p>另外的是官方也给了页脚添加站点运行时长的教程，一样也作为了移植的对象来源。所以本部分将分为两节的魔改：增添站点运行时长魔改和原生 fluid 主题页脚魔改。</p><p>原生 fluid 新增完运行时长后的效果：</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/fluid_footer.png"></p><p>bf移植后效果（本地截的图，访问人数、浏览次数有问题很正常）：</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/noionion_bf_footer.png"></p><p>参考 fluid 教程：</p><div class="tag link"><a class="link-card" title="Fluid 页脚增加网站运行时长" href="https://hexo.fluid-dev.com/posts/fluid-footer-custom/"><div class="left"><img src="https://hexo.fluid-dev.com/img/fluid.png"/></div><div class="right"><p class="text">Fluid 页脚增加网站运行时长</p><p class="url">https://hexo.fluid-dev.com/posts/fluid-footer-custom/</p></div></a></div><details cyan open><summary> 增加网站运行时长 </summary>              <div class='content'>              <p>其实 butterfly 主题官方在侧栏本身就提供了运行时长统计这一功能，但是原生的主题并不进行细致到时分秒的统计，我也懒得在它原生基础上继续修改。而 fluid 给的教程是十分友好的 html + js，移植到那个地方都有良好的鲁棒性。于是 js 照搬，改改输出的时间和字段；再把 html 稍微翻译成 pug 的语法，写好样式，就是个可用的版本。</p><p>原生提供的 html 代码是这样的：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 0.85rem&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/duration.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>稍微改改样子，就差不多了：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">div(style=<span class="string">&quot;font-size: 0.7rem&quot;</span>)</span><br><span class="line">  span<span class="comment">#timeDate= &#x27;载入天数...&#x27;</span></span><br><span class="line">  span= <span class="string">&#x27; &#x27;</span></span><br><span class="line">  span<span class="comment">#times= &#x27;载入时分秒...&#x27;</span></span><br><span class="line">  script(src=<span class="string">&quot;/js/add/duration.js&quot;</span>)</span><br></pre></td></tr></table></figure>              </div>            </details><details red open><summary> fluid 页脚移植 </summary>              <div class='content'>              <p>fluid 主题的原生页脚其实也算不上“原生”，更准确的说是默认写在了配置文件中：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">content:</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">    &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Hexo&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;i class=&quot;iconfont icon-love&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">    &lt;a href=&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Fluid&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">  &#x27;</span></span><br></pre></td></tr></table></figure><p>我要的只是它的样式，自然抄一个也不是什么难事：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">.footer-content</span><br><span class="line">  a(href=<span class="string">&quot;https://hexo.io&quot;</span> target=<span class="string">&quot;_blank&quot;</span> rel=<span class="string">&quot;nofollow noopener&quot;</span>)</span><br><span class="line">    span(style=<span class="string">&quot;padding: 0.4rem&quot;</span>)= <span class="string">&#x27;hexo&#x27;</span></span><br><span class="line">  a</span><br><span class="line">    i.fas.fa-heart</span><br><span class="line">  a(href=<span class="string">&quot;https://butterfly.js.org/&quot;</span> target=<span class="string">&quot;_blank&quot;</span> rel=<span class="string">&quot;nofollow noopener&quot;</span>)</span><br><span class="line">    span(style=<span class="string">&quot;padding: 0.4rem&quot;</span>)= <span class="string">&#x27;butterfly&#x27;</span></span><br></pre></td></tr></table></figure><p>再加上底下的站点统计（这个才是真的 fluid 原生内容，但自己写就够了）</p><blockquote><p>虽然不蒜子的统计经常莫得，但用它的接口我觉得挺好</p></blockquote><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">.statistics</span><br><span class="line">  span<span class="comment">#site_uv= &#x27;有 &#x27;</span></span><br><span class="line">    span<span class="comment">#busuanzi_value_site_uv</span></span><br><span class="line">    span= <span class="string">&#x27; 人光顾过猹的小窝&#x27;</span></span><br><span class="line">  span<span class="comment">#site_pv</span></span><br><span class="line">    span= <span class="string">&#x27;共 &#x27;</span></span><br><span class="line">    span<span class="comment">#busuanzi_value_site_pv</span></span><br><span class="line">    span= <span class="string">&#x27; 次在这里摘了个瓜&#x27;</span></span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> 相关源码修改 </summary>              <div class='content'>              <p>稍微整合一下上述 pug 的移植修改，还是修改同一个文件：<code>[root]\themes\butterfly\layout\includes\footer.pug</code>，在适合的位置插入如下代码（字样需要自己改改）：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">.footer-content</span><br><span class="line">  a(href=<span class="string">&quot;https://hexo.io&quot;</span> target=<span class="string">&quot;_blank&quot;</span> rel=<span class="string">&quot;nofollow noopener&quot;</span>)</span><br><span class="line">    span(style=<span class="string">&quot;padding: 0.4rem&quot;</span>)= <span class="string">&#x27;hexo&#x27;</span></span><br><span class="line">  a</span><br><span class="line">    i.fas.fa-heart</span><br><span class="line">  a(href=<span class="string">&quot;https://butterfly.js.org/&quot;</span> target=<span class="string">&quot;_blank&quot;</span> rel=<span class="string">&quot;nofollow noopener&quot;</span>)</span><br><span class="line">    span(style=<span class="string">&quot;padding: 0.4rem&quot;</span>)= <span class="string">&#x27;butterfly&#x27;</span></span><br><span class="line">  div(style=<span class="string">&quot;font-size: 0.7rem&quot;</span>)</span><br><span class="line">    span<span class="comment">#timeDate= &#x27;载入天数...&#x27;</span></span><br><span class="line">    span= <span class="string">&#x27; &#x27;</span></span><br><span class="line">    span<span class="comment">#times= &#x27;载入时分秒...&#x27;</span></span><br><span class="line">    script(src=<span class="string">&quot;/js/add/duration.js&quot;</span>)</span><br><span class="line">.statistics</span><br><span class="line">  span<span class="comment">#site_uv= &#x27;有 &#x27;</span></span><br><span class="line">    span<span class="comment">#busuanzi_value_site_uv</span></span><br><span class="line">    span= <span class="string">&#x27; 人光顾过猹的小窝&#x27;</span></span><br><span class="line">  span<span class="comment">#site_pv</span></span><br><span class="line">    span= <span class="string">&#x27;共 &#x27;</span></span><br><span class="line">    span<span class="comment">#busuanzi_value_site_pv</span></span><br><span class="line">    span= <span class="string">&#x27; 次在这里摘了个瓜&#x27;</span></span><br></pre></td></tr></table></figure><p>然后再新增文件：<code>[root]\themes\butterfly\source\js\add\duration.js</code>（实际上是 fluid 官方提供的 js，也还是要修改一些字样和起始的时间）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">/** 计时起始时间，自行修改 **/</span></span><br><span class="line">  <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&quot;2020/10/31 00:00:00&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    now.setTime(now.getTime()+<span class="number">250</span>);</span><br><span class="line">    days = (now - start) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">    dnum = <span class="built_in">Math</span>.floor(days);</span><br><span class="line">    hours = (now - start) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum);</span><br><span class="line">    hnum = <span class="built_in">Math</span>.floor(hours);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">String</span>(hnum).length === <span class="number">1</span> )&#123;</span><br><span class="line">      hnum = <span class="string">&quot;0&quot;</span> + hnum;</span><br><span class="line">    &#125;</span><br><span class="line">    minutes = (now - start) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span><br><span class="line">    mnum = <span class="built_in">Math</span>.floor(minutes);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">String</span>(mnum).length === <span class="number">1</span> )&#123;</span><br><span class="line">      mnum = <span class="string">&quot;0&quot;</span> + mnum;</span><br><span class="line">    &#125;</span><br><span class="line">    seconds = (now - start) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum);</span><br><span class="line">    snum = <span class="built_in">Math</span>.round(seconds);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">String</span>(snum).length === <span class="number">1</span> )&#123;</span><br><span class="line">      snum = <span class="string">&quot;0&quot;</span> + snum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 字样根据需要调整 **/</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;timeDate&quot;</span>).innerHTML = <span class="string">&quot;猹已经自己种瓜长达&amp;nbsp&quot;</span>+dnum+<span class="string">&quot;&amp;nbsp天&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;times&quot;</span>).innerHTML = hnum + <span class="string">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class="string">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class="string">&quot;&amp;nbsp秒啦，咱不能老偷瓜的！&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  update();</span><br><span class="line">  <span class="built_in">setInterval</span>(update, <span class="number">1000</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>相关的 styl 样式如下：</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#footer</span><br><span class="line">  .footer-<span class="attribute">content</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">    a</span><br><span class="line">      <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif</span><br><span class="line">      <span class="attribute">color</span>: var(--font-color)</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1rem</span></span><br><span class="line">  .statistics</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0.6rem</span></span><br><span class="line">    <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="attribute">flex-direction</span>: column</span><br><span class="line">    <span class="attribute">justify-content</span>: center</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Noto Serif SC&#x27;</span>, -apple-system,BlinkMacSystemFont,Roboto,Segoe UI,Helvetica,Arial,serif</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.6rem</span></span><br><span class="line">    #site_pv</span><br><span class="line">      <span class="attribute">display</span>: inline</span><br><span class="line">      <span class="attribute">text-align</span>: center</span><br><span class="line">    #site_uv</span><br><span class="line">      <span class="attribute">display</span>: inline</span><br><span class="line">      <span class="attribute">text-align</span>: center</span><br></pre></td></tr></table></figure>              </div>            </details><details blue open><summary> 看心情的页脚移植待办 </summary>              <div class='content'>              <div class='checkbox red'><input type="checkbox" />            <p>徽标（暂时没备案就懒得搞）</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>背景（看猹什么时候愿意画画）</p>            </div>              </div>            </details> ]]></content>
      
      
      <categories>
          
          <category> 魔改日记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
            <tag> Course </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猹的魔改日记-小菜单和复制/F12提示栏</title>
      <link href="40244.html"/>
      <url>40244.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>温馨提示：本日记本只提供魔改参考，并不做通用处理，很多源码修改都需要根据自己博客做小小微调</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>另外在修改源码时注意做好备份处理。本帖只提供思路与方法，如果哪里炸了，请检查语法与缩进等，猹概不负责啦！</p></div><p>继白嫖<a href="https://akilar.top/">店长</a>、<a href="https://zfe.space/">冰老师</a>、<a href="https://www.antmoe.com/">小康</a>、<a href="https://www.nesxc.com/">小N</a>等大佬的魔改之后，猹终于不满于白嫖，开始想动手实操，把自己的博客调教成想要的样子，也以此来使猹学前端有实操的机会。</p><p>当然在整个站点还没修改完之前，这些魔改内容只会在<a href="https://blogdev.noionion.top/">猹的魔改测试站</a>出现。你可以在测试站点进行预览。<del>（当然测试站点会有非常多的bug和还没调的设置和样式，这些也不需要和猹吐槽）</del>在魔改完成之前主站也不会再做任何样式调整</p><p><strong>注</strong>：这部分前言内容会在魔改日记本的每一篇都出现；另外这是一篇日记而非教程，文风可能不是那么友好（逃</p><hr><h2 id="小菜单的调整"><a href="#小菜单的调整" class="headerlink" title="小菜单的调整"></a>小菜单的调整</h2><h3 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h3><p>其实小菜单的魔改要从上篇日记说起。双栏变单栏，就需要把侧边栏有用的部分提取出来。对于我而言，侧边栏最有用的莫过于作者卡片和文章页的目录，至于统计也算稍稍有用（数据咱还是偶尔要康康的嘛），这个可以丢页脚。</p><p>在上篇日记中，我已经实现了侧边菜单栏集成作者卡片。但是侧栏只有移动端具备，电脑端整一个侧边菜单栏显然不合适。那么小菜单就成了丢作者卡片的好去处。而目录丢小菜单也是再合适不过了，本来butterfly主题的移动端也是这么干的。现在就差怎么设计合适了。</p><p>我前前后后想过了好多个方案，有类似于两侧加雷姆角标的（来自火喵的建议，想试试的可以直接引入<code>&lt;script src=&quot;https://cdn1.tianli0.top/gh/fz6m/lamu-leimu-button@1.2/dist/lamu-leimu.min.js&quot;&gt;&lt;/script&gt; # 拉姆雷姆角标参考</code>；还有类似书签一样的侧边菜单；最后写了现在这版</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/20211130201321.png" style="zoom: 67%;" /><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/20211130201410.png" style="zoom:66%;" /></p><p>另外其实这篇魔改大部分是可以直接用的（只要你只限于我开的这些功能的话</p><details cyan><summary> 基础面板布局和样式 </summary>              <div class='content'>              <p>本身卡片直接从侧边栏的源码直接扒就有，只有样式和JS函数算是对于我来讲真正麻烦的东西。毕竟是个前端大白菜，很多东西还是得一步一步来。</p><p>首先是html的原本代码。除开目录页，小功能菜单显然能在电脑端时有作者卡片、跳转最顶和展开关闭，而在文章页（这个判断hexo有内部函数可以实现）则必须有目录和评论跳转功能。最基本的几项功能就有了。因为展开和关闭写在一起再用js、css去完成动画的变化显然比分开写两个要难，所以不如写两个再去控制显隐吧。</p><p>把原先的<code>[root]\themes\butterfly\layout\includes\rightside.pug</code>备份，重写一份代码</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#rightside</span></span><br><span class="line">  <span class="comment">#rightside-menu</span></span><br><span class="line">    //- 作者UI卡片</span><br><span class="line">    <span class="comment">#rightside-avatar-card</span></span><br><span class="line">      .<span class="keyword">is</span>-center<span class="comment">#rightside-avatar</span></span><br><span class="line">        .avatar-img</span><br><span class="line">          img(src=url_for(theme.avatar.img) onerror=`this.onerror=null;this.src=<span class="string">&#x27;` + url_for(theme.error_img.flink) + `&#x27;</span>` alt=<span class="string">&quot;avatar&quot;</span>)</span><br><span class="line">        .author-info__name= config.author</span><br><span class="line">        .author-info__description!= theme.aside.card_author.description || config.description</span><br><span class="line">      </span><br><span class="line">      .site-data</span><br><span class="line">        <span class="keyword">if</span> site.posts.length</span><br><span class="line">          .data-item.<span class="keyword">is</span>-center</span><br><span class="line">            .data-item-link</span><br><span class="line">              a(href=url_for(config.archive_dir) + <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                .headline= _p(<span class="string">&#x27;aside.articles&#x27;</span>) </span><br><span class="line">                .length-num= site.posts.length</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> site.tags.length</span><br><span class="line">          .data-item.<span class="keyword">is</span>-center</span><br><span class="line">            .data-item-link</span><br><span class="line">              a(href=url_for(config.tag_dir) + <span class="string">&#x27;/&#x27;</span> )</span><br><span class="line">                .headline= _p(<span class="string">&#x27;aside.tags&#x27;</span>)</span><br><span class="line">                .length-num= site.tags.length</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> site.categories.length</span><br><span class="line">          .data-item.<span class="keyword">is</span>-center</span><br><span class="line">            .data-item-link</span><br><span class="line">              a(href=url_for(config.category_dir) + <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                .headline= _p(<span class="string">&#x27;aside.categories&#x27;</span>) </span><br><span class="line">                .length-num= site.categories.length</span><br><span class="line"></span><br><span class="line">      //- begin follow_me按钮</span><br><span class="line">      <span class="keyword">if</span> theme.aside.card_author.button.enable</span><br><span class="line">        a<span class="comment">#card-info-btn.button--animated(href=theme.aside.card_author.button.link)</span></span><br><span class="line">          i(class=theme.aside.card_author.button.icon)</span><br><span class="line">          span=theme.aside.card_author.button.text</span><br><span class="line">      //- end</span><br><span class="line">        </span><br><span class="line">      //- begin 社交</span><br><span class="line">      <span class="keyword">if</span>(theme.social)</span><br><span class="line">        .menu-info-social-icons.<span class="keyword">is</span>-center</span><br><span class="line">          !=fragment_cache(<span class="string">&#x27;social&#x27;</span>, function()&#123;<span class="keyword">return</span> partial(<span class="string">&#x27;includes/header/social&#x27;</span>)&#125;)</span><br><span class="line">      //- end</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#rightside-menus.is-center</span></span><br><span class="line">      //- 繁简体切换</span><br><span class="line">        button<span class="comment">#rightside-childmenu-translate(type=&quot;button&quot;, title=_p(&#x27;rightside.translate_title&#x27;))</span></span><br><span class="line">          i.fas.fa-cog.fa-spin</span><br><span class="line">      //- 目录</span><br><span class="line">      <span class="keyword">if</span> is_post()</span><br><span class="line">        button<span class="comment">#rightside-childmenu-contents(type=&quot;button&quot;, title=&quot;目录&quot;)</span></span><br><span class="line">          i.fas.fa-<span class="built_in">list</span>-ul</span><br><span class="line">      //- 跳转评论</span><br><span class="line">      <span class="keyword">if</span> is_post()</span><br><span class="line">        button<span class="comment">#rightside-childmenu-comment(href=&quot;#post-comment&quot; title=_p(&quot;rightside.scroll_to_comment&quot;))</span></span><br><span class="line">          i.fas.fa-comments</span><br><span class="line">      //- 跳转最上</span><br><span class="line">      button<span class="comment">#rightside-childmenu-go-up(type=&quot;button&quot; title=_p(&quot;rightside.back_to_top&quot;))</span></span><br><span class="line">        i.fas.fa-arrow-up</span><br><span class="line">      //- 菜单展开/关闭</span><br><span class="line">      button<span class="comment">#rightside-childmenu-unfold(type=&quot;button&quot; title=&quot;展开菜单&quot;)</span></span><br><span class="line">        i.fas.fa-angle-up</span><br><span class="line">      button<span class="comment">#rightside-childmenu-fold(type=&quot;button&quot; title=&quot;收起菜单&quot;)</span></span><br><span class="line">        i.fas.fa-angle-down</span><br></pre></td></tr></table></figure><p>html的基本架构就有了</p><p>现在来考虑每一部分的css。这里就不唠嗑咋写的了，不断调试出真知喽（记得不忘黑夜模式）</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">rightside-menu</span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line">  <span class="attribute">transform</span>: translate(-<span class="number">13rem</span>, -<span class="number">21rem</span>)</span><br><span class="line">  #rightside-avatar-card</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#ffd7e4</span> <span class="number">0%</span>, <span class="number">#c8f1ff</span> <span class="number">100%</span>)</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">19.6rem</span></span><br><span class="line">    <span class="attribute">display</span>: none</span><br><span class="line">    <span class="comment">//transform: translate(-20px, -20px)</span></span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif</span><br><span class="line">    #rightside-avatar</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0.3rem</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 信息、头像位置调整*/</span></span><br><span class="line">    .site-data</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">display</span>: table</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">table-layout</span>: fixed</span><br><span class="line">      .data-item</span><br><span class="line">        <span class="attribute">display</span>: table-cell</span><br><span class="line">    <span class="comment">/* 分类等字体加粗 */</span></span><br><span class="line">    .headline</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">0.875rem</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .length-num</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">0.8rem</span> <span class="meta">!important</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .author-info__name</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .author-info__description</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    <span class="comment">/* 作者名 */</span></span><br><span class="line">    .author-info__name</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">500</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.57em</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 follow_me按钮*/</span></span><br><span class="line">    #card-info-btn</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.3rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">background-color</span>: var(--btn-bg)</span><br><span class="line">      <span class="attribute">color</span>: var(--btn-color)</span><br><span class="line">      <span class="attribute">text-align</span>: center</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">2.4</span></span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.625rem</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 社交图标 */</span></span><br><span class="line">    .menu-info-social-icons</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.5rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">      .social-<span class="attribute">icon</span></span><br><span class="line">        <span class="attribute">display</span>: inline</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.3rem</span> <span class="number">0</span> <span class="number">0.3rem</span></span><br><span class="line"></span><br><span class="line">  #rightside-menus</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    <span class="attribute">transform</span>: translateY(<span class="number">19.6rem</span>)</span><br><span class="line">    #rightside-childmenu-contents</span><br><span class="line">    #rightside-childmenu-comment</span><br><span class="line">      <span class="attribute">visibility</span>: hidden</span><br><span class="line">    #rightside-childmenu-fold</span><br><span class="line">      <span class="attribute">display</span>: none</span><br><span class="line">    <span class="comment">/* 功能按钮栏 */</span></span><br><span class="line">    button</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">2rem</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">2rem</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.6rem</span></span><br><span class="line">      <span class="attribute">background</span>: var(--card-bg)</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0.15rem</span> <span class="number">0</span> <span class="number">0.15rem</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  #rightside-menu</span><br><span class="line">    #rightside-avatar-card</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#fff</span></span><br><span class="line">      <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#2c0c16</span> <span class="number">0%</span>, <span class="number">#043749</span> <span class="number">100%</span>)</span><br><span class="line">      .author-info__name</span><br><span class="line">      .author-info__description</span><br><span class="line">      .headline</span><br><span class="line">      .length-num</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">    #rightside-menus</span><br><span class="line">      button</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#fff</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">        .fas</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br></pre></td></tr></table></figure><p>样子基本成行啦（正常而言的显隐状态也已经写进上面的代码里了）</p>              </div>            </details><details red><summary> 目录布局和样式 </summary>              <div class='content'>              <p>按照这个布局，我们其实只需要在作者卡片相同位置上覆盖一层相同块大小的目录即可。这样空间也不会显得太挤。</p><p>所以再加入新的html和css来描述目录和样式（一般而言鼠标在停留于目录某一项时，此项重点突出会更好一点，所以给他加上了hover的样式。至于追踪页面定位目录调项，这咱还不会就没做）</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> is_post()</span><br><span class="line">  <span class="comment">#rightside-contents</span></span><br><span class="line">    //- - let tocNumber = page.toc_number !== undefined ? page.toc_number : theme.toc.number</span><br><span class="line">    <span class="comment">#card-toc.card-widget</span></span><br><span class="line">      .item-headline.<span class="keyword">is</span>-center</span><br><span class="line">        i.fas.fa-stream</span><br><span class="line">        span= _p(<span class="string">&#x27;aside.card_toc&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (page.encrypt == true)</span><br><span class="line">        .toc-content.toc-div-class(style=&quot;display:none&quot;)!=toc(page.origin, &#123;list_number: tocNumber&#125;)</span><br><span class="line">      <span class="keyword">else</span> </span><br><span class="line">        .toc-content!=toc(page.content, &#123;list_number: tocNumber&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#rightside-contents</span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line">  <span class="attribute">transform</span>: translate(-<span class="number">13rem</span>, -<span class="number">21rem</span>)</span><br><span class="line">  <span class="attribute">display</span>: none</span><br><span class="line">  #card-toc</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#ffd7e4</span> <span class="number">0%</span>, <span class="number">#c8f1ff</span> <span class="number">100%</span>)</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">19.6rem</span></span><br><span class="line">    .item-headline</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1rem</span></span><br><span class="line">      span</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">0.5rem</span></span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif</span><br><span class="line">    <span class="selector-tag">span</span>.toc-text</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .toc</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">105%</span></span><br><span class="line">      <span class="attribute">overflow-y</span>: scroll</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">16.3rem</span></span><br><span class="line">      <span class="attribute">margin-top</span>: -<span class="number">0.3rem</span></span><br><span class="line">      <span class="attribute">margin-left</span>: -<span class="number">0.7rem</span></span><br><span class="line">      .toc-child</span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">1rem</span></span><br><span class="line">      &amp;::-webkit-scrollbar</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span></span><br><span class="line">    .toc-link</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      padding-left: .3rem</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">3px</span> solid transparent</span><br><span class="line">      <span class="attribute">color</span>: var(--toc-link-color)</span><br><span class="line">      <span class="attribute">transition</span>: all <span class="number">0.6s</span> ease-in-out</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.1rem</span> <span class="number">0</span> <span class="number">0.1rem</span> <span class="number">0.1rem</span></span><br><span class="line">      &amp;:hover</span><br><span class="line">        <span class="attribute">background</span>: var(--btn-bg)</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">0.4rem</span></span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0.2rem</span> <span class="number">#000</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0.3rem</span> <span class="number">0</span> <span class="number">0.3rem</span> <span class="number">0.1rem</span></span><br><span class="line">        <span class="selector-tag">span</span>.toc-text</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  #rightside-contents</span><br><span class="line">    #card-toc</span><br><span class="line">      <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#2c0c16</span> <span class="number">0%</span>, <span class="number">#043749</span> <span class="number">100%</span>)</span><br><span class="line">      <span class="selector-tag">span</span>.toc-text</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span></span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> 各个按钮的功能 </summary>              <div class='content'>              <p>这个对于我应该算是最难的吧，毕竟没学过js。所以就查了一下原先的js来进行仿写。（如果熟悉bf源码的会发现我有好多都是源码直接扣过来的）</p><p>这里涉及的函数应该有三项，小菜单的展开和关闭、目录的展开和关闭、还有跳转顶部。跳转顶部最好解决，可以直接抄源码。而其他块元素的显示隐藏一般有两种，一是写两套样式，然后用js给对应块套类（店长的方法，可惜我懒，咱不想写两套）；另一种是直接对块进行显隐控制。</p><p>这里咱吃了大亏，因为<code>display: none</code>会使元素的体积被忽略，咱为了少写个校准便宜就直接用了<code>visibility: visible/hidden</code>。<code>visibility</code>的原理是让浏览器重写样式，比如令元素不可见，层次比较多的元素不会一次性消失，而是一个个消失（这就特别怪异）</p><p>最后还是写偏移了</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> rightSideFn = &#123;</span><br><span class="line">    showBtn: <span class="function">() =&gt;</span> &#123; <span class="comment">// 点击展开</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">window</span>.innerWidth &gt; <span class="number">900</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-avatar-card&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-menus&#x27;</span>).style.transform = <span class="string">&quot;translateY(0)&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-unfold&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-fold&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.visibility = <span class="string">&quot;visible&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-comment&#x27;</span>).style.visibility = <span class="string">&quot;visible&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    hideBtn: <span class="function">() =&gt;</span> &#123; <span class="comment">// 点击收起</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-avatar-card&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-unfold&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-fold&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-menus&#x27;</span>).style.transform = <span class="string">&quot;translateY(19.6rem)&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.background = <span class="string">&quot;var(--card-bg)&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.visibility = <span class="string">&quot;hidden&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-comment&#x27;</span>).style.visibility = <span class="string">&quot;hidden&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    ShowOrHideContent: <span class="function">() =&gt;</span>&#123; <span class="comment">//目录展开/关闭</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display == <span class="string">&quot;inline-block&quot;</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.background = <span class="string">&quot;var(--card-bg)&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.background = <span class="string">&quot;var(--btn-bg)&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      event.stopPropagation()</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    scrollToTop: <span class="function">() =&gt;</span> &#123; <span class="comment">// 回到顶部</span></span><br><span class="line">      btf.scrollToDest(<span class="number">0</span>, <span class="number">500</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> $target = e.target.id || e.target.parentNode.id</span><br><span class="line">    <span class="keyword">switch</span> ($target) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-go-up&#x27;</span>:</span><br><span class="line">        rightSideFn.scrollToTop()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-unfold&#x27;</span>:</span><br><span class="line">        rightSideFn.showBtn()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-fold&#x27;</span>:</span><br><span class="line">        rightSideFn.hideBtn()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-contents&#x27;</span>:</span><br><span class="line">        rightSideFn.ShowOrHideContent()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 细节修改 </summary>              <div class='content'>              <p>大体上面的已经可以做完了，但咱魔改自己的站点，那肯定是希望精益求精。电脑端时看不出啥问题了，就从移动端下手喽</p><p>手机看小菜单时总觉得不居中奇奇怪怪的；因为在手机时作者卡片是不需要显示了（侧边菜单栏有了），首页那个展开也展开不出啥来，不如干脆默认展开；最后是目录，移动端可能在展开目录想收起时是点目录外区域而非点目录按钮。</p><p>于是我针对移动端做了css和js的一点点修复</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>)</span><br><span class="line">  #rightside</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    margin: auto</span><br><span class="line">    left: <span class="number">38px</span></span><br><span class="line">    #rightside-menu</span><br><span class="line">      transform: translate(<span class="number">0</span>, -<span class="number">18rem</span>)</span><br><span class="line">      #rightside-childmenu-unfold</span><br><span class="line">        display: none</span><br><span class="line">      #rightside-childmenu-contents</span><br><span class="line">      #rightside-childmenu-comment</span><br><span class="line">        visibility: visible</span><br><span class="line">      button</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1.5rem</span></span><br><span class="line">    #rightside-contents</span><br><span class="line">      transform: translate(<span class="number">0</span>, -<span class="number">18rem</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 补充：移动端点击目录外区域关闭目录</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display == <span class="string">&quot;inline-block&quot;</span> &amp;&amp; <span class="built_in">window</span>.innerWidth &lt;= <span class="number">900</span>)</span><br><span class="line">    rightSideFn.ShowOrHideContent()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside&#x27;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  event = event || <span class="built_in">window</span>.event</span><br><span class="line">  event.stopPropagation()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>              </div>            </details><hr><h2 id="复制提醒和F12禁用与提醒"><a href="#复制提醒和F12禁用与提醒" class="headerlink" title="复制提醒和F12禁用与提醒"></a>复制提醒和F12禁用与提醒</h2><p>这个是根据火喵酱的<a href="https://cat.dorcandy.cn/7e2fcd3e.html/comment-page-1">利用element显示Notification通知，复制提醒，禁用F12或右键菜单提醒</a>来做的（我写的时候这个笨蛋火喵把cdn写错了，导致我以为hexo不能直接用这玩意）</p><p>引入vue组件（我很想把这个去掉的）和alement组件库/样式表</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 引入VUE --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn1.tianli0.top&#x2F;npm&#x2F;vue@2.6.14&#x2F;dist&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!-- 引入样式 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn1.tianli0.top&#x2F;npm&#x2F;element-ui@2.15.6&#x2F;lib&#x2F;index.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!-- 引入组件库 --&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn1.tianli0.top&#x2F;npm&#x2F;element-ui@2.15.6&#x2F;packages&#x2F;theme-chalk&#x2F;lib&#x2F;index.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>然后js引入</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 复制提醒</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&quot;copy&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.$notify(&#123;</span><br><span class="line">        title:<span class="string">&quot;哎嘿！复制成功&quot;</span>,</span><br><span class="line">        message:<span class="string">&quot;若要转载请务必保留原文链接！猹分你个瓜！&quot;</span>,</span><br><span class="line">        position: <span class="string">&#x27;bottom-right&#x27;</span>,</span><br><span class="line">        offset: <span class="number">50</span>,</span><br><span class="line">        showClose: <span class="literal">false</span>,</span><br><span class="line">        type:<span class="string">&quot;success&quot;</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span>&#123;<span class="attr">visible</span>:<span class="literal">false</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 禁用F12按键并提醒 */</span></span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">123</span>) &#123;</span><br><span class="line">    event.keyCode = <span class="number">0</span>;</span><br><span class="line">    event.returnValue = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.$notify(&#123;</span><br><span class="line">          title:<span class="string">&quot;啊啊！你干嘛啊！&quot;</span>,</span><br><span class="line">          message:<span class="string">&quot;怎么能随随便便想扒猹的底裤呢？坏！&quot;</span>,</span><br><span class="line">          position: <span class="string">&#x27;bottom-right&#x27;</span>,</span><br><span class="line">          offset: <span class="number">50</span>,</span><br><span class="line">          showClose: <span class="literal">false</span>,</span><br><span class="line">          type:<span class="string">&quot;error&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>&#123;<span class="attr">visible</span>:<span class="literal">false</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>即可享用（魔改测试站的控制台如果打开，会看到我的一段话哦（感觉貌似有点涩</p><hr><h2 id="完整的代码"><a href="#完整的代码" class="headerlink" title="完整的代码"></a>完整的代码</h2><p>这篇魔改的大部分都是可以直接拿去用的（小菜单阉割了好多功能所以要就自己加喽），所以就放完整的源码以供参考了</p><details cyan><summary> rightside.pug须替换源码 </summary>              <div class='content'>              <figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#rightside</span></span><br><span class="line">  <span class="comment">#rightside-menu</span></span><br><span class="line">    //- 作者UI卡片</span><br><span class="line">    <span class="comment">#rightside-avatar-card</span></span><br><span class="line">      .<span class="keyword">is</span>-center<span class="comment">#rightside-avatar</span></span><br><span class="line">        .avatar-img</span><br><span class="line">          img(src=url_for(theme.avatar.img) onerror=`this.onerror=null;this.src=<span class="string">&#x27;` + url_for(theme.error_img.flink) + `&#x27;</span>` alt=<span class="string">&quot;avatar&quot;</span>)</span><br><span class="line">        .author-info__name= config.author</span><br><span class="line">        .author-info__description!= theme.aside.card_author.description || config.description</span><br><span class="line">      </span><br><span class="line">      .site-data</span><br><span class="line">        <span class="keyword">if</span> site.posts.length</span><br><span class="line">          .data-item.<span class="keyword">is</span>-center</span><br><span class="line">            .data-item-link</span><br><span class="line">              a(href=url_for(config.archive_dir) + <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                .headline= _p(<span class="string">&#x27;aside.articles&#x27;</span>) </span><br><span class="line">                .length-num= site.posts.length</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> site.tags.length</span><br><span class="line">          .data-item.<span class="keyword">is</span>-center</span><br><span class="line">            .data-item-link</span><br><span class="line">              a(href=url_for(config.tag_dir) + <span class="string">&#x27;/&#x27;</span> )</span><br><span class="line">                .headline= _p(<span class="string">&#x27;aside.tags&#x27;</span>)</span><br><span class="line">                .length-num= site.tags.length</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> site.categories.length</span><br><span class="line">          .data-item.<span class="keyword">is</span>-center</span><br><span class="line">            .data-item-link</span><br><span class="line">              a(href=url_for(config.category_dir) + <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                .headline= _p(<span class="string">&#x27;aside.categories&#x27;</span>) </span><br><span class="line">                .length-num= site.categories.length</span><br><span class="line"></span><br><span class="line">      //- begin follow_me按钮</span><br><span class="line">      <span class="keyword">if</span> theme.aside.card_author.button.enable</span><br><span class="line">        a<span class="comment">#card-info-btn.button--animated(href=theme.aside.card_author.button.link)</span></span><br><span class="line">          i(class=theme.aside.card_author.button.icon)</span><br><span class="line">          span=theme.aside.card_author.button.text</span><br><span class="line">      //- end</span><br><span class="line">        </span><br><span class="line">      //- begin 社交</span><br><span class="line">      <span class="keyword">if</span>(theme.social)</span><br><span class="line">        .menu-info-social-icons.<span class="keyword">is</span>-center</span><br><span class="line">          !=fragment_cache(<span class="string">&#x27;social&#x27;</span>, function()&#123;<span class="keyword">return</span> partial(<span class="string">&#x27;includes/header/social&#x27;</span>)&#125;)</span><br><span class="line">      //- end</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#rightside-menus.is-center</span></span><br><span class="line">      //- 繁简体切换</span><br><span class="line">        button<span class="comment">#rightside-childmenu-translate(type=&quot;button&quot;, title=_p(&#x27;rightside.translate_title&#x27;))</span></span><br><span class="line">          i.fas.fa-cog.fa-spin</span><br><span class="line">      //- 目录</span><br><span class="line">      <span class="keyword">if</span> is_post()</span><br><span class="line">        button<span class="comment">#rightside-childmenu-contents(type=&quot;button&quot;, title=&quot;目录&quot;)</span></span><br><span class="line">          i.fas.fa-<span class="built_in">list</span>-ul</span><br><span class="line">      //- 跳转评论</span><br><span class="line">      <span class="keyword">if</span> is_post()</span><br><span class="line">        button<span class="comment">#rightside-childmenu-comment(href=&quot;#post-comment&quot; title=_p(&quot;rightside.scroll_to_comment&quot;))</span></span><br><span class="line">          i.fas.fa-comments</span><br><span class="line">      //- 跳转最上</span><br><span class="line">      button<span class="comment">#rightside-childmenu-go-up(type=&quot;button&quot; title=_p(&quot;rightside.back_to_top&quot;))</span></span><br><span class="line">        i.fas.fa-arrow-up</span><br><span class="line">      //- 菜单展开/关闭</span><br><span class="line">      button<span class="comment">#rightside-childmenu-unfold(type=&quot;button&quot; title=&quot;展开菜单&quot;)</span></span><br><span class="line">        i.fas.fa-angle-up</span><br><span class="line">      button<span class="comment">#rightside-childmenu-fold(type=&quot;button&quot; title=&quot;收起菜单&quot;)</span></span><br><span class="line">        i.fas.fa-angle-down</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> is_post()</span><br><span class="line">    <span class="comment">#rightside-contents</span></span><br><span class="line">      //- - let tocNumber = page.toc_number !== undefined ? page.toc_number : theme.toc.number</span><br><span class="line">      <span class="comment">#card-toc.card-widget</span></span><br><span class="line">        .item-headline.<span class="keyword">is</span>-center</span><br><span class="line">          i.fas.fa-stream</span><br><span class="line">          span= _p(<span class="string">&#x27;aside.card_toc&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (page.encrypt == true)</span><br><span class="line">          .toc-content.toc-div-class(style=&quot;display:none&quot;)!=toc(page.origin, &#123;list_number: tocNumber&#125;)</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">          .toc-content!=toc(page.content, &#123;list_number: tocNumber&#125;)</span><br></pre></td></tr></table></figure>              </div>            </details><details red><summary> CSS(STYLUS)源码（自行引入） </summary>              <div class='content'>              <figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#rightside-menu</span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line">  <span class="attribute">transform</span>: translate(-<span class="number">13rem</span>, -<span class="number">21rem</span>)</span><br><span class="line">  #rightside-avatar-card</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#ffd7e4</span> <span class="number">0%</span>, <span class="number">#c8f1ff</span> <span class="number">100%</span>)</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">19.6rem</span></span><br><span class="line">    <span class="attribute">display</span>: none</span><br><span class="line">    <span class="comment">//transform: translate(-20px, -20px)</span></span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif</span><br><span class="line">    #rightside-avatar</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0.3rem</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 信息、头像位置调整*/</span></span><br><span class="line">    .site-data</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">display</span>: table</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">table-layout</span>: fixed</span><br><span class="line">      .data-item</span><br><span class="line">        <span class="attribute">display</span>: table-cell</span><br><span class="line">    <span class="comment">/* 分类等字体加粗 */</span></span><br><span class="line">    .headline</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">0.875rem</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .length-num</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">0.8rem</span> <span class="meta">!important</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .author-info__name</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .author-info__description</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    <span class="comment">/* 作者名 */</span></span><br><span class="line">    .author-info__name</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">500</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.57em</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 follow_me按钮*/</span></span><br><span class="line">    #card-info-btn</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.3rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">background-color</span>: var(--btn-bg)</span><br><span class="line">      <span class="attribute">color</span>: var(--btn-color)</span><br><span class="line">      <span class="attribute">text-align</span>: center</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">2.4</span></span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.625rem</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 社交图标 */</span></span><br><span class="line">    .menu-info-social-icons</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.5rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">      .social-<span class="attribute">icon</span></span><br><span class="line">        <span class="attribute">display</span>: inline</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.3rem</span> <span class="number">0</span> <span class="number">0.3rem</span></span><br><span class="line"></span><br><span class="line">  #rightside-menus</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    <span class="attribute">transform</span>: translateY(<span class="number">19.6rem</span>)</span><br><span class="line">    #rightside-childmenu-contents</span><br><span class="line">    #rightside-childmenu-comment</span><br><span class="line">      <span class="attribute">visibility</span>: hidden</span><br><span class="line">    #rightside-childmenu-fold</span><br><span class="line">      <span class="attribute">display</span>: none</span><br><span class="line">    <span class="comment">/* 功能按钮栏 */</span></span><br><span class="line">    button</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">2rem</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">2rem</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.6rem</span></span><br><span class="line">      <span class="attribute">background</span>: var(--card-bg)</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0.15rem</span> <span class="number">0</span> <span class="number">0.15rem</span></span><br><span class="line"></span><br><span class="line">#rightside-contents</span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line">  <span class="attribute">transform</span>: translate(-<span class="number">13rem</span>, -<span class="number">21rem</span>)</span><br><span class="line">  <span class="attribute">display</span>: none</span><br><span class="line">  #card-toc</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#000</span></span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#ffd7e4</span> <span class="number">0%</span>, <span class="number">#c8f1ff</span> <span class="number">100%</span>)</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">19.6rem</span></span><br><span class="line">    .item-headline</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1rem</span></span><br><span class="line">      span</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">0.5rem</span></span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif</span><br><span class="line">    <span class="selector-tag">span</span>.toc-text</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#000</span></span><br><span class="line">    .toc</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">105%</span></span><br><span class="line">      <span class="attribute">overflow-y</span>: scroll</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">16.3rem</span></span><br><span class="line">      <span class="attribute">margin-top</span>: -<span class="number">0.3rem</span></span><br><span class="line">      <span class="attribute">margin-left</span>: -<span class="number">0.7rem</span></span><br><span class="line">      .toc-child</span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">1rem</span></span><br><span class="line">      &amp;::-webkit-scrollbar</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span></span><br><span class="line">    .toc-link</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      padding-left: .3rem</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">3px</span> solid transparent</span><br><span class="line">      <span class="attribute">color</span>: var(--toc-link-color)</span><br><span class="line">      <span class="attribute">transition</span>: all <span class="number">0.6s</span> ease-in-out</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.1rem</span> <span class="number">0</span> <span class="number">0.1rem</span> <span class="number">0.1rem</span></span><br><span class="line">      &amp;:hover</span><br><span class="line">        <span class="attribute">background</span>: var(--btn-bg)</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">0.4rem</span></span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0.2rem</span> <span class="number">#000</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0.3rem</span> <span class="number">0</span> <span class="number">0.3rem</span> <span class="number">0.1rem</span></span><br><span class="line">        <span class="selector-tag">span</span>.toc-text</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line">.el-notification</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#000</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  #rightside-menu</span><br><span class="line">    #rightside-avatar-card</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#fff</span></span><br><span class="line">      <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#2c0c16</span> <span class="number">0%</span>, <span class="number">#043749</span> <span class="number">100%</span>)</span><br><span class="line">      .author-info__name</span><br><span class="line">      .author-info__description</span><br><span class="line">      .headline</span><br><span class="line">      .length-num</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">    #rightside-menus</span><br><span class="line">      button</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#fff</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#000</span></span><br><span class="line">        .fas</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line">  #rightside-contents</span><br><span class="line">    #card-toc</span><br><span class="line">      <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#2c0c16</span> <span class="number">0%</span>, <span class="number">#043749</span> <span class="number">100%</span>)</span><br><span class="line">      <span class="selector-tag">span</span>.toc-text</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line">  .el-notification</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#fff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>)</span><br><span class="line">  #rightside</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2rem</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12rem</span></span><br><span class="line">    margin: auto</span><br><span class="line">    left: <span class="number">38px</span></span><br><span class="line">    #rightside-menu</span><br><span class="line">      transform: translate(<span class="number">0</span>, -<span class="number">18rem</span>)</span><br><span class="line">      #rightside-childmenu-unfold</span><br><span class="line">        display: none</span><br><span class="line">      #rightside-childmenu-contents</span><br><span class="line">      #rightside-childmenu-comment</span><br><span class="line">        visibility: visible</span><br><span class="line">      button</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">1.5rem</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1.5rem</span></span><br><span class="line">    #rightside-contents</span><br><span class="line">      transform: translate(<span class="number">0</span>, -<span class="number">18rem</span>)</span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> JS源码（须与alement的cdn一起自行引入） </summary>              <div class='content'>              <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> rightSideFn = &#123;</span><br><span class="line">    showBtn: <span class="function">() =&gt;</span> &#123; <span class="comment">// 点击展开</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">window</span>.innerWidth &gt; <span class="number">900</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-avatar-card&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-menus&#x27;</span>).style.transform = <span class="string">&quot;translateY(0)&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-unfold&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-fold&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.visibility = <span class="string">&quot;visible&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-comment&#x27;</span>).style.visibility = <span class="string">&quot;visible&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    hideBtn: <span class="function">() =&gt;</span> &#123; <span class="comment">// 点击收起</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-avatar-card&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-unfold&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-fold&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-menus&#x27;</span>).style.transform = <span class="string">&quot;translateY(19.6rem)&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.background = <span class="string">&quot;var(--card-bg)&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.visibility = <span class="string">&quot;hidden&quot;</span></span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-comment&#x27;</span>).style.visibility = <span class="string">&quot;hidden&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    ShowOrHideContent: <span class="function">() =&gt;</span>&#123; <span class="comment">//目录展开/关闭</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display == <span class="string">&quot;inline-block&quot;</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display = <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.background = <span class="string">&quot;var(--card-bg)&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display = <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-childmenu-contents&#x27;</span>).style.background = <span class="string">&quot;var(--btn-bg)&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      event.stopPropagation()</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    scrollToTop: <span class="function">() =&gt;</span> &#123; <span class="comment">// 回到顶部</span></span><br><span class="line">      btf.scrollToDest(<span class="number">0</span>, <span class="number">500</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> $target = e.target.id || e.target.parentNode.id</span><br><span class="line">    <span class="keyword">switch</span> ($target) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-go-up&#x27;</span>:</span><br><span class="line">        rightSideFn.scrollToTop()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-unfold&#x27;</span>:</span><br><span class="line">        rightSideFn.showBtn()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-fold&#x27;</span>:</span><br><span class="line">        rightSideFn.hideBtn()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;rightside-childmenu-contents&#x27;</span>:</span><br><span class="line">        rightSideFn.ShowOrHideContent()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 补充：移动端点击目录外区域关闭目录</span></span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside-contents&#x27;</span>).style.display == <span class="string">&quot;inline-block&quot;</span> &amp;&amp; <span class="built_in">window</span>.innerWidth &lt;= <span class="number">900</span>)</span><br><span class="line">      rightSideFn.ShowOrHideContent()</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;rightside&#x27;</span>).addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    event = event || <span class="built_in">window</span>.event</span><br><span class="line">    event.stopPropagation()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 复制提醒</span></span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">&quot;copy&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.$notify(&#123;</span><br><span class="line">          title:<span class="string">&quot;哎嘿！复制成功&quot;</span>,</span><br><span class="line">          message:<span class="string">&quot;若要转载请务必保留原文链接！猹分你个瓜！&quot;</span>,</span><br><span class="line">          position: <span class="string">&#x27;bottom-right&#x27;</span>,</span><br><span class="line">          offset: <span class="number">50</span>,</span><br><span class="line">          showClose: <span class="literal">false</span>,</span><br><span class="line">          type:<span class="string">&quot;success&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>&#123;<span class="attr">visible</span>:<span class="literal">false</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 禁用F12按键并提醒 */</span></span><br><span class="line">  <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">123</span>) &#123;</span><br><span class="line">      event.keyCode = <span class="number">0</span>;</span><br><span class="line">      event.returnValue = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="built_in">this</span>.$notify(&#123;</span><br><span class="line">            title:<span class="string">&quot;啊啊！你干嘛啊！&quot;</span>,</span><br><span class="line">            message:<span class="string">&quot;怎么能随随便便想扒猹的底裤呢？坏！&quot;</span>,</span><br><span class="line">            position: <span class="string">&#x27;bottom-right&#x27;</span>,</span><br><span class="line">            offset: <span class="number">50</span>,</span><br><span class="line">            showClose: <span class="literal">false</span>,</span><br><span class="line">            type:<span class="string">&quot;error&quot;</span></span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="keyword">return</span>&#123;<span class="attr">visible</span>:<span class="literal">false</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 魔改日记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
            <tag> Course </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猹的魔改日记-菜单栏及移动端侧边菜单栏的魔改</title>
      <link href="12280.html"/>
      <url>12280.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>温馨提示：本日记本只提供魔改参考，并不做通用处理，很多源码修改都需要根据自己博客做小小微调</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>另外在修改源码时注意做好备份处理。本帖只提供思路与方法，如果哪里炸了，请检查语法与缩进等，猹概不负责啦！</p></div><p>继白嫖<a href="https://akilar.top/">店长</a>、<a href="https://zfe.space/">冰老师</a>、<a href="https://www.antmoe.com/">小康</a>、<a href="https://www.nesxc.com/">小N</a>等大佬的魔改之后，猹终于不满于白嫖，开始想动手实操，把自己的博客调教成想要的样子，也以此来使猹学前端有实操的机会。</p><p>当然在整个站点还没修改完之前，这些魔改内容只会在<a href="https://blogdev.noionion.top/">猹的魔改测试站</a>出现。你可以在测试站点进行预览。<del>（当然测试站点会有非常多的bug和还没调的设置和样式，这些也不需要和猹吐槽）</del>在魔改完成之前主站也不会再做任何样式调整</p><p><strong>注</strong>：这部分前言内容会在魔改日记本的每一篇都出现；另外这是一篇日记而非教程，文风可能不是那么友好（逃</p><hr><h2 id="菜单栏魔改的各部分"><a href="#菜单栏魔改的各部分" class="headerlink" title="菜单栏魔改的各部分"></a>菜单栏魔改的各部分</h2><h3 id="菜单栏居中布局和右侧功能实现"><a href="#菜单栏居中布局和右侧功能实现" class="headerlink" title="菜单栏居中布局和右侧功能实现"></a>菜单栏居中布局和右侧功能实现</h3><p>猹的菜单栏一直用的是butterfly最原生的布局，即左侧博客名右侧菜单栏（搜索按钮和菜单）</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/20210820174952.png" alt="魔改前的菜单栏"></p><p>而这样多的菜单项目虽然一目了然，但终归看起来太杂太乱，不能给猹一种简洁的感觉。而猹对<a href="https://blog.zhheo.com/">洪哥</a>和<a href="https://ranas.cn/">小雨</a>的菜单栏那种居中而又功能完备的菜单栏艳羡已久。想来想去就此开始了自己的魔改之路。</p><details cyan><summary> 彩色图标等前置教程 </summary>              <div class='content'>              <p>既然要魔改，那顺便也把图标换成彩色的吧！这里用的是店长的教程帖子<del>（能白嫖的部分还是尽量白嫖的好）</del></p><p>如果不需要彩色图标，这部分请忽略~</p><div class="tag link"><a class="link-card" title="前置：Hexo 引入阿里矢量图标库" href="https://akilar.top/posts/d2ebecef/"><div class="left"><img src="https://cdn1.tianli0.top/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">前置：Hexo 引入阿里矢量图标库</p><p class="url">https://akilar.top/posts/d2ebecef/</p></div></a></div><div class="tag link"><a class="link-card" title="菜单栏多色图标配置教程" href="https://akilar.top/posts/23fdf850/#菜单栏多色图标配置教程"><div class="left"><img src="https://cdn1.tianli0.top/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">菜单栏多色图标配置教程</p><p class="url">https://akilar.top/posts/23fdf850/#菜单栏多色图标配置教程</p></div></a></div><div class="tag link"><a class="link-card" title="Social 卡片彩色图标引入" href="https://akilar.top/posts/23fdf850/#Social卡片彩色图标引入"><div class="left"><img src="https://cdn1.tianli0.top/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">Social 卡片彩色图标引入</p><p class="url">https://akilar.top/posts/23fdf850/#Social卡片彩色图标引入</p></div></a></div>              </div>            </details><details red open><summary> 菜单选项居中 </summary>              <div class='content'>              <p>前置摸完了之后，首先要解决的是菜单栏的居中问题。这部分的源码在<code>[blogroot]\themes\butterfly\layout\includes\header\nav.pug</code></p><p>而检查它的CSS之后，发现<code>div#blog_name</code>的css有一条<code>flex: 1</code></p><p>因而整个菜单栏的最右侧也需要一个相同<code>flex</code>属性的<code>div</code>来平衡。因为右侧我要做一个搜索和黑夜模式切换的功能，所以姑且id命名为<code>navFn</code></p><p>然后给它加个<code>flex: 1</code>的css属性就给菜单栏完成了居中（居中如果用偏移之类的方法显然是会出bug的，改变设备宽度就会发现它又不居中了，改源码加样式是最好的方法）</p><p>然后<strong>子菜单居中</strong>一样参考的一样是店长的文章，这里我就不再写一遍</p><div class="tag link"><a class="link-card" title="butterfly-heo 主题反编译日记" href="https://akilar.top/posts/ecff41cf/"><div class="left"><img src="https://cdn1.tianli0.top/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">butterfly-heo 主题反编译日记</p><p class="url">https://akilar.top/posts/ecff41cf/</p></div></a></div>              </div>            </details><details yellow open><summary> 右侧功能区 </summary>              <div class='content'>              <p>搜索功能是bf菜单栏自带的功能，这里只需要把<code>nav.bug</code>中的搜索模块代码从<code>#menus</code>移到咱刚刚新建的<code>#navFn</code>中即可。如果想将图标换成彩色的，则类似于social卡片彩色图标的替换做法（注意缩进，这里不能直接用我的，你没有这个图标）</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">      if (theme.algolia_search.enable || theme.local_search.enable)</span><br><span class="line">        #search-button</span><br><span class="line">          a.social-icon.search</span><br><span class="line"><span class="deletion">-           i.fas.fa-search.fa-fw</span></span><br><span class="line"><span class="addition">+           svg.icon(aria-hidden=&quot;true&quot;)</span></span><br><span class="line"><span class="addition">+             use(xlink:href=`#`+ &#x27;icon-sousuo&#x27;)</span></span><br><span class="line">            span=&#x27; 搜索&#x27;</span><br></pre></td></tr></table></figure><p>而切换功能相对就复杂一点点，而基础的布局和上边类似（不过那个if判断就没啥必要了），主要是需要调用一个切换的js，我这里就直接扒了bf的js</p><p>注，这里其实是PUG，但没有bf没有PUG的代码高亮，只能用PY了</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#darkmodeBt</span></span><br><span class="line">  a.darkmode.switch</span><br><span class="line">    svg.icon(aria-hidden=<span class="string">&quot;true&quot;</span>)</span><br><span class="line">      use(xlink:href=`<span class="comment">#`+ &#x27;icon-deng1&#x27;)</span></span><br><span class="line">    <span class="keyword">if</span> (theme.display_mode == <span class="string">&#x27;dark&#x27;</span>)</span><br><span class="line">      span<span class="comment">#darkmode-switch=&#x27; 开灯&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">      span<span class="comment">#darkmode-switch=&#x27; 关灯&#x27;</span></span><br></pre></td></tr></table></figure><p>怎么引入js这里就不用我多说了</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> navFn = &#123;</span><br><span class="line">    switchDarkMode: <span class="function">() =&gt;</span> &#123; <span class="comment">// Switch Between Light And Dark Mode</span></span><br><span class="line">      <span class="keyword">const</span> nowMode = <span class="built_in">document</span>.documentElement.getAttribute(<span class="string">&#x27;data-theme&#x27;</span>) === <span class="string">&#x27;dark&#x27;</span> ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span></span><br><span class="line">      <span class="keyword">if</span> (nowMode === <span class="string">&#x27;light&#x27;</span>) &#123;</span><br><span class="line">        activateDarkMode()</span><br><span class="line">        saveToLocal.set(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;dark&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">        GLOBAL_CONFIG.Snackbar !== <span class="literal">undefined</span> &amp;&amp; btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night)</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;darkmode-switch&#x27;</span>).innerHTML = <span class="string">&#x27; 开灯&#x27;</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        activateLightMode()</span><br><span class="line">        saveToLocal.set(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;light&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">        GLOBAL_CONFIG.Snackbar !== <span class="literal">undefined</span> &amp;&amp; btf.snackbarShow(GLOBAL_CONFIG.Snackbar.night_to_day)</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;darkmode-switch&#x27;</span>).innerHTML = <span class="string">&#x27; 关灯&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// handle some cases</span></span><br><span class="line">      <span class="keyword">typeof</span> utterancesTheme === <span class="string">&#x27;function&#x27;</span> &amp;&amp; utterancesTheme()</span><br><span class="line">      <span class="keyword">typeof</span> FB === <span class="string">&#x27;object&#x27;</span> &amp;&amp; <span class="built_in">window</span>.loadFBComment()</span><br><span class="line">      <span class="built_in">window</span>.DISQUS &amp;&amp; <span class="built_in">document</span>.getElementById(<span class="string">&#x27;disqus_thread&#x27;</span>).children.length &amp;&amp; <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="built_in">window</span>.disqusReset(), <span class="number">200</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;darkmodeBt&#x27;</span>).addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    navFn.switchDarkMode()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>之后是这俩按钮的CSS控制，一个是居右的显示，另一个是移动端开灯关灯字样的隐藏，同时按钮之间拉开一定的距离，会使界面看起来更加大方（css我都用stylus写的，如果会引入的可以也用stylus写，经过nib的转换后兼容性更好）</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#nav</span><br><span class="line">  <span class="comment">/* 搜索与黑夜切换样式 */</span> </span><br><span class="line">  #search-button</span><br><span class="line">    <span class="attribute">display</span>: inline</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1rem</span> </span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.3rem</span></span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0.05rem</span> <span class="number">0.05rem</span> <span class="number">0.1rem</span> rgb(<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> / <span class="number">30%</span>)</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.78em</span></span><br><span class="line">    <span class="attribute">cursor</span>: pointer</span><br><span class="line">  #darkmodeBt</span><br><span class="line">    <span class="attribute">display</span>: inline</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1rem</span> </span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.3rem</span></span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0.05rem</span> <span class="number">0.05rem</span> <span class="number">0.1rem</span> rgb(<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> / <span class="number">30%</span>)</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.78em</span></span><br><span class="line">    <span class="attribute">cursor</span>: pointer</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#nav</span>.hide-menu</span><br><span class="line">  <span class="comment">/* 手机模式开关灯字样隐藏 */</span></span><br><span class="line">  #darkmodeBt</span><br><span class="line">    span</span><br><span class="line">      <span class="attribute">display</span>: none <span class="meta">!important</span></span><br></pre></td></tr></table></figure><p>而针对一些手机用户习惯，菜单栏展开的按钮靠在最右侧相对比较合适，于是把这个按钮也移到功能区。（源码参考下面的nav.pug源码分享）</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> </span><br><span class="line">  <span class="comment">/* 移动端菜单展开按钮 */</span></span><br><span class="line">  #toggle-menu</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.1rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1rem</span></span><br><span class="line">    svg.<span class="attribute">icon</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1.6rem</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">1.6rem</span></span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 屏幕宽度缩减后菜单栏变成两行的bug修复 </summary>              <div class='content'>              <p>这个情况得直接去改butterfly的<code>main.js</code>（我心里一万个不愿意），它的宽度是动态计算的，所以只需要把右侧的新增部分纳入计算即可</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  document.addEventListener(&#x27;DOMContentLoaded&#x27;, function () &#123;</span><br><span class="line">    const $blogName = document.getElementById(&#x27;site-name&#x27;)</span><br><span class="line">    let blogNameWidth = $blogName &amp;&amp; $blogName.offsetWidth</span><br><span class="line">    const $menusEle = document.querySelector(&#x27;#menus .menus_items&#x27;)</span><br><span class="line">    let menusWidth = $menusEle &amp;&amp; $menusEle.offsetWidth</span><br><span class="line">    const $searchEle = document.querySelector(&#x27;#search-button&#x27;)</span><br><span class="line">    let searchWidth = $searchEle &amp;&amp; $searchEle.offsetWidth</span><br><span class="line"><span class="addition">+   $darkmodeBtEle = document.querySelector(&#x27;#darkmodeBt&#x27;)</span></span><br><span class="line"><span class="addition">+   let darkmodeBtWidth = $darkmodeBtEle &amp;&amp; $darkmodeBtEle.offsetWidth</span></span><br><span class="line"></span><br><span class="line">    const adjustMenu = (change = false) =&gt; &#123;</span><br><span class="line">      if (change) &#123;</span><br><span class="line">        blogNameWidth = $blogName &amp;&amp; $blogName.offsetWidth</span><br><span class="line">        menusWidth = $menusEle &amp;&amp; $menusEle.offsetWidth</span><br><span class="line">        searchWidth = $searchEle &amp;&amp; $searchEle.offsetWidth</span><br><span class="line">      &#125;</span><br><span class="line">      const $nav = document.getElementById(&#x27;nav&#x27;)</span><br><span class="line">      let t</span><br><span class="line">      if (window.innerWidth &lt; 768) t = true</span><br><span class="line"><span class="deletion">-     else t = blogNameWidth + menusWidth + searchWidth &gt; $nav.offsetWidth - 120</span></span><br><span class="line"><span class="addition">+     else t = blogNameWidth + menusWidth + searchWidth + darkmodeBtWidth &gt; $nav.offsetWidth - 120</span></span><br><span class="line"></span><br><span class="line">      if (t) &#123;</span><br><span class="line">        $nav.classList.add(&#x27;hide-menu&#x27;)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        $nav.classList.remove(&#x27;hide-menu&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details green><summary> 效果展示及nav.pug源码 </summary>              <div class='content'>              <p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/20210820175139.png" alt="魔改后的菜单栏"></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">nav<span class="comment">#nav</span></span><br><span class="line">  span<span class="comment">#blog_name</span></span><br><span class="line">    a<span class="comment">#site-name(href=url_for(&#x27;/&#x27;)) #[=config.title]</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">#menus</span></span><br><span class="line">    !=partial(<span class="string">&#x27;includes/header/menu_item&#x27;</span>, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">#navFn</span></span><br><span class="line">    <span class="keyword">if</span> (theme.algolia_search.enable || theme.local_search.enable)</span><br><span class="line">      <span class="comment">#search-button</span></span><br><span class="line">        a.social-icon.search</span><br><span class="line">          svg.icon(aria-hidden=<span class="string">&quot;true&quot;</span>)</span><br><span class="line">            use(xlink:href=`<span class="comment">#`+ &#x27;icon-sousuo&#x27;)</span></span><br><span class="line">          span=<span class="string">&#x27; 搜索&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#darkmodeBt</span></span><br><span class="line">      a.darkmode.switch</span><br><span class="line">        svg.icon(aria-hidden=<span class="string">&quot;true&quot;</span>)</span><br><span class="line">          use(xlink:href=`<span class="comment">#`+ &#x27;icon-deng1&#x27;)</span></span><br><span class="line">        <span class="keyword">if</span> (theme.display_mode == <span class="string">&#x27;dark&#x27;</span>)</span><br><span class="line">          span<span class="comment">#darkmode-switch=&#x27; 开灯&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">          span<span class="comment">#darkmode-switch=&#x27; 关灯&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#toggle-menu</span></span><br><span class="line">      a.site-page</span><br><span class="line">        svg.icon(aria-hidden=<span class="string">&quot;true&quot;</span>)</span><br><span class="line">          use(xlink:href=`<span class="comment">#`+ &#x27;icon-mulu&#x27;)</span></span><br></pre></td></tr></table></figure>              </div>            </details><h3 id="侧边菜单栏的UI调整"><a href="#侧边菜单栏的UI调整" class="headerlink" title="侧边菜单栏的UI调整"></a>侧边菜单栏的UI调整</h3><p>可能很多来看这篇魔改的目的是看这个吧，毕竟改完的侧边菜单栏是真的漂亮（逃</p><p>先看看魔改前后效果吧（左侧两幅是魔改前的，右边魔改后的</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/sidebar.png" alt="侧边菜单栏魔改前后对比"></p><p>这个魔改是我把自己分别丢到读者和博主的角度去看的。身为读者我一般不会再手机端阅读时，把页面拖到最下边去看博主信息，一般是直接下一页（即使留言也是在博主信息上面的</p><p><strong>而身为博主当然不止希望读者只看到自己的文章而忽略了博主本身</strong></p><p>显然在移动端，<strong>简单的侧边栏下移到底部的布局是十分不合理的</strong>。所以如何体现作者信息卡片成了移动端UI布局的一个要点。而<strong>把作者信息丢到侧边菜单栏</strong>无疑是最好的选择。</p><p>原先的布局未免又过于简陋，一个头像和一个文章标签分类数量怎么能表现作者本人和风格呢？至少得和侧边栏一样吧~</p><p>（那既然改了侧边菜单栏的布局，干脆把背景啥的都改的可爱一点吧）猹如是想到</p><details cyan open><summary> 侧边菜单栏作者信息卡片 </summary>              <div class='content'>              <p>这边基本上可以直接搬运侧栏的源码，但是由于类名的不同，需要自己重新写一下css（其实还是搬运）</p><p>修改的源码为<code>[blogroot]\themes\butterfly\layout\includes\sidebar.pug</code></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">      //- 作者头像、名字、描述，此部分原先的代码在bf的版本更迭中有修改，要根据自己的bf版本源码做相应调整 -//</span><br><span class="line"><span class="deletion">-     .avatar-img.is-center</span></span><br><span class="line"><span class="deletion">-       img(src=url_for(theme.avatar.img) onerror=`onerror=null;src=&#x27;$&#123;theme.error_img.flink&#125;&#x27;` alt=&quot;avatar&quot;)</span></span><br><span class="line"><span class="addition">+     .is-center#sidebar-avatar</span></span><br><span class="line"><span class="addition">+       .avatar-img</span></span><br><span class="line"><span class="addition">+         img(src=url_for(theme.avatar.img) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.flink) + `&#x27;` alt=&quot;avatar&quot;)</span></span><br><span class="line"><span class="addition">+       .author-info__name= config.author</span></span><br><span class="line"><span class="addition">+       .author-info__description!= theme.aside.card_author.description || config.description</span></span><br></pre></td></tr></table></figure><p>然后在<code>hr</code>之前添加这段代码</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+     //- begin follow_me按钮</span></span><br><span class="line"><span class="addition">+     if theme.aside.card_author.button.enable</span></span><br><span class="line"><span class="addition">+       a#card-info-btn.button--animated(href=theme.aside.card_author.button.link)</span></span><br><span class="line"><span class="addition">+         i(class=theme.aside.card_author.button.icon)</span></span><br><span class="line"><span class="addition">+         span=theme.aside.card_author.button.text</span></span><br><span class="line"><span class="addition">+     //- end     </span></span><br><span class="line"><span class="addition">+     //- begin 社交</span></span><br><span class="line"><span class="addition">+     if(theme.social)</span></span><br><span class="line"><span class="addition">+       .menu-info-social-icons.is-center</span></span><br><span class="line"><span class="addition">+         !=fragment_cache(&#x27;social&#x27;, function()&#123;return partial(&#x27;includes/header/social&#x27;)&#125;)</span></span><br><span class="line"><span class="addition">+     //- end</span></span><br><span class="line"></span><br><span class="line">      hr</span><br></pre></td></tr></table></figure><p>然后调整作者信息等的css</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#sidebar</span><br><span class="line">  #sidebar-menus</span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 信息、头像位置调整*/</span></span><br><span class="line">    .site-data</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0.5rem</span></span><br><span class="line">    #sidebar-avatar</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0.2rem</span></span><br><span class="line">      <span class="comment">/* 作者名 */</span></span><br><span class="line">      .author-info__name</span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">500</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1.57em</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 follow_me按钮*/</span></span><br><span class="line">    #card-info-btn</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.3rem</span> <span class="number">1rem</span> <span class="number">0</span> <span class="number">1rem</span></span><br><span class="line">      <span class="attribute">background-color</span>: var(--btn-bg)</span><br><span class="line">      <span class="attribute">color</span>: var(--btn-color)</span><br><span class="line">      <span class="attribute">text-align</span>: center</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">2.4</span></span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">0.625rem</span></span><br><span class="line">    <span class="comment">/* 手机侧栏菜单展开 社交图标 */</span></span><br><span class="line">    .menu-info-social-icons</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0.5rem</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">      .social-<span class="attribute">icon</span></span><br><span class="line">        <span class="attribute">display</span>: inline</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.7rem</span> <span class="number">0</span> <span class="number">0.7rem</span></span><br></pre></td></tr></table></figure>              </div>            </details><details red open><summary> 背景彩色渐变css </summary>              <div class='content'>              <p>这个就是纯css了，不需要再额外添加什么其它的东西</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#sidebar</span><br><span class="line">  #sidebar-menus</span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#ffd7e4</span> <span class="number">0%</span>, <span class="number">#c8f1ff</span> <span class="number">100%</span>)</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  #sidebar</span><br><span class="line">    #sidebar-menus</span><br><span class="line">      <span class="attribute">background</span>: linear-gradient(<span class="number">60deg</span>, <span class="number">#2c0c16</span> <span class="number">0%</span>, <span class="number">#043749</span> <span class="number">100%</span>)</span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> 猹的可爱简笔画形象 </summary>              <div class='content'>              <p>猹一直想把自己的简笔画形象加到博客里，丢进侧边菜单栏作为一点点缀能让猹的博客看起来更加可爱一点点</p><p>于是我在上下各加了一个<code>div</code>容器放置两张简笔画图片，改变css大小和偏移位置来融入菜单栏的其他各部分之间</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#sidebar</span><br><span class="line">  #sidebar-menus</span><br><span class="line">    .simply-cha-<span class="attribute">top</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> -<span class="number">3rem</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">4rem</span></span><br><span class="line">      <span class="attribute">background</span>: url(<span class="string">&quot;/img/simplycha-top.png&quot;</span>)</span><br><span class="line">      <span class="attribute">background-size</span>: contain</span><br><span class="line">      <span class="attribute">background-repeat</span>: no-repeat</span><br><span class="line">      <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">0%</span></span><br><span class="line">    .simply-cha</span><br><span class="line">      <span class="attribute">margin-top</span>: -<span class="number">4rem</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">5rem</span></span><br><span class="line">      <span class="attribute">background</span>: url(<span class="string">&quot;/img/simplycha.png&quot;</span>)</span><br><span class="line">      <span class="attribute">background-size</span>: contain</span><br><span class="line">      <span class="attribute">background-repeat</span>: no-repeat</span><br></pre></td></tr></table></figure><p>由于一个子菜单收缩带来了奇怪的bug，和店长探讨之后发现只有js动态控制一条道路可行，我。。。难受</p><p><img src="https://noionion-picture-bed.oss-cn-hangzhou.aliyuncs.com/img/20210820215456.png" alt="吸底"></p><p>但猹很小天才的想到，猹决定把上下展开的按钮隐藏了，不动态变化了就不需要考虑啦</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line">#sidebar</span><br><span class="line">  #sidebar-menus</span><br><span class="line">    <span class="selector-class">.fas</span><span class="selector-class">.fa-chevron-down</span>.expand</span><br><span class="line">      <span class="attribute">display</span>: none</span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 一点点个人强迫症修复 </summary>              <div class='content'>              <p>既然把个人信息栏丢进侧边菜单了，那是不是在移动端的时候侧栏就可以关了？</p><p>然而bf的配置项<code>aside: mobile: false</code>只能在屏宽小于768px的时候有效，而在屏宽在768-900px的时候还是会把整个侧边栏显示在下边（看着超难受</p><p>于是乎我把900px以下的都关了，同时为了保证900px屏宽下一定会出现移动端导航栏样式，顺便把main.js的计算下限调了（这部分代码在上一节的修复里提到过</p><figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>)</span><br><span class="line">  #aside-content</span><br><span class="line">    display: none</span><br></pre></td></tr></table></figure><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-     if (window.innerWidth &lt; 768) t = true</span></span><br><span class="line"><span class="addition">+     if (window.innerWidth &lt;= 900) t = true</span></span><br><span class="line">      else t = blogNameWidth + menusWidth + searchWidth + darkmodeBtWidth &gt; $nav.offsetWidth - 120</span><br></pre></td></tr></table></figure>              </div>            </details><details green><summary> sidebar.pug源码 </summary>              <div class='content'>              <figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sidebar</span></span><br><span class="line">  <span class="comment">#menu-mask</span></span><br><span class="line">  <span class="comment">#sidebar-menus</span></span><br><span class="line">    .simply-cha-top</span><br><span class="line">    //- begin 打算换成网站左上角图</span><br><span class="line">    .<span class="keyword">is</span>-center<span class="comment">#sidebar-avatar</span></span><br><span class="line">      .avatar-img</span><br><span class="line">        img(src=url_for(theme.avatar.img) onerror=`this.onerror=null;this.src=<span class="string">&#x27;` + url_for(theme.error_img.flink) + `&#x27;</span>` alt=<span class="string">&quot;avatar&quot;</span>)</span><br><span class="line">      .author-info__name= config.author</span><br><span class="line">      .author-info__description!= theme.aside.card_author.description || config.description</span><br><span class="line">    //- end</span><br><span class="line"></span><br><span class="line">    .site-data</span><br><span class="line">      <span class="keyword">if</span> site.posts.length</span><br><span class="line">        .data-item.<span class="keyword">is</span>-center</span><br><span class="line">          .data-item-link</span><br><span class="line">            a(href=url_for(config.archive_dir) + <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">              .headline= _p(<span class="string">&#x27;aside.articles&#x27;</span>) </span><br><span class="line">              .length-num= site.posts.length</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> site.tags.length</span><br><span class="line">        .data-item.<span class="keyword">is</span>-center</span><br><span class="line">          .data-item-link</span><br><span class="line">            a(href=url_for(config.tag_dir) + <span class="string">&#x27;/&#x27;</span> )</span><br><span class="line">              .headline= _p(<span class="string">&#x27;aside.tags&#x27;</span>)</span><br><span class="line">              .length-num= site.tags.length</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> site.categories.length</span><br><span class="line">        .data-item.<span class="keyword">is</span>-center</span><br><span class="line">          .data-item-link</span><br><span class="line">            a(href=url_for(config.category_dir) + <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">              .headline= _p(<span class="string">&#x27;aside.categories&#x27;</span>) </span><br><span class="line">              .length-num= site.categories.length</span><br><span class="line"></span><br><span class="line">    //- begin follow_me按钮</span><br><span class="line">    <span class="keyword">if</span> theme.aside.card_author.button.enable</span><br><span class="line">      a<span class="comment">#card-info-btn.button--animated(href=theme.aside.card_author.button.link)</span></span><br><span class="line">        i(class=theme.aside.card_author.button.icon)</span><br><span class="line">        span=theme.aside.card_author.button.text</span><br><span class="line">    //- end</span><br><span class="line">    </span><br><span class="line">    //- begin 社交</span><br><span class="line">    <span class="keyword">if</span>(theme.social)</span><br><span class="line">      .menu-info-social-icons.<span class="keyword">is</span>-center</span><br><span class="line">        !=fragment_cache(<span class="string">&#x27;social&#x27;</span>, function()&#123;<span class="keyword">return</span> partial(<span class="string">&#x27;includes/header/social&#x27;</span>)&#125;)</span><br><span class="line">    //- end</span><br><span class="line"></span><br><span class="line">    hr</span><br><span class="line">    !=partial(<span class="string">&#x27;includes/header/menu_item&#x27;</span>, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">    .simply-cha</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 魔改日记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
            <tag> Course </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】基于Butterfly的外挂标签引入</title>
      <link href="32088.html"/>
      <url>32088.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote><p>本文转载自店长的<a href="https://akilar.top/posts/615e2dec/">Akilarの糖果屋-基于Butterfly的外挂标签引入</a>，已获得作者许可。<br>本教程只用于猹自己写文的时候做参考（这么多样式猹记不住）<br>另外说明，本转载并不完整，一部分需要其他魔改引入支持的内容已经删除，如有需要请查看店长原帖<br>以下为转载内容</p></blockquote><hr><div class="tip home"><p>如有使用了本站的右键菜单教程的读者，请确保自己的配置内容为最新。2020年11月15日之前的教程中的css样式和本帖的部分标签有冲突。请及时更新。</p><p>同理，若您在使用本帖教程后，发现样式无法完全还原，请重点排查您的其余第三方魔改css样式，例如css中是否存在**.circle<strong>、</strong>.square**等易重class名。</p></div><details red><summary> 点开查看开发记录 </summary>              <div class='content'>              <div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>本文所涉及的样式，主要参考的是各类已有主题，并对相应styl文件进行样式修改以及添加夜间模式适配。已尽可能追根溯源找到了各部分魔改内容最初的作者，如有错误和遗漏还请联系我修改。</p></div><div class="timeline"><p class='p h2'>开发记录</p><div class="timenode"><div class="meta"><p><p>2020-11-14:内测版v0.05</p></p></div><div class="body"><ol><li>主要使用了<a href="https://github.com/volantis-x/hexo-theme-volantis">Volantis</a>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。</li><li>主要参考内容</li></ol><ul><li><a href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins）</a></li><li><a href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></li><li><a href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></li><li><a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2020-11-15:正式版v1.0</p></p></div><div class="body"><ol><li>基本完成Volantis外挂标签移植。</li><li>移除了btn标签，因为存在冲突。而且不如butterfly自带的button样式好看。</li><li>适配了folding标签的夜间模式。</li><li>打包了静态资源文件，上传蓝奏云。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-11-16:正式版v1.1</p></p></div><div class="body"><ol><li>新增tip.js，将小康大佬的渐变色上标标签写法从HTML的方式改成用标签语法编写。</li><li>新增动态标签样式anima，使用了fontawesome-animation项目。</li><li>新增标签内容夜间模式适配。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-03:正式版v1.2</p></p></div><div class="body"><ol><li>新增当初弃用的issues.js标签，以配合友链魔改教程中的issues自动更新功能。</li><li>更新了静态资源文件，请之前的读者重新覆盖安装。</li><li>修改了<code>fontawesome-animation.min.css</code>的引入方式，改成使用<code>@import</code>注入<code>index.css</code>。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-07:正式版v1.21</p></p></div><div class="body"><ol><li>资源文件无任何改动。</li><li>更新了动态标签的使用说明。补全参数配置，更换示例。使得教程更加通俗易懂。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-13:正式版v1.3</p></p></div><div class="body"><ol><li>新增Butterfly_v3.4.0的配置文件。</li><li>请读者根据自己的主题版本选择替换。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-17:正式版v1.4</p></p></div><div class="body"><ol><li>新增两个样式标签poem和icon</li><li>修复了folding标签嵌套字体逐级放大的bug。</li><li>不再更新v3.4.0以下版本的适配内容。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-31:正式版v1.5</p></p></div><div class="body"><ol><li>新增两个样式标签，github徽标ghbdage和特效标签wow</li><li>移除静态资源中的<code>fontawesome-animation.min.css</code>以及<code>issues.js</code>，改为CDN引用。</li><li>本帖不专门提供特效标签wow的配置方案，若有需要，请查看站内教程<a href="/posts/abab51cf/">使用wowjs给博客添加动画效果</a></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-02-24:正式版v1.6</p></p></div><div class="body"><ol><li>新增一个样式标签，进度条progress</li></ol></div></div></div>              </div>            </details><details cyan open><summary> 点开查看配置教程 </summary>              <div class='content'>              <ol><li>下载资源文件<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Akilarlxh/Tag_Plugins"><img src="https://github-readme-stats.vercel.app/api/pin/?username=Akilarlxh&repo=Tag_Plugins&theme=vue&show_owner=true"/></a></li><li>将下载的<code>Tag_Plugins.zip</code>解压得到<code>butterfly</code>文件夹。</li><li>将<code>butterfly</code>文件夹复制到<code>[Blogroot]\themes\</code>目录下，覆盖当前的<code>butterfly</code>主题文件夹，提示重复则选择替换。(如果担心覆盖自己的其他魔改内容，可以根据静态文件内容自主比对修改)</li><li>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，添加<code>CDN</code>依赖项。由于<code>issues</code>写入<code>timeline</code>和<code>site-card</code>标签要用到<code>jquery</code>，请务必根据注释指示的版本决定是否添加。<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn1.tianli0.top/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span>  <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn1.tianli0.top/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># 自butterfly_v3.4.0+开始，主题基本实现去jquery化，需要自己添加引用，请读者根据版本自行决定是否添加这行引用。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn1.tianli0.top/npm/hexo-theme-volantis@latest/source/js/issues.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment">#数据集合标签issues的依赖</span></span><br></pre></td></tr></table></figure></li><li>外挂标签使用方案请参阅下文。</li></ol>              </div>            </details><h1 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h1><div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#text-2">样式预览</button></li><li class="tab"><button type="button" data-href="#text-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="text-2"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h1><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#span-1">标签语法</button></li><li class="tab"><button type="button" data-href="#span-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#span-3">样式预览</button></li><li class="tab"><button type="button" data-href="#span-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="span-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-2"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="span-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h1><div class="tabs" id="p"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#p-1">标签语法</button></li><li class="tab"><button type="button" data-href="#p-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#p-3">样式预览</button></li><li class="tab"><button type="button" data-href="#p-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="p-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-2"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="p-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h1><div class="note warning flat"><p>最新版<code>butterfly</code>标签支持引用<code>fontawesome V5</code>图标，效果上已经优于<code>volantis</code>的note标签。故不再额外引入<code>volantis的note样式</code>。<del>做样式适配好麻烦的啊，能偷懒就偷懒吧</del></p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>以下是<code>butterfly</code>主题的note写法。</p></div><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#note-1">通用配置</button></li><li class="tab"><button type="button" data-href="#note-2">语法格式</button></li><li class="tab"><button type="button" data-href="#note-3">配置参数</button></li><li class="tab active"><button type="button" data-href="#note-4">样式预览</button></li><li class="tab"><button type="button" data-href="#note-5">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="note-1"><p>修改主题配置文件</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><code>Note</code>标签外挂有两种用法。<code>icons</code>和<code>light_bg_offset</code>只对方法一生效。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><details cyan><summary> 方法一 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><details cyan><summary> 方法一 </summary>              <div class='content'>              <table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="left">【可选】标识，不同的标识有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td align="left">no-icon</td><td align="left">【可选】不显示 icon</td></tr><tr><td align="left">style</td><td align="left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="left">【可选】标识，不同的标识有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td align="left">no-icon</td><td align="left">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td align="left">style</td><td align="left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="note-4"><details cyan><summary> 方法一 </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div></li><li><p><code>modern</code>样式</p><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div></li><li><p><code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div></li><li><p><code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div></li><li><p><code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div></li></ol>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <ol><li><p>simple样式</p><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>modern样式</p><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>flat样式</p><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li></ol><ol start="4"><li><p>disabled样式</p><div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>no-icon样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-5"><details cyan><summary> 方法一 </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details blue><summary> 方法二 </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h1><div class="tip cogs"><p>主要样式参考自<a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly渐变背景标签</a>,自己写了个<code>tip.js</code>来渲染标签，精简了一下代码。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><div class="tip "><p>默认情况</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip %&#125;默认情况&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h1><div class="tip faa-horizontal animated"><p>动态标签的实质是引用了<a href="https://github.com/l-lin/font-awesome-animation">font-awesome-animation</a>的css样式，不一定局限于tip标签，也可以是其他标签。<br>只不过这里<code>tip.js</code>是我自己写的，所以我清楚它会怎么被渲染成html，才用的这个写法。<br>可以熟读文档，使用html语言来编写其他标签类型。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>更多详情请参看<a href="http://l-lin.github.io/font-awesome-animation/">font-awesome-animation文档</a></p><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><table><thead><tr><th align="left">On DOM load<br>当页面加载时<br>显示动画</th><th align="left">On hover<br>当鼠标悬停时<br>显示动画</th><th align="left">On parent hover<br>当鼠标悬停<br>在父级元素时<br>显示动画</th></tr></thead><tbody><tr><td align="left"><span><i class="fas fa-wrench faa-wrench animated"></i>&nbsp;faa-wrench animated</span></td><td align="left"><span><i class="fas fa-wrench faa-wrench animated-hover"></i>&nbsp;faa-wrench animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-wrench faa-wrench"></i>&nbsp;faa-wrench</span></td></tr><tr><td align="left"><span><i class="fas fa-bell faa-ring animated"></i>&nbsp;faa-ring animated</span></td><td align="left"><span><i class="fas fa-bell faa-ring animated-hover"></i>&nbsp;faa-ring animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-bell faa-ring"></i>&nbsp;faa-ring</span></td></tr><tr><td align="left"><span><i class="fas fa-envelope faa-horizontal animated"></i>&nbsp;faa-horizontal animated</span></td><td align="left"><span><i class="fas fa-envelope faa-horizontal animated-hover"></i>&nbsp;faa-horizontal animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-horizontal"></i>&nbsp;faa-horizontal</span></td></tr><tr><td align="left"><span><i class="fas fa-thumbs-up faa-vertical animated"></i>&nbsp;faa-vertical animated</span></td><td align="left"><span><i class="fas fa-thumbs-up faa-vertical animated-hover"></i>&nbsp;faa-vertical animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-vertical"></i>&nbsp;faa-vertical</span></td></tr><tr><td align="left"><span><i class="fas fa-exclamation-triangle faa-flash animated"></i>&nbsp;faa-flash animated</span></td><td align="left"><span><i class="fas fa-exclamation-triangle faa-flash animated-hover"></i>&nbsp;faa-flash animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-exclamation-triangle faa-flash"></i>&nbsp;faa-flash</span></td></tr><tr><td align="left"><span><i class="fas fa-thumbs-up faa-bounce animated"></i>&nbsp;faa-bounce animated</span></td><td align="left"><span><i class="fas fa-thumbs-up faa-bounce animated-hover"></i>&nbsp;faa-bounce animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-bounce"></i>&nbsp;faa-bounce</span></td></tr><tr><td align="left"><span><i class="fas fa-spinner faa-spin animated"></i>&nbsp;faa-spin animated</span></td><td align="left"><span><i class="fas fa-spinner faa-spin animated-hover"></i>&nbsp;faa-spin animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-spinner faa-spin"></i>&nbsp;faa-spin</span></td></tr><tr><td align="left"><span><i class="fas fa-plane faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td align="left"><span><i class="fas fa-plane faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-plane faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td align="left"><span><i class="fas fa-heart faa-pulse animated"></i>&nbsp;faa-pulse animated</span></td><td align="left"><span><i class="fas fa-heart faa-pulse animated-hover"></i>&nbsp;faa-pulse animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-heart faa-pulse"></i>&nbsp;faa-pulse</span></td></tr><tr><td align="left"><span><i class="fas fa-envelope faa-shake animated"></i>&nbsp;faa-shake animated</span></td><td align="left"><span><i class="fas fa-envelope faa-shake animated-hover"></i>&nbsp;faa-shake animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-shake"></i>&nbsp;faa-shake</span></td></tr><tr><td align="left"><span><i class="fas fa-trophy faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td align="left"><span><i class="fas fa-trophy faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-trophy faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td align="left"><span><i class="fas fa-space-shuttle faa-passing animated"></i>&nbsp;faa-passing animated</span></td><td align="left"><span><i class="fas fa-space-shuttle faa-passing animated-hover"></i>&nbsp;faa-passing animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing"></i>&nbsp;faa-passing</span></td></tr><tr><td align="left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated"></i>&nbsp;faa-passing-reverse animated</span></td><td align="left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated-hover"></i>&nbsp;faa-passing-reverse animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing-reverse"></i>&nbsp;faa-passing-reverse</span></td></tr><tr><td align="left"><span><i class="fas fa-circle faa-burst animated"></i>&nbsp;faa-burst animated</span></td><td align="left"><span><i class="fas fa-circle faa-burst animated-hover"></i>&nbsp;faa-burst animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-circle faa-burst"></i>&nbsp;faa-burst</span></td></tr><tr><td align="left"><span><i class="fas fa-star faa-falling animated"></i>&nbsp;faa-falling animated</span></td><td align="left"><span><i class="fas fa-star faa-falling animated-hover"></i>&nbsp;faa-falling animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-star faa-falling"></i>&nbsp;faa-falling</span></td></tr><tr><td align="left"><span><i class="fas fa-rocket faa-rising animated"></i>&nbsp;faa-rising animated</span></td><td align="left"><span><i class="fas fa-rocket faa-rising animated-hover"></i>&nbsp;faa-rising animated-hover</span></td><td align="left"><span class="faa-parent animated-hover"><i class="fas fa-rocket faa-rising"></i>&nbsp;faa-rising</span></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><ol><li><p>On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div></li><li><p>调整动画速度。</p><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div></li><li><p>On hover（当鼠标悬停时显示动画）</p><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><ol><li><p>On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li><p>调整动画速度</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li><p>On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h1><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#checkbox-1">标签语法</button></li><li class="tab"><button type="button" data-href="#checkbox-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#checkbox-3">样式预览</button></li><li class="tab"><button type="button" data-href="#checkbox-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="checkbox-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><ol><li>样式: plus, minus, times</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="checkbox-3"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h1><div class="tabs" id="radio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#radio-1">标签语法</button></li><li class="tab"><button type="button" data-href="#radio-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#radio-3">样式预览</button></li><li class="tab"><button type="button" data-href="#radio-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="radio-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-2"><ol><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="radio-3"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h1><div class="tabs" id="timeline"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#timeline-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#timeline-2">样式预览</button></li><li class="tab"><button type="button" data-href="#timeline-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="timeline-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选） %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="timeline-2"><div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></p></div><div class="body"><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></p></div><div class="body"><p>不需要额外处理。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></p></div><div class="body"><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) %&#125;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h1><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#link-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#link-2">样式预览</button></li><li class="tab"><button type="button" data-href="#link-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="link-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="link-2"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn1.tianli0.top/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn1.tianli0.top/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h1><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p><code>Volantis</code>的按钮使用的是<code>btn</code>和<code>btns</code>标签。<code>btns</code>和<code>butterfly</code>的<code>button</code>不冲突，但是<code>btn</code>会被强制渲染，导致部分参数失效,而且<code>btn</code>的效果还是<code>butterfly</code>的<code>button</code>更好看些。所以就只适配了<code>btns</code>。</p></div><div class="tabs" id="btn"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#btn-1">标签语法</button></li><li class="tab"><button type="button" data-href="#btn-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#btn-3">样式预览</button></li><li class="tab"><button type="button" data-href="#btn-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="btn-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;标题&lt;/b&gt; </code>和<code> &lt;p&gt;描述文字&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">wide</td><td align="left">宽一点的按钮</td></tr><tr><td align="left">fill</td><td align="left">填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td align="left">center</td><td align="left">居中，按钮之间是固定间距</td></tr><tr><td align="left">around</td><td align="left">居中分散</td></tr><tr><td align="left">grid2</td><td align="left">等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid3</td><td align="left">等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid4</td><td align="left">等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td align="left">grid5</td><td align="left">等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="btn-3"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接：</p><div class="btns circle grid5">         <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>       </div></li><li><p>或者含有图标的按钮：</p><div class="btns rounded grid5">         <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>       </div></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><div class="btns circle center grid5">         <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p red'>专业版</p><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p green'>免费版</p><img src='https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>       </div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-4"><ol><li>如果需要显示类似「团队成员」之类的一组含有头像的链接：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li>或者含有图标的按钮：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h1><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>ghcard使用了<code>github-readme-stats</code>的API，支持直接使用markdown语法来写。</p></div><div class="tabs" id="ghcard"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghcard-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghcard-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghcard-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghcard-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghcard-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-2"><p>更多参数可以参考：<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/anuraghazra/github-readme-stats"><img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats&show_owner=true"/></a><br>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th align="left">参数名</th><th align="left">取值</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">hide</td><td align="left">stars,commits,prs,issues,contribs</td><td align="left">隐藏指定统计</td></tr><tr><td align="left">count_private</td><td align="left">true</td><td align="left">将私人项目贡献添加到总提交计数中</td></tr><tr><td align="left">show_icons</td><td align="left">true</td><td align="left">显示图标</td></tr><tr><td align="left">theme</td><td align="left">请查阅<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td align="left">主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghcard-3"><ol><li>用户信息卡片</li></ol><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=calm&show_owner=true"/></a></td></tr></tbody></table><ol start="2"><li>仓库信息卡片</li></ol><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-4"><ol><li><p>用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| &#123;% ghcard xaoxuu %&#125; | &#123;% ghcard xaoxuu, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=buefy %&#125; | &#123;% ghcard xaoxuu, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=onedark %&#125; | &#123;% ghcard xaoxuu, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=algolia %&#125; | &#123;% ghcard xaoxuu, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li><li><p>仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h1><div class="tip cogs"><p>关于ghbdage参数的更多具体用法可以参看站内教程：<a href="/posts/e87ad7f8">添加github徽标</a></p></div><div class="tabs" id="ghbdage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghbdage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghbdage-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghbdage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghbdage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghbdage-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghbdage-3"><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div>1. 基本参数<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object>2. 信息参数<br><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object>3. 拓展参数<br><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=40"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=40&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-4"><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div>1. 基本参数,定义徽标左右文字和图标<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure>2. 信息参数，定义徽标右侧内容背景色，指向链接<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure>3. 拓展参数，支持shields的API的全部参数内容<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h1><div class="tabs" id="site"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#site-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#site-2">样式预览</button></li><li class="tab"><button type="button" data-href="#site-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="site-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="site-2"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn1.tianli0.top/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn1.tianli0.top/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn1.tianli0.top/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="site-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn1.tianli0.top/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn1.tianli0.top/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn1.tianli0.top/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h1><div class="tabs" id="inlineimage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#inlineimage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#inlineimage-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#inlineimage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#inlineimage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="inlineimage-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-2"><ol><li>高度：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="inlineimage-3"><p>这是 <img no-lazy class="inline" src="https://cdn1.tianli0.top/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn1.tianli0.top/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn1.tianli0.top/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn1.tianli0.top/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h1><div class="tabs" id="image"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#image-1">标签语法</button></li><li class="tab"><button type="button" data-href="#image-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#image-3">样式预览</button></li><li class="tab"><button type="button" data-href="#image-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="image-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="image-3"><ol><li><p>添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>指定宽度：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div></li><li><p>指定宽度并添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>设置占位背景色：</p><div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-4"><ol><li><p>添加描述：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li><p>指定宽度：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure></li><li><p>指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h1><div class="tabs" id="audio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#audio-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#audio-2">样式预览</button></li><li class="tab"><button type="button" data-href="#audio-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="audio-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="audio-2"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="audio-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h1><div class="tabs" id="video"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#video-1">标签语法</button></li><li class="tab"><button type="button" data-href="#video-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#video-3">样式预览</button></li><li class="tab"><button type="button" data-href="#video-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="video-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-2"><ol><li>对其方向：left, center, right</li><li>列数：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="video-3"><ol><li><p>100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></li><li><p>50%宽度</p><div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li><li><p>25%宽度</p><div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-4"><ol><li>100%宽度<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure></li><li>50%宽度<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li><li>25%宽度<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>自带<code>gallery</code>相册，而且会根据图片大小自动调整排版，效果比<code>Volantis</code>的<code>gallery</code>更好，故不再收录<code>Volantis</code>的<code>gallery</code>标签。</p></div><div class="note flat"><p>以下为<code>Butterfly</code>自带的<code>gallery</code>标签写法。相册图库和相册配合使用。</p></div><div class="tabs" id="gallery"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#gallery-1">标签语法</button></li><li class="tab"><button type="button" data-href="#gallery-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#gallery-3">样式预览</button></li><li class="tab"><button type="button" data-href="#gallery-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-1"><ol><li>gallerygroup 相册图库<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li>gallery 相册<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th align="left">参数名</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">name</td><td align="left">图库名字</td></tr><tr><td align="left">description</td><td align="left">图库描述</td></tr><tr><td align="left">link</td><td align="left">链接到对应相册的地址</td></tr><tr><td align="left">img-url</td><td align="left">图库封面</td></tr></tbody></table><div class="note info flat"><p>思维拓展一下，相册图库的实质其实就是个快捷方式，可以自定义添加描述、封面、链接。那么我们未必要把它当做一个相册，完全可以作为一个链接卡片，链接到视频、QQ、友链都是不错的选择。</p></div><ul><li>gallery 相册<br>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="gallery-3"><ul><li>gallerygroup 相册图库</li></ul><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://cdn1.tianli0.top/gh/Akilarlxh/Picgo@v2.3/tencent/MC/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://cdn1.tianli0.top/gh/Akilarlxh/Picgo@v2.3/tencent/Gundam/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://cdn1.tianli0.top/gh/Akilarlxh/Picgo@v2.3/tencent/I-am-Akilar/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure>  </div><ul><li>gallery 相册</li></ul><div class="justified-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-4"><div class="note info flat"><p>对于很多同学提问的<code>gallerygroup</code>和<code>gallery</code>相册页的链接问题。这里说下我个人的使用习惯。<br>一般使用相册图库的话，可以在导航栏加一个gallery的page(<strong>使用指令<code>hexo new page gallery</code>添加</strong>)，里面放相册图库作为封面。然后在<code>[Blogroot]/source/gallery/</code>下面建立相应的文件夹，例如若按照这里的示例，若欲使用<code>/gallery/MC/</code>路径访问MC相册，则需要新建<code>[Blogroot]/source/gallery/MC/index.md</code>，并在里面填入<code>gallery</code>相册内容。</p></div><ol><li>gallerygroup 相册图库<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn1.tianli0.top/gh/Akilarlxh/Picgo@v2.3/tencent/MC/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn1.tianli0.top/gh/Akilarlxh/Picgo@v2.3/tencent/Gundam/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn1.tianli0.top/gh/Akilarlxh/Picgo@v2.3/tencent/I-am-Akilar/20200907113116651.png %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li>gallery 相册<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>虽然也有内置折叠框<code>hideToggle</code>标签，但是<code>Volantis</code>的<code>folding</code>折叠框更好看一些。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><details ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg"></p>              </div>            </details><details cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> 查看代码测试 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![](https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn1.tianli0.top/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://cdn1.tianli0.top/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn1.tianli0.top/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>的<code>tab</code>标签和<code>Volantis</code>的<code>tab</code>标签都是移值自<code>NexT</code>主题，所以写法和效果一模一样。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子/页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><div class="note primary flat"><p>Demo 1 - 预设选择第一个【默认】</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 2 - 预设选择tabs</p></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 3 - 没有预设值</p></div><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><div class="note primary flat"><p>Demo 1 - 预设选择第一个【默认】</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="note primary flat"><p>Demo 2 - 预设选择tabs</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="note primary flat"><p>Demo 3 - 没有预设值</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="note primary flat"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="数据集合-issues"><a href="#数据集合-issues" class="headerlink" title="数据集合 issues"></a>数据集合 issues</h1><div class="tabs" id="issues"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#issues-1">标签语法</button></li><li class="tab"><button type="button" data-href="#issues-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#issues-3">样式预览</button></li><li class="tab"><button type="button" data-href="#issues-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="issues-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues type | api=url | group=key:value1,value2（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-2"><p><span class='p center logo large'>type(类型)：</span><br>根据需求不同，会将 issues 内容解析成不同的 HTML 标签，目前支持的类型有：</p><ol><li><p>时间轴<code>timeline</code>: 解析成<code>timeline</code>标签，<code>issue</code>的标题对应<code>timeline</code>的时间，<code>issue</code>的内容对应<code>timeline</code>的内容。</p></li><li><p>网站卡片<code>sites</code>: 解析成<code>sites</code>标签，需要有<code>JSON</code>代码块,各参数对应<code>sites</code>标签参数:</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;screenshot&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;「keywords」&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">网站名称</td></tr><tr><td align="left">screenshot</td><td align="left">网站预览图</td></tr><tr><td align="left">url</td><td align="left">网站链接，需要添加<br><code>https://</code>协议组成完整域名。<br>否则可能被识别成站点相对路径。</td></tr><tr><td align="left">avatar</td><td align="left">站长头像</td></tr><tr><td align="left">「keywords」</td><td align="left">分组依据，<br>未必要叫「keywords」，<br>详见下文group(分组)</td></tr></tbody></table></li></ol><p><span class='p center logo large'>api(接口)：</span><br>url为可以调的通的API，例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">api&#x3D;https:&#x2F;&#x2F;gitee.com&#x2F;api&#x2F;v5&#x2F;repos&#x2F;xaoxuu&#x2F;friends&#x2F;issues?sort&#x3D;updated&amp;state&#x3D;open&amp;page&#x3D;1&amp;per_page&#x3D;100&amp;labels&#x3D;active</span><br><span class="line">api&#x3D;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;xaoxuu&#x2F;friends&#x2F;issues?sort&#x3D;updated&amp;state&#x3D;open&amp;page&#x3D;1&amp;per_page&#x3D;100&amp;labels&#x3D;active</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left"><a href="https://gitee.com/api/v5/">https://gitee.com/api/v5/</a></td><td align="left">gitee仓库的api</td></tr><tr><td align="left"><a href="https://api.github.com/">https://api.github.com/</a></td><td align="left">github仓库的api</td></tr><tr><td align="left">repos/xaoxuu/friends/issues</td><td align="left">repos/用户名/仓库名/issues</td></tr><tr><td align="left">sort=updated&amp;state=open</td><td align="left">界定哪些类型的<code>issues</code>会<br>被读取过来渲染成相应的标签</td></tr><tr><td align="left">page=1&amp;per_page=100</td><td align="left">读取前100条issues</td></tr><tr><td align="left">labels=active</td><td align="left">控制默认的issue不显示，<br>只有自己审核通过<br>添加了active标签之后才会显示</td></tr></tbody></table><p><span class='p center logo large'>group(分组)：</span><br><code>sites</code>类型的<code>issues</code>默认不分组，如果需要分组，可指定分组依据<code>「keywords」</code>，和分组白名单<code>「value1」</code>、<code>「value2」</code>等，例如：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">group=version:v4,v3,v2</span></span><br><span class="line"><span class="comment"># 此处的version就是上文中的「keywords」</span></span><br></pre></td></tr></table></figure><p>这个参数的作用就是，筛选出<code>JSON</code>中包含<code>&quot;version&quot;: &quot;v4&quot;</code>或者<code>&quot;version&quot;:&quot;v3&quot;</code>或者<code>&quot;version&quot;: &quot;v2&quot;</code>的数据，并分组显示。</p><p><span class='p center logo large'>仓库ISSUES模板配置</span></p><details green><summary> Github仓库配置方案 </summary>              <div class='content'>              <ol><li><p>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br>新建文件<code>friend_link\.github\ISSUE_TEMPLATE.md</code>,<br>并在其中输入以下内容作为<code>issues</code>模板。</p><div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line">about: 请根据指示规范填写友链格式。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    &quot;title&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;screenshot&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;url&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;avatar&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;description&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;keywords&quot;: &quot;&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;站点名称&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;站点预览图链接&quot;,</span><br><span class="line">&quot;url&quot;: &quot;站点链接&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;头像链接&quot;,</span><br><span class="line">&quot;description&quot;: &quot;站点描述&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;关键词，作为分组名&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;Akilarの糖果屋&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;https://cdn1.tianli0.top/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg&quot;,</span><br><span class="line">&quot;url&quot;: &quot;https://akilar.top/&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;https://akilar.top/img/siteicon/favicon.png&quot;,</span><br><span class="line">&quot;description&quot;: &quot;期待您的光临！&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;糖果屋&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建active label</p><p><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/d63b5c0c.png" alt="新建label用于控制审核结果"></p><p><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/6311f960.png" alt="配置名称描述颜色"></p></li><li><p>提交示例</p><p><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/f87ebfd3.png" alt="填写规范"><br><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/efdfc67d.png" alt="审核通过"></p></li><li><p>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</p></li></ol>              </div>            </details><details yellow><summary> Gitee仓库配置方案 </summary>              <div class='content'>              <ol><li><p>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br>新建文件<code>friend_link\.gitee\ISSUE_TEMPLATE.md</code>,<br>并在其中输入以下内容作为<code>issues</code>模板。</p><div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line">about: 请根据指示规范填写友链格式。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    &quot;title&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;screenshot&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;url&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;avatar&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;description&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;keywords&quot;: &quot;&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;站点名称&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;站点预览图链接&quot;,</span><br><span class="line">&quot;url&quot;: &quot;站点链接&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;头像链接&quot;,</span><br><span class="line">&quot;description&quot;: &quot;站点描述&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;关键词，作为分组名&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;Akilarの糖果屋&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;https://cdn1.tianli0.top/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg&quot;,</span><br><span class="line">&quot;url&quot;: &quot;https://akilar.top/&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;https://akilar.top/img/siteicon/favicon.png&quot;,</span><br><span class="line">&quot;description&quot;: &quot;期待您的光临！&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;糖果屋&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建active标签</p><p><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/7522911b.png" alt="新建标签用于控制审核结果"></p></li></ol><ol start="3"><li><p>提交示例</p><p><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/dd334eea.png" alt="填写规范"><br><img src="https://cdn1.tianli0.top/gh/Akilarlxh/Picgo/assets/72d06ae1.png" alt="审核通过"></p></li><li><p>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</p></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="issues-3"><ol><li><p>时间轴标签<code>timeline</code>渲染（对应仓库已关）<br>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/timeline" href="https://gitee.com/xaoxuu/timeline/issues"><div class="left"><img src="https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/timeline</p><p class="url">https://gitee.com/xaoxuu/timeline/issues</p></div></a></div></li><li><p>网站卡片标签<code>sites</code>渲染</p></li></ol><ul><li><p>gitee仓库示例（对应仓库已关）</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://gitee.com/xaoxuu/friends/issues"><div class="left"><img src="https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://gitee.com/xaoxuu/friends/issues</p></div></a></div></li><li><p>github仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://github.com/xaoxuu/friends/issues"><div class="left"><img src="https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://github.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&state=open&page=1&per_page=100&labels=active"></div></li></ul><ol start="3"><li><p>网站卡片标签<code>sites</code>分组渲染<br>这是<code>Volantis</code>主题官网的「示例博客」页面的数据：<br>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="如何参与项目" href="https://github.com/volantis-x/examples/issues"><div class="left"><img src="https://cdn1.tianli0.top/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">如何参与项目</p><p class="url">https://github.com/volantis-x/examples/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://api.github.com/repos/volantis-x/examples/issues?sort=updated&state=open&page=1&per_page=100"group="version:版本：^4.0,版本：^3.0,版本：^2.0"></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-4"><ol><li><p>时间轴标签<code>timeline</code>渲染</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues timeline | api=https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&amp;creator=xaoxuu&amp;sort=created&amp;direction=desc&amp;page=1&amp;per<span class="emphasis">_page=100 %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>网站卡片标签<code>sites</code>渲染</p></li></ol><ul><li><p>gitee仓库示例</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues sites | api=https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>github仓库示例</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues sites | api=https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %&#125;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>网站卡片标签<code>sites</code>分组渲染<br>这是<code>Volantis</code>主题官网的「示例博客」页面的数据：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues sites | api=https://api.github.com/repos/volantis-x/examples/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100 | group=version:版本：^4.0,版本：^3.0,版本：^2.0 %&#125;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h1><div class="tabs" id="poem"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#poem-1">标签语法</button></li><li class="tab"><button type="button" data-href="#poem-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#poem-3">样式预览</button></li><li class="tab"><button type="button" data-href="#poem-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="poem-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% poem [title],[author] %&#125;</span><br><span class="line">诗词内容</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-2"><ol><li>title：诗词标题</li><li>author：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="poem-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？<br>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h1><div class="note info morden flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="progress"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#progress-1">标签语法</button></li><li class="tab"><button type="button" data-href="#progress-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#progress-3">样式预览</button></li><li class="tab"><button type="button" data-href="#progress-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="progress-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-2"><p><code>width</code>: 0到100的阿拉伯数字<br><code>color</code>: 颜色，取值有<span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span><br><code>text</code>:进度条上的文字内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="progress-3"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Course </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人哔哔: 我的butterfly魔改记录</title>
      <link href="10567.html"/>
      <url>10567.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>其实butterfly确实是hexo主题里为数不多的<b style="color:red">优雅</b><del>（花里胡哨）</del>的主题了</p><p>但看了<a href="https://zfe.space/">@冰卡诺老师</a>和<a href="https://akilar.top/">@Aki店长</a>的博客后，十分感慨：<b style="color:cyan">人与人的butterfly不能一概而论</b></p><p>所以，学习<del>（白嫖）</del>着他们的教程，我也开始走上魔改bf之路</p><hr><blockquote><p>但店长说的好：<b style="color:cyan">魔改一时爽，升级火葬场</b></p></blockquote><p>记录魔改历程也是为了以后主题更新能找到回家的路（毕竟主题更新相当于把大部分魔改推倒重来）</p><p>所以也记录和备份我修改/添加过的文件，方便查询（不含标签外挂）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├─source</span><br><span class="line">│   ├─_data</span><br><span class="line">│   │   └─slider.yml</span><br><span class="line">└─themes</span><br><span class="line">    └─butterfly</span><br><span class="line">        ├─layout</span><br><span class="line">        │   ├─includes</span><br><span class="line">        │   │   ├─post</span><br><span class="line">        │   │   │   └─post-copyright.pug</span><br><span class="line">        │   │   ├─page</span><br><span class="line">        │   │   │   └─flink.pug</span><br><span class="line">        │   ├─index.pug</span><br><span class="line">        │   └─sliderbar.pug</span><br><span class="line">        └─source</span><br><span class="line">            ├─css</span><br><span class="line">            │   ├─_layout</span><br><span class="line">            │   │   ├─categoryBar.styl</span><br><span class="line">            │   │   ├─swiperstyle.styl</span><br><span class="line">            │   │   └─post.styl</span><br><span class="line">            │   ├─_page</span><br><span class="line">            │   │   └─flink.styl</span><br><span class="line">            │   ├─commentsbar.css</span><br><span class="line">            │   ├─index.styl</span><br><span class="line">            │   ├─moments.css</span><br><span class="line">            │   └─add.css</span><br><span class="line">            └─js</span><br><span class="line">                ├─swiper_init.js</span><br><span class="line">                ├─moments.js</span><br><span class="line">                └─kernel.js</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="主题源码修改部分"><a href="#主题源码修改部分" class="headerlink" title="主题源码修改部分"></a>主题源码修改部分</h1><h2 id="留言板动态弹出信封样式"><a href="#留言板动态弹出信封样式" class="headerlink" title="留言板动态弹出信封样式"></a>留言板动态弹出信封样式</h2><blockquote><p>参考教程：店长的<a href="https://akilar.top/posts/e2d3c450/">Envelope Style Comments Bar</a></p></blockquote><p>新增的主题源码：<br><code>[root]\themes\butterfly\source\css\commentsbar.css</code></p><hr><h2 id="友链样式魔改"><a href="#友链样式魔改" class="headerlink" title="友链样式魔改"></a>友链样式魔改</h2><blockquote><p>参考教程：店长的<a href="https://akilar.top/posts/57291286/">Friend Link Card Beautify</a></p></blockquote><p>修改的主题源码：<br><code>[root]\themes\butterfly\layout\includes\page\flink.pug</code><br><code>[root]\themes\butterfly\source\css\_page\flink.styl</code></p><hr><h2 id="首页磁贴"><a href="#首页磁贴" class="headerlink" title="首页磁贴"></a>首页磁贴</h2><blockquote><p>参考教程：店长的<a href="https://akilar.top/posts/a9131002/">Categories Magnet</a></p></blockquote><p>修改的主题源码：<br><code>[root]\themes\butterfly\layout\index.pug</code></p><p>新增的主题源码：<br><code>[root]\themes\butterfly\source\css\_layout\categoryBar.styl</code></p><hr><h2 id="首页置顶轮播图"><a href="#首页置顶轮播图" class="headerlink" title="首页置顶轮播图"></a>首页置顶轮播图</h2><blockquote><p>参考教程：店长的<a href="https://akilar.top/posts/8e1264d1/">Slider Bar</a></p></blockquote><p>新增的主题源码：<br><code>[root]\themes\butterfly\layout\includes\sliderbar.pug</code><br><code>[root]\themes\butterfly\source\js\swiper_init.js</code><br><code>[root]\themes\butterfly\source\css\_layout\swiperstyle.styl</code></p><p>修改的主题源码：<br><code>[root]\themes\butterfly\source\css\index.styl</code></p><p>新增配置文件：<br><code>[root]\source\_data\slider.yml</code></p><hr><h2 id="版权信息美化"><a href="#版权信息美化" class="headerlink" title="版权信息美化"></a>版权信息美化</h2><blockquote><p>参考教程：Nesxc的<a href="https://www.nesxc.com/post/hexocc.html">butterfly版权美化教程</a></p></blockquote><p>修改的主题源码：<br><code>[root]\themes\butterfly\layout\includes\post\post-copyright.pug</code><br><code>[root]\themes\butterfly\source\css\_layout\post.styl</code></p><hr><h2 id="拒绝IE-从我做起"><a href="#拒绝IE-从我做起" class="headerlink" title="拒绝IE,从我做起"></a>拒绝IE,从我做起</h2><blockquote><p>参考教程: Nesxc的<a href="https://www.nesxc.com/post/noie.html">Butterfly检测IE内核跳转教程</a></p></blockquote><p>新增的主题源码：<br><code>[root]\themes\butterfly\source\js\kernel.js</code><br><code>[root]\themes\butterfly\source\kernel.html</code></p><hr><h2 id="友链朋友圈样式调整"><a href="#友链朋友圈样式调整" class="headerlink" title="友链朋友圈样式调整"></a>友链朋友圈样式调整</h2><blockquote><p>如果想整友链朋友圈，参考教程：冰老师的<a href="https://zfe.space/post/friend-link-circle.html">基于 hexo 的友链朋友圈 Beta1.5</a></p></blockquote><p>以下是我自己的修改(其实那个css可以整进js里的，只不过懒得一个个去调，干脆自己引入了)</p><p>新增的主题源码:<br><code>[root]\themes\butterfly\source\js\moments.js</code><br><code>[root]\themes\butterfly\source\css\moments.css</code></p><p>js源码修改（做了重新布局，冰老师的UI好丑）：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> requests_url = <span class="string">&#x27;https://hexo-circle-of-friends-api-2x-ercha.vercel.app/api&#x27;</span>; <span class="comment">//api地址</span></span><br><span class="line"><span class="keyword">var</span> orign_data = []; <span class="comment">//api请求所得到的源数据</span></span><br><span class="line"><span class="keyword">var</span> maxnumber = <span class="number">20</span>; <span class="comment">//页面展示文章数量</span></span><br><span class="line"><span class="keyword">var</span> addnumber = <span class="number">10</span>; <span class="comment">//每次加载增加的篇数</span></span><br><span class="line"><span class="keyword">var</span> opentype = <span class="string">&#x27;_blank&#x27;</span>;  <span class="comment">//&#x27;_blank&#x27;打开新标签,&#x27;_self&#x27;本窗口打开</span></span><br><span class="line"><span class="keyword">var</span> nofollow = <span class="literal">true</span>; <span class="comment">//禁止搜索引擎抓取</span></span><br><span class="line"><span class="comment">// 自定义loading图 例如: var loadingCutom = &#x27;&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;&#x27;</span></span><br><span class="line"><span class="comment">// 自定义loading图 例如: var loadingCutom = &#x27;&lt;img src=&quot;你的图片地址&quot; alt=&quot;加载中...&quot;&gt;&#x27;</span></span><br><span class="line"><span class="keyword">var</span> loadingCutom = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//处理数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;moments_container&#x27;</span>))&#123;</span><br><span class="line">  <span class="comment">//添加加载动画</span></span><br><span class="line">  <span class="keyword">var</span> loading_pic = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;moments_container&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 判断loadingCutom值是否为空</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">typeof</span> loadingCutom == <span class="string">&quot;undefined&quot;</span> || loadingCutom == <span class="literal">null</span> || loadingCutom === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    loading_pic.innerHTML = <span class="string">&#x27;&lt;style&gt;.loader &#123; color: #d9dad8; font-size: 90px; text-indent: -9999em; overflow: hidden; width: 1em; height: 1em; border-radius: 50%; margin: 72px auto; position: relative; -webkit-transform: translateZ(0); -ms-transform: translateZ(0); transform: translateZ(0); -webkit-animation: load6 1.7s infinite ease, round 1.7s infinite ease; animation: load6 1.7s infinite ease, round 1.7s infinite ease; &#125; @-webkit-keyframes load6 &#123; 0% &#123; box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em; &#125; 5%, 95% &#123; box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em; &#125; 10%, 59% &#123; box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em; &#125; 20% &#123; box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em; &#125; 38% &#123; box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em; &#125; 100% &#123; box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em; &#125; &#125; @keyframes load6 &#123; 0% &#123; box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em; &#125; 5%, 95% &#123; box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em; &#125; 10%, 59% &#123; box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em; &#125; 20% &#123; box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em; &#125; 38% &#123; box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em; &#125; 100% &#123; box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em; &#125; &#125; @-webkit-keyframes round &#123; 0% &#123; -webkit-transform: rotate(0deg); transform: rotate(0deg); &#125; 100% &#123; -webkit-transform: rotate(360deg); transform: rotate(360deg); &#125; &#125; @keyframes round &#123; 0% &#123; -webkit-transform: rotate(0deg); transform: rotate(0deg); &#125; 100% &#123; -webkit-transform: rotate(360deg); transform: rotate(360deg); &#125; &#125;&lt;/style&gt;&lt;center&gt;&lt;span id=&quot;moments_loading&quot;&gt;&lt;div class=&quot;loader&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    loading_pic.innerHTML = <span class="string">&#x27;&lt;center&gt;&lt;span id=&quot;moments_loading&quot;&gt;&#x27;</span>+loadingCutom+<span class="string">&#x27;&lt;/span&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fetch(requests_url).then(</span><br><span class="line">      data =&gt; data.json()</span><br><span class="line">  ).then(</span><br><span class="line">      data =&gt; &#123;</span><br><span class="line">        orign_data = data;</span><br><span class="line">        data_handle(nofollow,orign_data, maxnumber)</span><br><span class="line">      &#125;</span><br><span class="line">  )&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data_handle = <span class="function">(<span class="params">nofollow,data, maxnumber</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> today = todaypost();</span><br><span class="line">  <span class="keyword">var</span> Datetody = <span class="keyword">new</span> <span class="built_in">Date</span>(today);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> item = <span class="number">0</span>; item &lt; data[<span class="number">1</span>].length; item++) &#123;</span><br><span class="line">    <span class="keyword">var</span> Datedate = <span class="keyword">new</span> <span class="built_in">Date</span>(data[<span class="number">1</span>][item][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (Datedate &gt; Datetody) &#123;</span><br><span class="line">      data[<span class="number">1</span>].splice(item--, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> today_post = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> error = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> unique_live_link;</span><br><span class="line">  <span class="keyword">var</span> datalist = data[<span class="number">1</span>].slice(<span class="number">0</span>, maxnumber);</span><br><span class="line">  <span class="keyword">var</span> listlenth = data[<span class="number">1</span>].length;</span><br><span class="line">  <span class="keyword">var</span> user_lenth = data[<span class="number">0</span>].length;</span><br><span class="line">  <span class="keyword">var</span> datalist_slice = slice_month(datalist);</span><br><span class="line">  <span class="keyword">var</span> last_update_time = timezoon(datalist_slice);</span><br><span class="line">  <span class="keyword">var</span> link_list = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">of</span> data[<span class="number">1</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span> (item[<span class="number">1</span>] === today) &#123;</span><br><span class="line">      today_post += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    link_list.push(item[<span class="number">3</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> arr = unique(link_list);</span><br><span class="line">  unique_live_link = arr.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">of</span> data[<span class="number">0</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span> (item[<span class="number">3</span>] === <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">      error += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> html_item = <span class="string">&#x27;&lt;h2&gt;统计信息&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">  html_item += <span class="string">&#x27;&lt;div id=&quot;info_user_pool&quot; class=&quot;moments-item info_user_pool&quot; style=&quot;&quot;&gt;&#x27;</span>;</span><br><span class="line">  html_item += <span class="string">&#x27;&lt;div class=&quot;moments_chart&quot;&gt;&lt;span class=&quot;moments_post_info_title&quot;&gt;当前友链数：&lt;/span&gt;&lt;span class=&quot;moments_post_info_number&quot;&gt;&#x27;</span> + user_lenth + <span class="string">&#x27; 个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;moments_post_info_title&quot;&gt;失败数：&lt;/span&gt;&lt;span class=&quot;moments_post_info_number&quot;&gt;&#x27;</span> + error + <span class="string">&#x27; 个&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">  html_item += <span class="string">&#x27;&lt;div class=&quot;moments_chart&quot;&gt;&lt;span class=&quot;moments_post_info_title&quot;&gt;活跃友链数：&lt;/span&gt;&lt;span class=&quot;moments_post_info_number&quot;&gt;&#x27;</span> + unique_live_link + <span class="string">&#x27; 个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;moments_post_info_title&quot;&gt;当前库存：&lt;/span&gt;&lt;span class=&quot;moments_post_info_number&quot;&gt;&#x27;</span> + listlenth + <span class="string">&#x27; 篇&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">  html_item += <span class="string">&#x27;&lt;div class=&quot;moments_chart&quot;&gt;&lt;span class=&quot;moments_post_info_title&quot;&gt;今日更新：&lt;/span&gt;&lt;span class=&quot;moments_post_info_number&quot;&gt;&#x27;</span> + today_post + <span class="string">&#x27; 篇&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;moments_post_info_title&quot;&gt;最近更新：&lt;/span&gt;&lt;span class=&quot;moments_post_info_number&quot;&gt;&#x27;</span> + last_update_time + <span class="string">&#x27;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">  html_item += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> month_item <span class="keyword">of</span> datalist_slice) &#123;</span><br><span class="line">    html_item += <span class="string">&#x27;&lt;h2&gt;&#x27;</span> + month_item[<span class="number">0</span>] + <span class="string">&#x27;&lt;/h2&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> post_item <span class="keyword">of</span> month_item[<span class="number">1</span>]) &#123;</span><br><span class="line">      <span class="keyword">var</span> rel = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      <span class="keyword">if</span> (nofollow &amp;&amp; opentype == <span class="string">&#x27;_blank&#x27;</span>)&#123;</span><br><span class="line">        rel = <span class="string">&#x27;noopener nofollow&#x27;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nofollow)&#123;</span><br><span class="line">        rel = <span class="string">&#x27;nofollow&#x27;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(opentype == <span class="string">&#x27;_blank&#x27;</span>)&#123;</span><br><span class="line">        rel = <span class="string">&#x27;noopener&#x27;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        rel = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      html_item += <span class="string">&#x27; &lt;div class=&quot;moments-item&quot;&gt;&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//左侧头像</span></span><br><span class="line">        html_item += <span class="string">&#x27; &lt;a target=&quot;&#x27;</span> + opentype + <span class="string">&#x27;&quot; class=&quot;moments-item-img&quot; href=&quot;&#x27;</span> + post_item[<span class="number">2</span>] + <span class="string">&#x27;&quot; title=&quot;&#x27;</span> + post_item[<span class="number">0</span>] + <span class="string">&#x27;&quot;rel=&quot;&#x27;</span>+ rel + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">        html_item += <span class="string">&#x27;&lt;img onerror=&quot;this.onerror=null,this.src=&amp;quot;https://cdn1.tianli0.top/gh/Zfour/Butterfly-friend-poor-html/friendcircle/404.png&amp;quot;&quot;&#x27;</span>;</span><br><span class="line">        html_item += <span class="string">&#x27; src=&quot;&#x27;</span> + post_item[<span class="number">4</span>] + <span class="string">&#x27;&quot;&gt;&lt;/a&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">//右侧文章信息</span></span><br><span class="line">        html_item += <span class="string">&#x27;&lt;div class=&quot;moments-item-info&quot;&gt;&#x27;</span>;</span><br><span class="line">          <span class="comment">//文章名</span></span><br><span class="line">          html_item += <span class="string">`&lt;a target=&quot;<span class="subst">$&#123;opentype&#125;</span>&quot; class=&quot;moments-item-title&quot; href=&quot;<span class="subst">$&#123;post_item[<span class="number">2</span>]&#125;</span>&quot; title=&quot;<span class="subst">$&#123;post_item[<span class="number">0</span>]&#125;</span>&quot;rel=&quot;<span class="subst">$&#123;rel&#125;</span>&quot;&gt;<span class="subst">$&#123;post_item[<span class="number">0</span>]&#125;</span>&lt;/a&gt;`</span>;</span><br><span class="line">          </span><br><span class="line">          html_item += <span class="string">&#x27;&lt;div class=&quot;moments-item-time&quot;&gt;&#x27;</span>;</span><br><span class="line">            <span class="comment">//文章作者</span></span><br><span class="line">            html_item += <span class="string">&#x27;&lt;span&gt;&#x27;</span> + post_item[<span class="number">3</span>] + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">            <span class="comment">//文章时间</span></span><br><span class="line">            html_item += <span class="string">&#x27;&lt;time class=&quot;moments_post_time&quot; datetime=&quot;&#x27;</span> + post_item[<span class="number">1</span>] + <span class="string">&#x27;&quot; title=&quot;&#x27;</span> + post_item[<span class="number">1</span>] + <span class="string">&#x27;&quot;&gt;&#x27;</span> + post_item[<span class="number">1</span>] + <span class="string">&#x27;&lt;/time&gt;&#x27;</span>;</span><br><span class="line">          html_item += <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">        html_item += <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line">      </span><br><span class="line">      html_item += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (data[<span class="number">1</span>].length - maxnumber &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    html_item += <span class="string">&#x27;&lt;div style=&quot;text-align: center&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;moments_load_button&quot; &#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;onclick=&quot;load_more_post()&quot;&gt;加载更多...&lt;/button&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  html_item += <span class="string">&#x27;&lt;style&gt;.moments-item-info span&#123;padding-left:.3rem;padding-right:.3rem&#125;.moments_post_time time&#123;padding-left:.3rem;cursor:default&#125;.moments_post_info_title&#123;font-weight:700&#125;.moments_post_info_number&#123;float:right&#125;.moments_chart&#123;align-items:flex-start;flex:1;width:100px;height:60px;margin:20px&#125;@media screen and (max-width:500px)&#123;.info_user_pool&#123;padding:10px;flex-direction:column;max-height:200px&#125;.moments_chart&#123;flex:0;width:100%;height:160px;margin:0&#125;&#125;.moments-item:before&#123;border:0&#125;@media screen and (min-width:500px)&#123;.moments_post_time&#123;float:right&#125;&#125;.moments_load_button&#123;-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;color:#555;padding:.5em 1.25em&#125;.moments_load_button:hover&#123;color:#3090e4;border-color:#3090e4&#125;.moments-item&#123;position:relative;display:-webkit-box;display:-moz-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-moz-box-align:center;-o-box-align:center;-ms-flex-align:center;-webkit-align-items:center;align-items:center;margin:0 0 1rem .5rem;-webkit-transition:all .2s ease-in-out;-moz-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;-ms-transition:all .2s ease-in-out;transition:all .2s ease-in-out;box-shadow:rgba(0,0,0,0.07) 0 2px 2px 0,rgba(0,0,0,0.1) 0 1px 5px 0;border-radius:2px&#125;.moments-item-img&#123;overflow:hidden;width:80px;height:80px&#125;.moments-item-img img&#123;max-width:100%;width:100%;height:100%;object-fit:cover&#125;.moments-item-info&#123;-webkit-box-flex:1;-moz-box-flex:1;-o-box-flex:1;box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;padding:0 .8rem&#125;.moments-item-title&#123;display:-webkit-box;overflow:hidden;-webkit-box-orient:vertical;font-size:1.1em;-webkit-transition:all .3s;-moz-transition:all .3s;-o-transition:all .3s;-ms-transition:all .3s;transition:all .3s;-webkit-line-clamp:1&#125;&lt;/style&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> moments_container = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;moments_container&#x27;</span>) ;</span><br><span class="line">  append_div(moments_container, html_item)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> load_more_post = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;moments_container&#x27;</span>))&#123;</span><br><span class="line">    maxnumber = maxnumber + addnumber;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;moments_container&#x27;</span>) .innerHTML = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    data_handle(nofollow,orign_data, maxnumber)&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//加载更多文章</span></span><br><span class="line"><span class="comment">//将html放入指定id的div容器</span></span><br><span class="line"><span class="keyword">var</span> append_div = <span class="function">(<span class="params">parent, text</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;moments_container&#x27;</span>))&#123;</span><br><span class="line">    loading_pic.innerHTML = <span class="string">``</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> text === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> temp = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    temp.innerHTML = text;</span><br><span class="line">    <span class="comment">// 防止元素太多 进行提速</span></span><br><span class="line">    <span class="keyword">var</span> frag = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">    <span class="keyword">while</span> (temp.firstChild) &#123;</span><br><span class="line">      frag.appendChild(temp.firstChild);</span><br><span class="line">    &#125;</span><br><span class="line">    parent.appendChild(frag);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    parent.appendChild(text);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//去重</span></span><br><span class="line"><span class="keyword">var</span> unique = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr))</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//时区优化</span></span><br><span class="line"><span class="keyword">var</span> formatDate = <span class="function">(<span class="params">strDate</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.parse(strDate.replace(<span class="regexp">/-/g</span>, <span class="string">&quot;/&quot;</span>)));</span><br><span class="line">    <span class="keyword">var</span> gettimeoffset;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">Date</span>().getTimezoneOffset()) &#123;</span><br><span class="line">      gettimeoffset = <span class="keyword">new</span> <span class="built_in">Date</span>().getTimezoneOffset();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      gettimeoffset = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> timeoffset = gettimeoffset * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> len = date.getTime();</span><br><span class="line">    <span class="keyword">var</span> date2 = <span class="keyword">new</span> <span class="built_in">Date</span>(len - timeoffset);</span><br><span class="line">    <span class="keyword">var</span> sec = date2.getSeconds().toString();</span><br><span class="line">    <span class="keyword">var</span> min = date2.getMinutes().toString();</span><br><span class="line">    <span class="keyword">if</span> (sec.length === <span class="number">1</span>) &#123;</span><br><span class="line">      sec = <span class="string">&quot;0&quot;</span> + sec;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (min.length === <span class="number">1</span>) &#123;</span><br><span class="line">      min = <span class="string">&quot;0&quot;</span> + min;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> date2.getFullYear().toString() + <span class="string">&quot;/&quot;</span> + (date2.getMonth() + <span class="number">1</span>).toString() + <span class="string">&quot;/&quot;</span> + date2.getDate().toString() + <span class="string">&quot; &quot;</span> + date2.getHours().toString() + <span class="string">&quot;:&quot;</span> + min + <span class="string">&quot;:&quot;</span> + sec</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> timezoon = <span class="function">(<span class="params">datalist_slice</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> time = datalist_slice[<span class="number">0</span>][<span class="number">1</span>][<span class="number">0</span>][<span class="number">5</span>];</span><br><span class="line">  <span class="keyword">return</span> formatDate(time)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//今日时间</span></span><br><span class="line"><span class="keyword">var</span> todaypost = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">var</span> year = date.getFullYear();</span><br><span class="line">  <span class="keyword">var</span> month = (date.getMonth() + <span class="number">1</span>).toString();</span><br><span class="line">  <span class="keyword">var</span> day = (date.getDate()).toString();</span><br><span class="line">  <span class="keyword">if</span> (month.length === <span class="number">1</span>) &#123;</span><br><span class="line">    month = <span class="string">&quot;0&quot;</span> + month;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (day.length === <span class="number">1</span>) &#123;</span><br><span class="line">    day = <span class="string">&quot;0&quot;</span> + day;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + day</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//月份切片</span></span><br><span class="line"><span class="keyword">var</span> slice_month = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> monthlist = [];</span><br><span class="line">  <span class="keyword">var</span> datalist = [];</span><br><span class="line">  <span class="keyword">var</span> data_slice = data;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> data_slice) &#123;</span><br><span class="line">    data_slice[item].push(item);</span><br><span class="line">    <span class="keyword">if</span> (data_slice[item][<span class="number">1</span>].lenth !== <span class="number">10</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> list = data_slice[item][<span class="number">1</span>].split(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">      <span class="keyword">if</span> (list[<span class="number">1</span>].length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        list[<span class="number">1</span>] = <span class="string">&quot;0&quot;</span> + list[<span class="number">1</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (list[<span class="number">2</span>].length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        list[<span class="number">2</span>] = <span class="string">&quot;0&quot;</span> + list[<span class="number">2</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      data_slice[item][<span class="number">1</span>] = list.join(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> month = data_slice[item][<span class="number">1</span>].slice(<span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span> (monthlist.indexOf(month) !== -<span class="number">1</span>) &#123;</span><br><span class="line">      datalist[monthlist.length - <span class="number">1</span>][<span class="number">1</span>].push(data_slice[item])</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      monthlist.push(month);</span><br><span class="line">      datalist.push([month, [data_slice[item]]])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> mounthgroup <span class="keyword">of</span> datalist) &#123;</span><br><span class="line">    mounthgroup.push(mounthgroup[<span class="number">1</span>][<span class="number">0</span>][<span class="number">6</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> datalist</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>引入的css修改了字体样式和位置：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.moments-item-img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.moments-item-info</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: .<span class="number">3rem</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: .<span class="number">3rem</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.moments-item-title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4978f5</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.moments_post_time</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff612c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">a</span><span class="selector-class">.moments-item-title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#cfa8ff</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="基于Butterfly的外挂标签引入"><a href="#基于Butterfly的外挂标签引入" class="headerlink" title="基于Butterfly的外挂标签引入"></a>基于Butterfly的外挂标签引入</h2><blockquote><p>参考教程：店长的<a href="https://akilar.top/posts/615e2dec/">Akilarの糖果屋-基于Butterfly的外挂标签引入</a></p></blockquote><p>因为这里涉及的源码修改都是直接拷贝的，所以不写新增和修改源码了。</p><hr><h1 id="非主题源码修改区"><a href="#非主题源码修改区" class="headerlink" title="非主题源码修改区"></a>非主题源码修改区</h1><h2 id="双栏卡片主页文章"><a href="#双栏卡片主页文章" class="headerlink" title="双栏卡片主页文章"></a>双栏卡片主页文章</h2><blockquote><p>参考教程：冰老师的<a href="https://zfe.space/post/52914.html">教程：基于Butterfly主题的双栏卡片主页文章css样式</a></p></blockquote><p>(我这里直接在主题配置文件引入冰老师的css，所以不涉及其他修改)</p><hr><h2 id="字体样式修改"><a href="#字体样式修改" class="headerlink" title="字体样式修改"></a>字体样式修改</h2><blockquote><p>参考教程：店长的<a href="https://akilar.top/posts/ebf20e02/">Custom Beautify</a></p></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&#x27;aqqxs&#x27;</span> ;  <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">    <span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&#x27;https://cdn1.tianli0.top/gh/2x-ercha/cdn-for-try/fonts/FXAiQingQiXiangSuo.ttf&#x27;</span>); <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">    <span class="attribute">font-display</span> : swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-id">#site-name</span>,<span class="selector-tag">span</span><span class="selector-id">#subtitle</span>,<span class="selector-tag">a</span><span class="selector-class">.site-page</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.title</span>,</span><br><span class="line"><span class="selector-id">#aside-content</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.article-sort-item-title</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.article-title</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.categoryBar-list-link</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.blog-slider__title</span>,</span><br><span class="line"><span class="selector-class">.article-sort-title</span>,</span><br><span class="line"><span class="selector-class">.tag-cloud-title</span>,</span><br><span class="line"><span class="selector-class">.category-title</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.category-list-link</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="版权字体微调"><a href="#版权字体微调" class="headerlink" title="版权字体微调"></a>版权字体微调</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;aqqxs&#x27;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-size</span>: large</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="首页磁铁字体微调"><a href="#首页磁铁字体微调" class="headerlink" title="首页磁铁字体微调"></a>首页磁铁字体微调</h2><p>其实就是用阴影给分类的标题上了描边</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-class">.categoryBar-list-link</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#000000</span>1a <span class="number">1px</span> <span class="number">0</span> <span class="number">0</span>, <span class="number">#000000</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span>, <span class="number">#000000</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">0</span>, <span class="number">#000000</span>00 <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="鼠标样式及各种透明"><a href="#鼠标样式及各种透明" class="headerlink" title="鼠标样式及各种透明"></a>鼠标样式及各种透明</h2><blockquote><p>参考文章：小康的<a href="https://www.antmoe.com/posts/a811d614/index.html">Hexo 博客之 butterfly 主题优雅魔改系列</a>和店长的<a href="https://akilar.top/posts/ebf20e02/">Custom Beautify</a></p></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 鼠标样式 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">https://cdn1.tianli0.top/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur</span>),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">https://cdn1.tianli0.top/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur</span>),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 头图透明 */</span></span><br><span class="line"><span class="selector-id">#page-header</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.post-bg</span>:before &#123;</span><br><span class="line">  background-color: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*夜间模式伪类遮罩层透明*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Twikoo评论框高度"><a href="#Twikoo评论框高度" class="headerlink" title="Twikoo评论框高度"></a>Twikoo评论框高度</h2><p>根据店长的建议修改成了这样：</p><blockquote><ul><li>首先只需要设置最小高度即可，不需要再加一条高度（虽然文本框是超出转换为滚动条的，但是还是要符合开发逻辑才行啊）。</li><li>然后加一条在聚焦状态下的样式，隐藏图片。这样手机端输入的时候不会被背景图片影响文字输入。</li></ul></blockquote><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tk-input</span><span class="selector-attr">[data-v-619b4c52]</span></span><br><span class="line">  <span class="selector-class">.el-textarea__inner</span>&#123;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">210px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.el-textarea__inner</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">      <span class="attribute">background-image</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="卡片背景透明度颜色重写"><a href="#卡片背景透明度颜色重写" class="headerlink" title="卡片背景透明度颜色重写"></a>卡片背景透明度颜色重写</h2><p><strong>PS: 这个其实准备重新弄了</strong></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="comment">/* --card-bg: #fff; */</span></span><br><span class="line">  --card-bg: <span class="number">#ffefef</span>d9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="comment">/* --card-bg: #121212; */</span></span><br><span class="line">  --card-bg: <span class="number">#121212</span>88;</span><br><span class="line">  --btn-hover-<span class="attribute">color</span>: <span class="number">#787878</span>;</span><br><span class="line">  --btn-bg: <span class="number">#1f1f1f</span>;</span><br><span class="line">  --btn-hover-<span class="attribute">color</span>: <span class="number">#ff3f3f</span>;</span><br><span class="line">  --btn-bg: <span class="number">#a153ff</span>;</span><br><span class="line">  <span class="comment">/* --font-color: rgba(255,255,255,0.7); */</span></span><br><span class="line">  <span class="comment">/* --hr-border: rgba(255,255,255,0.4); */</span></span><br><span class="line">  --<span class="attribute">font</span>-<span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  --hr-<span class="attribute">border</span>: <span class="built_in">rgb</span>(<span class="number">161</span>, <span class="number">83</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="标签外挂css微调"><a href="#标签外挂css微调" class="headerlink" title="标签外挂css微调"></a>标签外挂css微调</h2><p>店长那直接白嫖过来的标签外挂不怎么适合我的颜色魔改，所以也相应地做了微调</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#article-container</span> <span class="selector-class">.tabs</span> &gt; <span class="selector-class">.tab-contents</span> <span class="selector-class">.tab-item-content</span><span class="selector-class">.active</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>aa;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#article-container</span> <span class="selector-class">.tabs</span> &gt; <span class="selector-class">.tab-contents</span> <span class="selector-class">.tab-item-content</span><span class="selector-class">.active</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000000</span>5e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 贰猹随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
            <tag> Course </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人哔哔: 关于我为什么搞博客</title>
      <link href="46581.html"/>
      <url>46581.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h1><h3 id="搞清为什么做一件事，对于我来说是十分重要的。"><a href="#搞清为什么做一件事，对于我来说是十分重要的。" class="headerlink" title="搞清为什么做一件事，对于我来说是十分重要的。"></a>搞清为什么做一件事，对于我来说是十分重要的。</h3><p>博客这个东西，对于我来说应当是遥远的记忆了。之前高一高二还在打 <strong>noip</strong> 的时候，曾在洛谷上打过几篇题解。也是那时，初次了解到了博客。</p><p>不过那时写题解只能说是一时兴起，再加上后来退赛之后，学业繁重，就没空去运维了，所以没做多少就咕咕咕了。</p><p>国内外有挺多平台是支持我们这些穷苦老百姓白嫖一定的空间去制作自己的博客的，也给了相当多样的主题。我接触过的有 <strong>CSDN 社区</strong>，<strong>博客园</strong>，<strong>阿里云的美站</strong>（这个不能白嫖），还有以前我用的<strong>洛谷</strong>，现在用的 <strong>github page</strong> 等等。许多网站都是给了特别傻瓜式的操作平台和后台文章部署。虽然这样做确实简单了许多，对于我这种完全不懂 <code>html</code> 和 <code>css </code>的蒟蒻来讲更是天堂。不过还是限制了许多想象的空间，比如自己美化主题页面，导入一些小的板块啥的就特别难受，缺了一点码代码的乐趣。当我了解到有 <a href="https://pages.github.com/">github page</a> 和 <a href="https://hexo.io/zh-cn/">hexo</a> 这种神奇的东西可以满足我的需求时，我一下子有了搭博客的想法。于是我开始找相关的教程进行学习。</p><blockquote><p>教程来自 <a href="https://blog.csdn.net/sinat_37781304">zjufangzh</a> 的 <a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a> </p></blockquote><h4 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h4><p>关键的一个契机是我的一个朋友 @<a href="http://lijyya.site/">lijyya</a> 刚好开始搭建她的博客。于是乎我觉得我也不能落后，才开始做这件事，进而了解到 <strong>github page</strong> 。</p><h1 id="Power"><a href="#Power" class="headerlink" title="Power"></a>Power</h1><h3 id="有想法是不够的，关键是要让临时起意变成持之以恒。"><a href="#有想法是不够的，关键是要让临时起意变成持之以恒。" class="headerlink" title="有想法是不够的，关键是要让临时起意变成持之以恒。"></a>有想法是不够的，关键是要让临时起意变成持之以恒。</h3><p>所以，我<del>一气之下</del>买了 5 年的域名<del>（ 冲动是魔鬼 ）</del>。</p><p>同时我作了一点小宣传，想要让我的小伙伴们来督促督促我。</p><p><del>（你们的关注是我前进的最好动力！！！）</del></p><h1 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h1><p>当然搭建过程也遇到了各种各样的 <del>sb</del> 问题。开始搭建的时候用的是 windows ， windows 系统搞这种运维总会出现一些无法准确描述的问题。这种事情在度娘上也无法解决。</p><p>所以我选择求教大佬。在求教之前，我先在自己的电脑上安装了 ubuntu 和 windows 双系统，并在 ubuntu 上重新搭建我的博客。</p><p>这次终于是比较顺利了点，同时<del>不懂教程人话的</del>我向大佬 @<a href="https://bili33.top/">GamerNoTitle</a> 求教了许多问题。</p><p>这里致谢大佬在高三百忙之际还能给我一点指点，当然这时候我也不能经常性的骚扰大佬啦，很多东西还是要自己学习的。</p><p>经历了两天肝到半夜的搭建时间，终于是把博客搭得有个样了。</p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>虽然 <strong>hexo</strong> 写文章也是挺简单的，它内置了 <strong>markdown</strong> ，可以让我在打好一个文章后经过 <strong>markdown</strong> 的格式修饰就可直接发布。这个过程对于我来说显然轻松了很多，也不用再花时间去学习html。同时他的模板代码我是可以修改的，这又满足了我的需求（虽然我现在还不会）～～～</p><p>今后这个博客我会不断的更新，会推一些自己的日记啦，自己 <strong>ps</strong> 画的图<del>（手残）</del>，一些 <strong>C++/Python</strong> 的学习记录/题解，一些奇怪软件/插件的使用，还有以后可能会做的项目。</p><hr><h1 id="所以，这个博客，算是我大学未来四年的生活学习记录了！"><a href="#所以，这个博客，算是我大学未来四年的生活学习记录了！" class="headerlink" title="所以，这个博客，算是我大学未来四年的生活学习记录了！"></a>所以，这个博客，算是我大学未来四年的生活学习记录了！</h1><hr>]]></content>
      
      
      <categories>
          
          <category> 贰猹随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
